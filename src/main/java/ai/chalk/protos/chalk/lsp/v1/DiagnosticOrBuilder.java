// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/lsp/v1/lsp.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.lsp.v1;

public interface DiagnosticOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.lsp.v1.Diagnostic)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.lsp.v1.Range range = 1 [json_name = "range"];</code>
   * @return Whether the range field is set.
   */
  boolean hasRange();
  /**
   * <code>.chalk.lsp.v1.Range range = 1 [json_name = "range"];</code>
   * @return The range.
   */
  ai.chalk.protos.chalk.lsp.v1.Range getRange();
  /**
   * <code>.chalk.lsp.v1.Range range = 1 [json_name = "range"];</code>
   */
  ai.chalk.protos.chalk.lsp.v1.RangeOrBuilder getRangeOrBuilder();

  /**
   * <code>string message = 2 [json_name = "message"];</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <code>string message = 2 [json_name = "message"];</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <code>.chalk.lsp.v1.DiagnosticSeverity severity = 3 [json_name = "severity"];</code>
   * @return The enum numeric value on the wire for severity.
   */
  int getSeverityValue();
  /**
   * <code>.chalk.lsp.v1.DiagnosticSeverity severity = 3 [json_name = "severity"];</code>
   * @return The severity.
   */
  ai.chalk.protos.chalk.lsp.v1.DiagnosticSeverity getSeverity();

  /**
   * <code>optional string code = 4 [json_name = "code"];</code>
   * @return Whether the code field is set.
   */
  boolean hasCode();
  /**
   * <code>optional string code = 4 [json_name = "code"];</code>
   * @return The code.
   */
  java.lang.String getCode();
  /**
   * <code>optional string code = 4 [json_name = "code"];</code>
   * @return The bytes for code.
   */
  com.google.protobuf.ByteString
      getCodeBytes();

  /**
   * <code>.chalk.lsp.v1.CodeDescription code_description = 5 [json_name = "codeDescription"];</code>
   * @return Whether the codeDescription field is set.
   */
  boolean hasCodeDescription();
  /**
   * <code>.chalk.lsp.v1.CodeDescription code_description = 5 [json_name = "codeDescription"];</code>
   * @return The codeDescription.
   */
  ai.chalk.protos.chalk.lsp.v1.CodeDescription getCodeDescription();
  /**
   * <code>.chalk.lsp.v1.CodeDescription code_description = 5 [json_name = "codeDescription"];</code>
   */
  ai.chalk.protos.chalk.lsp.v1.CodeDescriptionOrBuilder getCodeDescriptionOrBuilder();

  /**
   * <code>repeated .chalk.lsp.v1.DiagnosticRelatedInformation related_information = 6 [json_name = "relatedInformation"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.lsp.v1.DiagnosticRelatedInformation> 
      getRelatedInformationList();
  /**
   * <code>repeated .chalk.lsp.v1.DiagnosticRelatedInformation related_information = 6 [json_name = "relatedInformation"];</code>
   */
  ai.chalk.protos.chalk.lsp.v1.DiagnosticRelatedInformation getRelatedInformation(int index);
  /**
   * <code>repeated .chalk.lsp.v1.DiagnosticRelatedInformation related_information = 6 [json_name = "relatedInformation"];</code>
   */
  int getRelatedInformationCount();
  /**
   * <code>repeated .chalk.lsp.v1.DiagnosticRelatedInformation related_information = 6 [json_name = "relatedInformation"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.lsp.v1.DiagnosticRelatedInformationOrBuilder> 
      getRelatedInformationOrBuilderList();
  /**
   * <code>repeated .chalk.lsp.v1.DiagnosticRelatedInformation related_information = 6 [json_name = "relatedInformation"];</code>
   */
  ai.chalk.protos.chalk.lsp.v1.DiagnosticRelatedInformationOrBuilder getRelatedInformationOrBuilder(
      int index);
}
