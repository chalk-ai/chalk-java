// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/lsp/v1/lsp.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.lsp.v1;

/**
 * Protobuf type {@code chalk.lsp.v1.LSP}
 */
public final class LSP extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chalk.lsp.v1.LSP)
    LSPOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LSP.newBuilder() to construct.
  private LSP(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LSP() {
    diagnostics_ = java.util.Collections.emptyList();
    actions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LSP();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.lsp.v1.LspProto.internal_static_chalk_lsp_v1_LSP_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.lsp.v1.LspProto.internal_static_chalk_lsp_v1_LSP_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.lsp.v1.LSP.class, ai.chalk.protos.chalk.lsp.v1.LSP.Builder.class);
  }

  public static final int DIAGNOSTICS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams> diagnostics_;
  /**
   * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams> getDiagnosticsList() {
    return diagnostics_;
  }
  /**
   * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder> 
      getDiagnosticsOrBuilderList() {
    return diagnostics_;
  }
  /**
   * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
   */
  @java.lang.Override
  public int getDiagnosticsCount() {
    return diagnostics_.size();
  }
  /**
   * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams getDiagnostics(int index) {
    return diagnostics_.get(index);
  }
  /**
   * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder getDiagnosticsOrBuilder(
      int index) {
    return diagnostics_.get(index);
  }

  public static final int ACTIONS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<ai.chalk.protos.chalk.lsp.v1.CodeAction> actions_;
  /**
   * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.chalk.protos.chalk.lsp.v1.CodeAction> getActionsList() {
    return actions_;
  }
  /**
   * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder> 
      getActionsOrBuilderList() {
    return actions_;
  }
  /**
   * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
   */
  @java.lang.Override
  public int getActionsCount() {
    return actions_.size();
  }
  /**
   * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.lsp.v1.CodeAction getActions(int index) {
    return actions_.get(index);
  }
  /**
   * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder getActionsOrBuilder(
      int index) {
    return actions_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < diagnostics_.size(); i++) {
      output.writeMessage(1, diagnostics_.get(i));
    }
    for (int i = 0; i < actions_.size(); i++) {
      output.writeMessage(2, actions_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < diagnostics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, diagnostics_.get(i));
    }
    for (int i = 0; i < actions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, actions_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.lsp.v1.LSP)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.lsp.v1.LSP other = (ai.chalk.protos.chalk.lsp.v1.LSP) obj;

    if (!getDiagnosticsList()
        .equals(other.getDiagnosticsList())) return false;
    if (!getActionsList()
        .equals(other.getActionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDiagnosticsCount() > 0) {
      hash = (37 * hash) + DIAGNOSTICS_FIELD_NUMBER;
      hash = (53 * hash) + getDiagnosticsList().hashCode();
    }
    if (getActionsCount() > 0) {
      hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getActionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.lsp.v1.LSP parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.lsp.v1.LSP parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.lsp.v1.LSP parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.lsp.v1.LSP prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.lsp.v1.LSP}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.lsp.v1.LSP)
      ai.chalk.protos.chalk.lsp.v1.LSPOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.lsp.v1.LspProto.internal_static_chalk_lsp_v1_LSP_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.lsp.v1.LspProto.internal_static_chalk_lsp_v1_LSP_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.lsp.v1.LSP.class, ai.chalk.protos.chalk.lsp.v1.LSP.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.lsp.v1.LSP.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (diagnosticsBuilder_ == null) {
        diagnostics_ = java.util.Collections.emptyList();
      } else {
        diagnostics_ = null;
        diagnosticsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (actionsBuilder_ == null) {
        actions_ = java.util.Collections.emptyList();
      } else {
        actions_ = null;
        actionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.lsp.v1.LspProto.internal_static_chalk_lsp_v1_LSP_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.lsp.v1.LSP getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.lsp.v1.LSP.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.lsp.v1.LSP build() {
      ai.chalk.protos.chalk.lsp.v1.LSP result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.lsp.v1.LSP buildPartial() {
      ai.chalk.protos.chalk.lsp.v1.LSP result = new ai.chalk.protos.chalk.lsp.v1.LSP(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ai.chalk.protos.chalk.lsp.v1.LSP result) {
      if (diagnosticsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          diagnostics_ = java.util.Collections.unmodifiableList(diagnostics_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.diagnostics_ = diagnostics_;
      } else {
        result.diagnostics_ = diagnosticsBuilder_.build();
      }
      if (actionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.actions_ = actions_;
      } else {
        result.actions_ = actionsBuilder_.build();
      }
    }

    private void buildPartial0(ai.chalk.protos.chalk.lsp.v1.LSP result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.lsp.v1.LSP) {
        return mergeFrom((ai.chalk.protos.chalk.lsp.v1.LSP)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.lsp.v1.LSP other) {
      if (other == ai.chalk.protos.chalk.lsp.v1.LSP.getDefaultInstance()) return this;
      if (diagnosticsBuilder_ == null) {
        if (!other.diagnostics_.isEmpty()) {
          if (diagnostics_.isEmpty()) {
            diagnostics_ = other.diagnostics_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDiagnosticsIsMutable();
            diagnostics_.addAll(other.diagnostics_);
          }
          onChanged();
        }
      } else {
        if (!other.diagnostics_.isEmpty()) {
          if (diagnosticsBuilder_.isEmpty()) {
            diagnosticsBuilder_.dispose();
            diagnosticsBuilder_ = null;
            diagnostics_ = other.diagnostics_;
            bitField0_ = (bitField0_ & ~0x00000001);
            diagnosticsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDiagnosticsFieldBuilder() : null;
          } else {
            diagnosticsBuilder_.addAllMessages(other.diagnostics_);
          }
        }
      }
      if (actionsBuilder_ == null) {
        if (!other.actions_.isEmpty()) {
          if (actions_.isEmpty()) {
            actions_ = other.actions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureActionsIsMutable();
            actions_.addAll(other.actions_);
          }
          onChanged();
        }
      } else {
        if (!other.actions_.isEmpty()) {
          if (actionsBuilder_.isEmpty()) {
            actionsBuilder_.dispose();
            actionsBuilder_ = null;
            actions_ = other.actions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            actionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getActionsFieldBuilder() : null;
          } else {
            actionsBuilder_.addAllMessages(other.actions_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams m =
                  input.readMessage(
                      ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.parser(),
                      extensionRegistry);
              if (diagnosticsBuilder_ == null) {
                ensureDiagnosticsIsMutable();
                diagnostics_.add(m);
              } else {
                diagnosticsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              ai.chalk.protos.chalk.lsp.v1.CodeAction m =
                  input.readMessage(
                      ai.chalk.protos.chalk.lsp.v1.CodeAction.parser(),
                      extensionRegistry);
              if (actionsBuilder_ == null) {
                ensureActionsIsMutable();
                actions_.add(m);
              } else {
                actionsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams> diagnostics_ =
      java.util.Collections.emptyList();
    private void ensureDiagnosticsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        diagnostics_ = new java.util.ArrayList<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams>(diagnostics_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder> diagnosticsBuilder_;

    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams> getDiagnosticsList() {
      if (diagnosticsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(diagnostics_);
      } else {
        return diagnosticsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public int getDiagnosticsCount() {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.size();
      } else {
        return diagnosticsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams getDiagnostics(int index) {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.get(index);
      } else {
        return diagnosticsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder setDiagnostics(
        int index, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.set(index, value);
        onChanged();
      } else {
        diagnosticsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder setDiagnostics(
        int index, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.set(index, builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder addDiagnostics(ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.add(value);
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder addDiagnostics(
        int index, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.add(index, value);
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder addDiagnostics(
        ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.add(builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder addDiagnostics(
        int index, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.add(index, builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder addAllDiagnostics(
        java.lang.Iterable<? extends ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams> values) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, diagnostics_);
        onChanged();
      } else {
        diagnosticsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder clearDiagnostics() {
      if (diagnosticsBuilder_ == null) {
        diagnostics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        diagnosticsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public Builder removeDiagnostics(int index) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.remove(index);
        onChanged();
      } else {
        diagnosticsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder getDiagnosticsBuilder(
        int index) {
      return getDiagnosticsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder getDiagnosticsOrBuilder(
        int index) {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.get(index);  } else {
        return diagnosticsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public java.util.List<? extends ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder> 
         getDiagnosticsOrBuilderList() {
      if (diagnosticsBuilder_ != null) {
        return diagnosticsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(diagnostics_);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder addDiagnosticsBuilder() {
      return getDiagnosticsFieldBuilder().addBuilder(
          ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder addDiagnosticsBuilder(
        int index) {
      return getDiagnosticsFieldBuilder().addBuilder(
          index, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.lsp.v1.PublishDiagnosticsParams diagnostics = 1 [json_name = "diagnostics"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder> 
         getDiagnosticsBuilderList() {
      return getDiagnosticsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder> 
        getDiagnosticsFieldBuilder() {
      if (diagnosticsBuilder_ == null) {
        diagnosticsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParams.Builder, ai.chalk.protos.chalk.lsp.v1.PublishDiagnosticsParamsOrBuilder>(
                diagnostics_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        diagnostics_ = null;
      }
      return diagnosticsBuilder_;
    }

    private java.util.List<ai.chalk.protos.chalk.lsp.v1.CodeAction> actions_ =
      java.util.Collections.emptyList();
    private void ensureActionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        actions_ = new java.util.ArrayList<ai.chalk.protos.chalk.lsp.v1.CodeAction>(actions_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.chalk.protos.chalk.lsp.v1.CodeAction, ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder, ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder> actionsBuilder_;

    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.lsp.v1.CodeAction> getActionsList() {
      if (actionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(actions_);
      } else {
        return actionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public int getActionsCount() {
      if (actionsBuilder_ == null) {
        return actions_.size();
      } else {
        return actionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.CodeAction getActions(int index) {
      if (actionsBuilder_ == null) {
        return actions_.get(index);
      } else {
        return actionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder setActions(
        int index, ai.chalk.protos.chalk.lsp.v1.CodeAction value) {
      if (actionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionsIsMutable();
        actions_.set(index, value);
        onChanged();
      } else {
        actionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder setActions(
        int index, ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder builderForValue) {
      if (actionsBuilder_ == null) {
        ensureActionsIsMutable();
        actions_.set(index, builderForValue.build());
        onChanged();
      } else {
        actionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder addActions(ai.chalk.protos.chalk.lsp.v1.CodeAction value) {
      if (actionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionsIsMutable();
        actions_.add(value);
        onChanged();
      } else {
        actionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder addActions(
        int index, ai.chalk.protos.chalk.lsp.v1.CodeAction value) {
      if (actionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionsIsMutable();
        actions_.add(index, value);
        onChanged();
      } else {
        actionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder addActions(
        ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder builderForValue) {
      if (actionsBuilder_ == null) {
        ensureActionsIsMutable();
        actions_.add(builderForValue.build());
        onChanged();
      } else {
        actionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder addActions(
        int index, ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder builderForValue) {
      if (actionsBuilder_ == null) {
        ensureActionsIsMutable();
        actions_.add(index, builderForValue.build());
        onChanged();
      } else {
        actionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder addAllActions(
        java.lang.Iterable<? extends ai.chalk.protos.chalk.lsp.v1.CodeAction> values) {
      if (actionsBuilder_ == null) {
        ensureActionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actions_);
        onChanged();
      } else {
        actionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder clearActions() {
      if (actionsBuilder_ == null) {
        actions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        actionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public Builder removeActions(int index) {
      if (actionsBuilder_ == null) {
        ensureActionsIsMutable();
        actions_.remove(index);
        onChanged();
      } else {
        actionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder getActionsBuilder(
        int index) {
      return getActionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder getActionsOrBuilder(
        int index) {
      if (actionsBuilder_ == null) {
        return actions_.get(index);  } else {
        return actionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public java.util.List<? extends ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder> 
         getActionsOrBuilderList() {
      if (actionsBuilder_ != null) {
        return actionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(actions_);
      }
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder addActionsBuilder() {
      return getActionsFieldBuilder().addBuilder(
          ai.chalk.protos.chalk.lsp.v1.CodeAction.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder addActionsBuilder(
        int index) {
      return getActionsFieldBuilder().addBuilder(
          index, ai.chalk.protos.chalk.lsp.v1.CodeAction.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.lsp.v1.CodeAction actions = 2 [json_name = "actions"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder> 
         getActionsBuilderList() {
      return getActionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ai.chalk.protos.chalk.lsp.v1.CodeAction, ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder, ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder> 
        getActionsFieldBuilder() {
      if (actionsBuilder_ == null) {
        actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ai.chalk.protos.chalk.lsp.v1.CodeAction, ai.chalk.protos.chalk.lsp.v1.CodeAction.Builder, ai.chalk.protos.chalk.lsp.v1.CodeActionOrBuilder>(
                actions_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        actions_ = null;
      }
      return actionsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:chalk.lsp.v1.LSP)
  }

  // @@protoc_insertion_point(class_scope:chalk.lsp.v1.LSP)
  private static final ai.chalk.protos.chalk.lsp.v1.LSP DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.lsp.v1.LSP();
  }

  public static ai.chalk.protos.chalk.lsp.v1.LSP getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LSP>
      PARSER = new com.google.protobuf.AbstractParser<LSP>() {
    @java.lang.Override
    public LSP parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LSP> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LSP> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.lsp.v1.LSP getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

