// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/aggregate/v1/service.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.aggregate.v1;

public interface PlanAggregateBackfillResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.aggregate.v1.PlanAggregateBackfillResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.aggregate.v1.AggregateBackfillCostEstimate estimate = 2 [json_name = "estimate"];</code>
   * @return Whether the estimate field is set.
   */
  boolean hasEstimate();
  /**
   * <code>.chalk.aggregate.v1.AggregateBackfillCostEstimate estimate = 2 [json_name = "estimate"];</code>
   * @return The estimate.
   */
  ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillCostEstimate getEstimate();
  /**
   * <code>.chalk.aggregate.v1.AggregateBackfillCostEstimate estimate = 2 [json_name = "estimate"];</code>
   */
  ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillCostEstimateOrBuilder getEstimateOrBuilder();

  /**
   * <code>repeated string errors = 4 [json_name = "errors"];</code>
   * @return A list containing the errors.
   */
  java.util.List<java.lang.String>
      getErrorsList();
  /**
   * <code>repeated string errors = 4 [json_name = "errors"];</code>
   * @return The count of errors.
   */
  int getErrorsCount();
  /**
   * <code>repeated string errors = 4 [json_name = "errors"];</code>
   * @param index The index of the element to return.
   * @return The errors at the given index.
   */
  java.lang.String getErrors(int index);
  /**
   * <code>repeated string errors = 4 [json_name = "errors"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the errors at the given index.
   */
  com.google.protobuf.ByteString
      getErrorsBytes(int index);

  /**
   * <code>repeated .chalk.aggregate.v1.AggregateBackfillWithCostEstimate backfills = 6 [json_name = "backfills"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillWithCostEstimate> 
      getBackfillsList();
  /**
   * <code>repeated .chalk.aggregate.v1.AggregateBackfillWithCostEstimate backfills = 6 [json_name = "backfills"];</code>
   */
  ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillWithCostEstimate getBackfills(int index);
  /**
   * <code>repeated .chalk.aggregate.v1.AggregateBackfillWithCostEstimate backfills = 6 [json_name = "backfills"];</code>
   */
  int getBackfillsCount();
  /**
   * <code>repeated .chalk.aggregate.v1.AggregateBackfillWithCostEstimate backfills = 6 [json_name = "backfills"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillWithCostEstimateOrBuilder> 
      getBackfillsOrBuilderList();
  /**
   * <code>repeated .chalk.aggregate.v1.AggregateBackfillWithCostEstimate backfills = 6 [json_name = "backfills"];</code>
   */
  ai.chalk.protos.chalk.aggregate.v1.AggregateBackfillWithCostEstimateOrBuilder getBackfillsOrBuilder(
      int index);

  /**
   * <code>string aggregate_backfill_id = 7 [json_name = "aggregateBackfillId"];</code>
   * @return The aggregateBackfillId.
   */
  java.lang.String getAggregateBackfillId();
  /**
   * <code>string aggregate_backfill_id = 7 [json_name = "aggregateBackfillId"];</code>
   * @return The bytes for aggregateBackfillId.
   */
  com.google.protobuf.ByteString
      getAggregateBackfillIdBytes();
}
