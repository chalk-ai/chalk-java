// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v2/sources.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v2;

public interface SourceSecretsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.graph.v2.SourceSecrets)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Secrets for sql and stream sources, in the style of integration variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; secrets = 1 [json_name = "secrets"];</code>
   */
  int getSecretsCount();
  /**
   * <pre>
   * Secrets for sql and stream sources, in the style of integration variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; secrets = 1 [json_name = "secrets"];</code>
   */
  boolean containsSecrets(
      java.lang.String key);
  /**
   * Use {@link #getSecretsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getSecrets();
  /**
   * <pre>
   * Secrets for sql and stream sources, in the style of integration variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; secrets = 1 [json_name = "secrets"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getSecretsMap();
  /**
   * <pre>
   * Secrets for sql and stream sources, in the style of integration variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; secrets = 1 [json_name = "secrets"];</code>
   */
  /* nullable */
java.lang.String getSecretsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Secrets for sql and stream sources, in the style of integration variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; secrets = 1 [json_name = "secrets"];</code>
   */
  java.lang.String getSecretsOrThrow(
      java.lang.String key);
}
