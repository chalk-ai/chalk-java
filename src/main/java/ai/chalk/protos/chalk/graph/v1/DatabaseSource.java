// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v1/sources.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v1;

/**
 * Protobuf type {@code chalk.graph.v1.DatabaseSource}
 */
public final class DatabaseSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chalk.graph.v1.DatabaseSource)
    DatabaseSourceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DatabaseSource.newBuilder() to construct.
  private DatabaseSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DatabaseSource() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DatabaseSource();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.graph.v1.SourcesProto.internal_static_chalk_graph_v1_DatabaseSource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.graph.v1.SourcesProto.internal_static_chalk_graph_v1_DatabaseSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.graph.v1.DatabaseSource.class, ai.chalk.protos.chalk.graph.v1.DatabaseSource.Builder.class);
  }

  private int sourceCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object source_;
  public enum SourceCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BIGQUERY(1),
    CLOUDSQL(2),
    DATABRICKS(3),
    MYSQL(4),
    POSTGRES(5),
    REDSHIFT(6),
    SNOWFLAKE(7),
    SQLITE(8),
    SPANNER(9),
    TRINO(10),
    SOURCE_NOT_SET(0);
    private final int value;
    private SourceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static SourceCase forNumber(int value) {
      switch (value) {
        case 1: return BIGQUERY;
        case 2: return CLOUDSQL;
        case 3: return DATABRICKS;
        case 4: return MYSQL;
        case 5: return POSTGRES;
        case 6: return REDSHIFT;
        case 7: return SNOWFLAKE;
        case 8: return SQLITE;
        case 9: return SPANNER;
        case 10: return TRINO;
        case 0: return SOURCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SourceCase
  getSourceCase() {
    return SourceCase.forNumber(
        sourceCase_);
  }

  public static final int BIGQUERY_FIELD_NUMBER = 1;
  /**
   * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
   * @return Whether the bigquery field is set.
   */
  @java.lang.Override
  public boolean hasBigquery() {
    return sourceCase_ == 1;
  }
  /**
   * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
   * @return The bigquery.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.BigQuerySource getBigquery() {
    if (sourceCase_ == 1) {
       return (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.BigQuerySourceOrBuilder getBigqueryOrBuilder() {
    if (sourceCase_ == 1) {
       return (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
  }

  public static final int CLOUDSQL_FIELD_NUMBER = 2;
  /**
   * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
   * @return Whether the cloudsql field is set.
   */
  @java.lang.Override
  public boolean hasCloudsql() {
    return sourceCase_ == 2;
  }
  /**
   * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
   * @return The cloudsql.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.CloudSQLSource getCloudsql() {
    if (sourceCase_ == 2) {
       return (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.CloudSQLSourceOrBuilder getCloudsqlOrBuilder() {
    if (sourceCase_ == 2) {
       return (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
  }

  public static final int DATABRICKS_FIELD_NUMBER = 3;
  /**
   * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
   * @return Whether the databricks field is set.
   */
  @java.lang.Override
  public boolean hasDatabricks() {
    return sourceCase_ == 3;
  }
  /**
   * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
   * @return The databricks.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.DatabricksSource getDatabricks() {
    if (sourceCase_ == 3) {
       return (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.DatabricksSourceOrBuilder getDatabricksOrBuilder() {
    if (sourceCase_ == 3) {
       return (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
  }

  public static final int MYSQL_FIELD_NUMBER = 4;
  /**
   * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
   * @return Whether the mysql field is set.
   */
  @java.lang.Override
  public boolean hasMysql() {
    return sourceCase_ == 4;
  }
  /**
   * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
   * @return The mysql.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.MySQLSource getMysql() {
    if (sourceCase_ == 4) {
       return (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.MySQLSourceOrBuilder getMysqlOrBuilder() {
    if (sourceCase_ == 4) {
       return (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
  }

  public static final int POSTGRES_FIELD_NUMBER = 5;
  /**
   * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
   * @return Whether the postgres field is set.
   */
  @java.lang.Override
  public boolean hasPostgres() {
    return sourceCase_ == 5;
  }
  /**
   * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
   * @return The postgres.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.PostgresSource getPostgres() {
    if (sourceCase_ == 5) {
       return (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.PostgresSourceOrBuilder getPostgresOrBuilder() {
    if (sourceCase_ == 5) {
       return (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
  }

  public static final int REDSHIFT_FIELD_NUMBER = 6;
  /**
   * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
   * @return Whether the redshift field is set.
   */
  @java.lang.Override
  public boolean hasRedshift() {
    return sourceCase_ == 6;
  }
  /**
   * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
   * @return The redshift.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.RedshiftSource getRedshift() {
    if (sourceCase_ == 6) {
       return (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.RedshiftSourceOrBuilder getRedshiftOrBuilder() {
    if (sourceCase_ == 6) {
       return (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
  }

  public static final int SNOWFLAKE_FIELD_NUMBER = 7;
  /**
   * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
   * @return Whether the snowflake field is set.
   */
  @java.lang.Override
  public boolean hasSnowflake() {
    return sourceCase_ == 7;
  }
  /**
   * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
   * @return The snowflake.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SnowflakeSource getSnowflake() {
    if (sourceCase_ == 7) {
       return (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SnowflakeSourceOrBuilder getSnowflakeOrBuilder() {
    if (sourceCase_ == 7) {
       return (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
  }

  public static final int SQLITE_FIELD_NUMBER = 8;
  /**
   * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
   * @return Whether the sqlite field is set.
   */
  @java.lang.Override
  public boolean hasSqlite() {
    return sourceCase_ == 8;
  }
  /**
   * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
   * @return The sqlite.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SQLiteSource getSqlite() {
    if (sourceCase_ == 8) {
       return (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SQLiteSourceOrBuilder getSqliteOrBuilder() {
    if (sourceCase_ == 8) {
       return (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
  }

  public static final int SPANNER_FIELD_NUMBER = 9;
  /**
   * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
   * @return Whether the spanner field is set.
   */
  @java.lang.Override
  public boolean hasSpanner() {
    return sourceCase_ == 9;
  }
  /**
   * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
   * @return The spanner.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SpannerSource getSpanner() {
    if (sourceCase_ == 9) {
       return (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.SpannerSourceOrBuilder getSpannerOrBuilder() {
    if (sourceCase_ == 9) {
       return (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
  }

  public static final int TRINO_FIELD_NUMBER = 10;
  /**
   * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
   * @return Whether the trino field is set.
   */
  @java.lang.Override
  public boolean hasTrino() {
    return sourceCase_ == 10;
  }
  /**
   * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
   * @return The trino.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.TrinoSource getTrino() {
    if (sourceCase_ == 10) {
       return (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.TrinoSourceOrBuilder getTrinoOrBuilder() {
    if (sourceCase_ == 10) {
       return (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_;
    }
    return ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sourceCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_);
    }
    if (sourceCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_);
    }
    if (sourceCase_ == 3) {
      output.writeMessage(3, (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_);
    }
    if (sourceCase_ == 4) {
      output.writeMessage(4, (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_);
    }
    if (sourceCase_ == 5) {
      output.writeMessage(5, (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_);
    }
    if (sourceCase_ == 6) {
      output.writeMessage(6, (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_);
    }
    if (sourceCase_ == 7) {
      output.writeMessage(7, (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_);
    }
    if (sourceCase_ == 8) {
      output.writeMessage(8, (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_);
    }
    if (sourceCase_ == 9) {
      output.writeMessage(9, (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_);
    }
    if (sourceCase_ == 10) {
      output.writeMessage(10, (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sourceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_);
    }
    if (sourceCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_);
    }
    if (sourceCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_);
    }
    if (sourceCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_);
    }
    if (sourceCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_);
    }
    if (sourceCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_);
    }
    if (sourceCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_);
    }
    if (sourceCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_);
    }
    if (sourceCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_);
    }
    if (sourceCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.graph.v1.DatabaseSource)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.graph.v1.DatabaseSource other = (ai.chalk.protos.chalk.graph.v1.DatabaseSource) obj;

    if (!getSourceCase().equals(other.getSourceCase())) return false;
    switch (sourceCase_) {
      case 1:
        if (!getBigquery()
            .equals(other.getBigquery())) return false;
        break;
      case 2:
        if (!getCloudsql()
            .equals(other.getCloudsql())) return false;
        break;
      case 3:
        if (!getDatabricks()
            .equals(other.getDatabricks())) return false;
        break;
      case 4:
        if (!getMysql()
            .equals(other.getMysql())) return false;
        break;
      case 5:
        if (!getPostgres()
            .equals(other.getPostgres())) return false;
        break;
      case 6:
        if (!getRedshift()
            .equals(other.getRedshift())) return false;
        break;
      case 7:
        if (!getSnowflake()
            .equals(other.getSnowflake())) return false;
        break;
      case 8:
        if (!getSqlite()
            .equals(other.getSqlite())) return false;
        break;
      case 9:
        if (!getSpanner()
            .equals(other.getSpanner())) return false;
        break;
      case 10:
        if (!getTrino()
            .equals(other.getTrino())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (sourceCase_) {
      case 1:
        hash = (37 * hash) + BIGQUERY_FIELD_NUMBER;
        hash = (53 * hash) + getBigquery().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CLOUDSQL_FIELD_NUMBER;
        hash = (53 * hash) + getCloudsql().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DATABRICKS_FIELD_NUMBER;
        hash = (53 * hash) + getDatabricks().hashCode();
        break;
      case 4:
        hash = (37 * hash) + MYSQL_FIELD_NUMBER;
        hash = (53 * hash) + getMysql().hashCode();
        break;
      case 5:
        hash = (37 * hash) + POSTGRES_FIELD_NUMBER;
        hash = (53 * hash) + getPostgres().hashCode();
        break;
      case 6:
        hash = (37 * hash) + REDSHIFT_FIELD_NUMBER;
        hash = (53 * hash) + getRedshift().hashCode();
        break;
      case 7:
        hash = (37 * hash) + SNOWFLAKE_FIELD_NUMBER;
        hash = (53 * hash) + getSnowflake().hashCode();
        break;
      case 8:
        hash = (37 * hash) + SQLITE_FIELD_NUMBER;
        hash = (53 * hash) + getSqlite().hashCode();
        break;
      case 9:
        hash = (37 * hash) + SPANNER_FIELD_NUMBER;
        hash = (53 * hash) + getSpanner().hashCode();
        break;
      case 10:
        hash = (37 * hash) + TRINO_FIELD_NUMBER;
        hash = (53 * hash) + getTrino().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.graph.v1.DatabaseSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.graph.v1.DatabaseSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.graph.v1.DatabaseSource)
      ai.chalk.protos.chalk.graph.v1.DatabaseSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.graph.v1.SourcesProto.internal_static_chalk_graph_v1_DatabaseSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.graph.v1.SourcesProto.internal_static_chalk_graph_v1_DatabaseSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.graph.v1.DatabaseSource.class, ai.chalk.protos.chalk.graph.v1.DatabaseSource.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.graph.v1.DatabaseSource.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (bigqueryBuilder_ != null) {
        bigqueryBuilder_.clear();
      }
      if (cloudsqlBuilder_ != null) {
        cloudsqlBuilder_.clear();
      }
      if (databricksBuilder_ != null) {
        databricksBuilder_.clear();
      }
      if (mysqlBuilder_ != null) {
        mysqlBuilder_.clear();
      }
      if (postgresBuilder_ != null) {
        postgresBuilder_.clear();
      }
      if (redshiftBuilder_ != null) {
        redshiftBuilder_.clear();
      }
      if (snowflakeBuilder_ != null) {
        snowflakeBuilder_.clear();
      }
      if (sqliteBuilder_ != null) {
        sqliteBuilder_.clear();
      }
      if (spannerBuilder_ != null) {
        spannerBuilder_.clear();
      }
      if (trinoBuilder_ != null) {
        trinoBuilder_.clear();
      }
      sourceCase_ = 0;
      source_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.graph.v1.SourcesProto.internal_static_chalk_graph_v1_DatabaseSource_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.DatabaseSource getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.graph.v1.DatabaseSource.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.DatabaseSource build() {
      ai.chalk.protos.chalk.graph.v1.DatabaseSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.DatabaseSource buildPartial() {
      ai.chalk.protos.chalk.graph.v1.DatabaseSource result = new ai.chalk.protos.chalk.graph.v1.DatabaseSource(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.graph.v1.DatabaseSource result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.graph.v1.DatabaseSource result) {
      result.sourceCase_ = sourceCase_;
      result.source_ = this.source_;
      if (sourceCase_ == 1 &&
          bigqueryBuilder_ != null) {
        result.source_ = bigqueryBuilder_.build();
      }
      if (sourceCase_ == 2 &&
          cloudsqlBuilder_ != null) {
        result.source_ = cloudsqlBuilder_.build();
      }
      if (sourceCase_ == 3 &&
          databricksBuilder_ != null) {
        result.source_ = databricksBuilder_.build();
      }
      if (sourceCase_ == 4 &&
          mysqlBuilder_ != null) {
        result.source_ = mysqlBuilder_.build();
      }
      if (sourceCase_ == 5 &&
          postgresBuilder_ != null) {
        result.source_ = postgresBuilder_.build();
      }
      if (sourceCase_ == 6 &&
          redshiftBuilder_ != null) {
        result.source_ = redshiftBuilder_.build();
      }
      if (sourceCase_ == 7 &&
          snowflakeBuilder_ != null) {
        result.source_ = snowflakeBuilder_.build();
      }
      if (sourceCase_ == 8 &&
          sqliteBuilder_ != null) {
        result.source_ = sqliteBuilder_.build();
      }
      if (sourceCase_ == 9 &&
          spannerBuilder_ != null) {
        result.source_ = spannerBuilder_.build();
      }
      if (sourceCase_ == 10 &&
          trinoBuilder_ != null) {
        result.source_ = trinoBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.graph.v1.DatabaseSource) {
        return mergeFrom((ai.chalk.protos.chalk.graph.v1.DatabaseSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.graph.v1.DatabaseSource other) {
      if (other == ai.chalk.protos.chalk.graph.v1.DatabaseSource.getDefaultInstance()) return this;
      switch (other.getSourceCase()) {
        case BIGQUERY: {
          mergeBigquery(other.getBigquery());
          break;
        }
        case CLOUDSQL: {
          mergeCloudsql(other.getCloudsql());
          break;
        }
        case DATABRICKS: {
          mergeDatabricks(other.getDatabricks());
          break;
        }
        case MYSQL: {
          mergeMysql(other.getMysql());
          break;
        }
        case POSTGRES: {
          mergePostgres(other.getPostgres());
          break;
        }
        case REDSHIFT: {
          mergeRedshift(other.getRedshift());
          break;
        }
        case SNOWFLAKE: {
          mergeSnowflake(other.getSnowflake());
          break;
        }
        case SQLITE: {
          mergeSqlite(other.getSqlite());
          break;
        }
        case SPANNER: {
          mergeSpanner(other.getSpanner());
          break;
        }
        case TRINO: {
          mergeTrino(other.getTrino());
          break;
        }
        case SOURCE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBigqueryFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getCloudsqlFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDatabricksFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getMysqlFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getPostgresFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getRedshiftFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 6;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getSnowflakeFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getSqliteFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 8;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getSpannerFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 9;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getTrinoFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 10;
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int sourceCase_ = 0;
    private java.lang.Object source_;
    public SourceCase
        getSourceCase() {
      return SourceCase.forNumber(
          sourceCase_);
    }

    public Builder clearSource() {
      sourceCase_ = 0;
      source_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.BigQuerySource, ai.chalk.protos.chalk.graph.v1.BigQuerySource.Builder, ai.chalk.protos.chalk.graph.v1.BigQuerySourceOrBuilder> bigqueryBuilder_;
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     * @return Whether the bigquery field is set.
     */
    @java.lang.Override
    public boolean hasBigquery() {
      return sourceCase_ == 1;
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     * @return The bigquery.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.BigQuerySource getBigquery() {
      if (bigqueryBuilder_ == null) {
        if (sourceCase_ == 1) {
          return (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
      } else {
        if (sourceCase_ == 1) {
          return bigqueryBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    public Builder setBigquery(ai.chalk.protos.chalk.graph.v1.BigQuerySource value) {
      if (bigqueryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        bigqueryBuilder_.setMessage(value);
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    public Builder setBigquery(
        ai.chalk.protos.chalk.graph.v1.BigQuerySource.Builder builderForValue) {
      if (bigqueryBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        bigqueryBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    public Builder mergeBigquery(ai.chalk.protos.chalk.graph.v1.BigQuerySource value) {
      if (bigqueryBuilder_ == null) {
        if (sourceCase_ == 1 &&
            source_ != ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.BigQuerySource.newBuilder((ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 1) {
          bigqueryBuilder_.mergeFrom(value);
        } else {
          bigqueryBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    public Builder clearBigquery() {
      if (bigqueryBuilder_ == null) {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
        }
        bigqueryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.BigQuerySource.Builder getBigqueryBuilder() {
      return getBigqueryFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.BigQuerySourceOrBuilder getBigqueryOrBuilder() {
      if ((sourceCase_ == 1) && (bigqueryBuilder_ != null)) {
        return bigqueryBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 1) {
          return (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.BigQuerySource bigquery = 1 [json_name = "bigquery"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.BigQuerySource, ai.chalk.protos.chalk.graph.v1.BigQuerySource.Builder, ai.chalk.protos.chalk.graph.v1.BigQuerySourceOrBuilder> 
        getBigqueryFieldBuilder() {
      if (bigqueryBuilder_ == null) {
        if (!(sourceCase_ == 1)) {
          source_ = ai.chalk.protos.chalk.graph.v1.BigQuerySource.getDefaultInstance();
        }
        bigqueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.BigQuerySource, ai.chalk.protos.chalk.graph.v1.BigQuerySource.Builder, ai.chalk.protos.chalk.graph.v1.BigQuerySourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.BigQuerySource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 1;
      onChanged();
      return bigqueryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.CloudSQLSource, ai.chalk.protos.chalk.graph.v1.CloudSQLSource.Builder, ai.chalk.protos.chalk.graph.v1.CloudSQLSourceOrBuilder> cloudsqlBuilder_;
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     * @return Whether the cloudsql field is set.
     */
    @java.lang.Override
    public boolean hasCloudsql() {
      return sourceCase_ == 2;
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     * @return The cloudsql.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.CloudSQLSource getCloudsql() {
      if (cloudsqlBuilder_ == null) {
        if (sourceCase_ == 2) {
          return (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 2) {
          return cloudsqlBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    public Builder setCloudsql(ai.chalk.protos.chalk.graph.v1.CloudSQLSource value) {
      if (cloudsqlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        cloudsqlBuilder_.setMessage(value);
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    public Builder setCloudsql(
        ai.chalk.protos.chalk.graph.v1.CloudSQLSource.Builder builderForValue) {
      if (cloudsqlBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        cloudsqlBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    public Builder mergeCloudsql(ai.chalk.protos.chalk.graph.v1.CloudSQLSource value) {
      if (cloudsqlBuilder_ == null) {
        if (sourceCase_ == 2 &&
            source_ != ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.CloudSQLSource.newBuilder((ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 2) {
          cloudsqlBuilder_.mergeFrom(value);
        } else {
          cloudsqlBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    public Builder clearCloudsql() {
      if (cloudsqlBuilder_ == null) {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
        }
        cloudsqlBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.CloudSQLSource.Builder getCloudsqlBuilder() {
      return getCloudsqlFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.CloudSQLSourceOrBuilder getCloudsqlOrBuilder() {
      if ((sourceCase_ == 2) && (cloudsqlBuilder_ != null)) {
        return cloudsqlBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 2) {
          return (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.CloudSQLSource cloudsql = 2 [json_name = "cloudsql"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.CloudSQLSource, ai.chalk.protos.chalk.graph.v1.CloudSQLSource.Builder, ai.chalk.protos.chalk.graph.v1.CloudSQLSourceOrBuilder> 
        getCloudsqlFieldBuilder() {
      if (cloudsqlBuilder_ == null) {
        if (!(sourceCase_ == 2)) {
          source_ = ai.chalk.protos.chalk.graph.v1.CloudSQLSource.getDefaultInstance();
        }
        cloudsqlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.CloudSQLSource, ai.chalk.protos.chalk.graph.v1.CloudSQLSource.Builder, ai.chalk.protos.chalk.graph.v1.CloudSQLSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.CloudSQLSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 2;
      onChanged();
      return cloudsqlBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.DatabricksSource, ai.chalk.protos.chalk.graph.v1.DatabricksSource.Builder, ai.chalk.protos.chalk.graph.v1.DatabricksSourceOrBuilder> databricksBuilder_;
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     * @return Whether the databricks field is set.
     */
    @java.lang.Override
    public boolean hasDatabricks() {
      return sourceCase_ == 3;
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     * @return The databricks.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.DatabricksSource getDatabricks() {
      if (databricksBuilder_ == null) {
        if (sourceCase_ == 3) {
          return (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 3) {
          return databricksBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    public Builder setDatabricks(ai.chalk.protos.chalk.graph.v1.DatabricksSource value) {
      if (databricksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        databricksBuilder_.setMessage(value);
      }
      sourceCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    public Builder setDatabricks(
        ai.chalk.protos.chalk.graph.v1.DatabricksSource.Builder builderForValue) {
      if (databricksBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        databricksBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    public Builder mergeDatabricks(ai.chalk.protos.chalk.graph.v1.DatabricksSource value) {
      if (databricksBuilder_ == null) {
        if (sourceCase_ == 3 &&
            source_ != ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.DatabricksSource.newBuilder((ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 3) {
          databricksBuilder_.mergeFrom(value);
        } else {
          databricksBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    public Builder clearDatabricks() {
      if (databricksBuilder_ == null) {
        if (sourceCase_ == 3) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 3) {
          sourceCase_ = 0;
          source_ = null;
        }
        databricksBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.DatabricksSource.Builder getDatabricksBuilder() {
      return getDatabricksFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.DatabricksSourceOrBuilder getDatabricksOrBuilder() {
      if ((sourceCase_ == 3) && (databricksBuilder_ != null)) {
        return databricksBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 3) {
          return (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.DatabricksSource databricks = 3 [json_name = "databricks"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.DatabricksSource, ai.chalk.protos.chalk.graph.v1.DatabricksSource.Builder, ai.chalk.protos.chalk.graph.v1.DatabricksSourceOrBuilder> 
        getDatabricksFieldBuilder() {
      if (databricksBuilder_ == null) {
        if (!(sourceCase_ == 3)) {
          source_ = ai.chalk.protos.chalk.graph.v1.DatabricksSource.getDefaultInstance();
        }
        databricksBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.DatabricksSource, ai.chalk.protos.chalk.graph.v1.DatabricksSource.Builder, ai.chalk.protos.chalk.graph.v1.DatabricksSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.DatabricksSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 3;
      onChanged();
      return databricksBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.MySQLSource, ai.chalk.protos.chalk.graph.v1.MySQLSource.Builder, ai.chalk.protos.chalk.graph.v1.MySQLSourceOrBuilder> mysqlBuilder_;
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     * @return Whether the mysql field is set.
     */
    @java.lang.Override
    public boolean hasMysql() {
      return sourceCase_ == 4;
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     * @return The mysql.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.MySQLSource getMysql() {
      if (mysqlBuilder_ == null) {
        if (sourceCase_ == 4) {
          return (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 4) {
          return mysqlBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    public Builder setMysql(ai.chalk.protos.chalk.graph.v1.MySQLSource value) {
      if (mysqlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        mysqlBuilder_.setMessage(value);
      }
      sourceCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    public Builder setMysql(
        ai.chalk.protos.chalk.graph.v1.MySQLSource.Builder builderForValue) {
      if (mysqlBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        mysqlBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    public Builder mergeMysql(ai.chalk.protos.chalk.graph.v1.MySQLSource value) {
      if (mysqlBuilder_ == null) {
        if (sourceCase_ == 4 &&
            source_ != ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.MySQLSource.newBuilder((ai.chalk.protos.chalk.graph.v1.MySQLSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 4) {
          mysqlBuilder_.mergeFrom(value);
        } else {
          mysqlBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    public Builder clearMysql() {
      if (mysqlBuilder_ == null) {
        if (sourceCase_ == 4) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 4) {
          sourceCase_ = 0;
          source_ = null;
        }
        mysqlBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.MySQLSource.Builder getMysqlBuilder() {
      return getMysqlFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.MySQLSourceOrBuilder getMysqlOrBuilder() {
      if ((sourceCase_ == 4) && (mysqlBuilder_ != null)) {
        return mysqlBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 4) {
          return (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.MySQLSource mysql = 4 [json_name = "mysql"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.MySQLSource, ai.chalk.protos.chalk.graph.v1.MySQLSource.Builder, ai.chalk.protos.chalk.graph.v1.MySQLSourceOrBuilder> 
        getMysqlFieldBuilder() {
      if (mysqlBuilder_ == null) {
        if (!(sourceCase_ == 4)) {
          source_ = ai.chalk.protos.chalk.graph.v1.MySQLSource.getDefaultInstance();
        }
        mysqlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.MySQLSource, ai.chalk.protos.chalk.graph.v1.MySQLSource.Builder, ai.chalk.protos.chalk.graph.v1.MySQLSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.MySQLSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 4;
      onChanged();
      return mysqlBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.PostgresSource, ai.chalk.protos.chalk.graph.v1.PostgresSource.Builder, ai.chalk.protos.chalk.graph.v1.PostgresSourceOrBuilder> postgresBuilder_;
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     * @return Whether the postgres field is set.
     */
    @java.lang.Override
    public boolean hasPostgres() {
      return sourceCase_ == 5;
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     * @return The postgres.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.PostgresSource getPostgres() {
      if (postgresBuilder_ == null) {
        if (sourceCase_ == 5) {
          return (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 5) {
          return postgresBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    public Builder setPostgres(ai.chalk.protos.chalk.graph.v1.PostgresSource value) {
      if (postgresBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        postgresBuilder_.setMessage(value);
      }
      sourceCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    public Builder setPostgres(
        ai.chalk.protos.chalk.graph.v1.PostgresSource.Builder builderForValue) {
      if (postgresBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        postgresBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    public Builder mergePostgres(ai.chalk.protos.chalk.graph.v1.PostgresSource value) {
      if (postgresBuilder_ == null) {
        if (sourceCase_ == 5 &&
            source_ != ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.PostgresSource.newBuilder((ai.chalk.protos.chalk.graph.v1.PostgresSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 5) {
          postgresBuilder_.mergeFrom(value);
        } else {
          postgresBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    public Builder clearPostgres() {
      if (postgresBuilder_ == null) {
        if (sourceCase_ == 5) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 5) {
          sourceCase_ = 0;
          source_ = null;
        }
        postgresBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.PostgresSource.Builder getPostgresBuilder() {
      return getPostgresFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.PostgresSourceOrBuilder getPostgresOrBuilder() {
      if ((sourceCase_ == 5) && (postgresBuilder_ != null)) {
        return postgresBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 5) {
          return (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.PostgresSource postgres = 5 [json_name = "postgres"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.PostgresSource, ai.chalk.protos.chalk.graph.v1.PostgresSource.Builder, ai.chalk.protos.chalk.graph.v1.PostgresSourceOrBuilder> 
        getPostgresFieldBuilder() {
      if (postgresBuilder_ == null) {
        if (!(sourceCase_ == 5)) {
          source_ = ai.chalk.protos.chalk.graph.v1.PostgresSource.getDefaultInstance();
        }
        postgresBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.PostgresSource, ai.chalk.protos.chalk.graph.v1.PostgresSource.Builder, ai.chalk.protos.chalk.graph.v1.PostgresSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.PostgresSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 5;
      onChanged();
      return postgresBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.RedshiftSource, ai.chalk.protos.chalk.graph.v1.RedshiftSource.Builder, ai.chalk.protos.chalk.graph.v1.RedshiftSourceOrBuilder> redshiftBuilder_;
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     * @return Whether the redshift field is set.
     */
    @java.lang.Override
    public boolean hasRedshift() {
      return sourceCase_ == 6;
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     * @return The redshift.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.RedshiftSource getRedshift() {
      if (redshiftBuilder_ == null) {
        if (sourceCase_ == 6) {
          return (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 6) {
          return redshiftBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    public Builder setRedshift(ai.chalk.protos.chalk.graph.v1.RedshiftSource value) {
      if (redshiftBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        redshiftBuilder_.setMessage(value);
      }
      sourceCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    public Builder setRedshift(
        ai.chalk.protos.chalk.graph.v1.RedshiftSource.Builder builderForValue) {
      if (redshiftBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        redshiftBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    public Builder mergeRedshift(ai.chalk.protos.chalk.graph.v1.RedshiftSource value) {
      if (redshiftBuilder_ == null) {
        if (sourceCase_ == 6 &&
            source_ != ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.RedshiftSource.newBuilder((ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 6) {
          redshiftBuilder_.mergeFrom(value);
        } else {
          redshiftBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    public Builder clearRedshift() {
      if (redshiftBuilder_ == null) {
        if (sourceCase_ == 6) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 6) {
          sourceCase_ = 0;
          source_ = null;
        }
        redshiftBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.RedshiftSource.Builder getRedshiftBuilder() {
      return getRedshiftFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.RedshiftSourceOrBuilder getRedshiftOrBuilder() {
      if ((sourceCase_ == 6) && (redshiftBuilder_ != null)) {
        return redshiftBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 6) {
          return (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.RedshiftSource redshift = 6 [json_name = "redshift"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.RedshiftSource, ai.chalk.protos.chalk.graph.v1.RedshiftSource.Builder, ai.chalk.protos.chalk.graph.v1.RedshiftSourceOrBuilder> 
        getRedshiftFieldBuilder() {
      if (redshiftBuilder_ == null) {
        if (!(sourceCase_ == 6)) {
          source_ = ai.chalk.protos.chalk.graph.v1.RedshiftSource.getDefaultInstance();
        }
        redshiftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.RedshiftSource, ai.chalk.protos.chalk.graph.v1.RedshiftSource.Builder, ai.chalk.protos.chalk.graph.v1.RedshiftSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.RedshiftSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 6;
      onChanged();
      return redshiftBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SnowflakeSource, ai.chalk.protos.chalk.graph.v1.SnowflakeSource.Builder, ai.chalk.protos.chalk.graph.v1.SnowflakeSourceOrBuilder> snowflakeBuilder_;
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     * @return Whether the snowflake field is set.
     */
    @java.lang.Override
    public boolean hasSnowflake() {
      return sourceCase_ == 7;
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     * @return The snowflake.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SnowflakeSource getSnowflake() {
      if (snowflakeBuilder_ == null) {
        if (sourceCase_ == 7) {
          return (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 7) {
          return snowflakeBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    public Builder setSnowflake(ai.chalk.protos.chalk.graph.v1.SnowflakeSource value) {
      if (snowflakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        snowflakeBuilder_.setMessage(value);
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    public Builder setSnowflake(
        ai.chalk.protos.chalk.graph.v1.SnowflakeSource.Builder builderForValue) {
      if (snowflakeBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        snowflakeBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    public Builder mergeSnowflake(ai.chalk.protos.chalk.graph.v1.SnowflakeSource value) {
      if (snowflakeBuilder_ == null) {
        if (sourceCase_ == 7 &&
            source_ != ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.SnowflakeSource.newBuilder((ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 7) {
          snowflakeBuilder_.mergeFrom(value);
        } else {
          snowflakeBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    public Builder clearSnowflake() {
      if (snowflakeBuilder_ == null) {
        if (sourceCase_ == 7) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 7) {
          sourceCase_ = 0;
          source_ = null;
        }
        snowflakeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.SnowflakeSource.Builder getSnowflakeBuilder() {
      return getSnowflakeFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SnowflakeSourceOrBuilder getSnowflakeOrBuilder() {
      if ((sourceCase_ == 7) && (snowflakeBuilder_ != null)) {
        return snowflakeBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 7) {
          return (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SnowflakeSource snowflake = 7 [json_name = "snowflake"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SnowflakeSource, ai.chalk.protos.chalk.graph.v1.SnowflakeSource.Builder, ai.chalk.protos.chalk.graph.v1.SnowflakeSourceOrBuilder> 
        getSnowflakeFieldBuilder() {
      if (snowflakeBuilder_ == null) {
        if (!(sourceCase_ == 7)) {
          source_ = ai.chalk.protos.chalk.graph.v1.SnowflakeSource.getDefaultInstance();
        }
        snowflakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.SnowflakeSource, ai.chalk.protos.chalk.graph.v1.SnowflakeSource.Builder, ai.chalk.protos.chalk.graph.v1.SnowflakeSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.SnowflakeSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 7;
      onChanged();
      return snowflakeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SQLiteSource, ai.chalk.protos.chalk.graph.v1.SQLiteSource.Builder, ai.chalk.protos.chalk.graph.v1.SQLiteSourceOrBuilder> sqliteBuilder_;
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     * @return Whether the sqlite field is set.
     */
    @java.lang.Override
    public boolean hasSqlite() {
      return sourceCase_ == 8;
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     * @return The sqlite.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SQLiteSource getSqlite() {
      if (sqliteBuilder_ == null) {
        if (sourceCase_ == 8) {
          return (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 8) {
          return sqliteBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    public Builder setSqlite(ai.chalk.protos.chalk.graph.v1.SQLiteSource value) {
      if (sqliteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        sqliteBuilder_.setMessage(value);
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    public Builder setSqlite(
        ai.chalk.protos.chalk.graph.v1.SQLiteSource.Builder builderForValue) {
      if (sqliteBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        sqliteBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    public Builder mergeSqlite(ai.chalk.protos.chalk.graph.v1.SQLiteSource value) {
      if (sqliteBuilder_ == null) {
        if (sourceCase_ == 8 &&
            source_ != ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.SQLiteSource.newBuilder((ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 8) {
          sqliteBuilder_.mergeFrom(value);
        } else {
          sqliteBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    public Builder clearSqlite() {
      if (sqliteBuilder_ == null) {
        if (sourceCase_ == 8) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 8) {
          sourceCase_ = 0;
          source_ = null;
        }
        sqliteBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.SQLiteSource.Builder getSqliteBuilder() {
      return getSqliteFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SQLiteSourceOrBuilder getSqliteOrBuilder() {
      if ((sourceCase_ == 8) && (sqliteBuilder_ != null)) {
        return sqliteBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 8) {
          return (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SQLiteSource sqlite = 8 [json_name = "sqlite"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SQLiteSource, ai.chalk.protos.chalk.graph.v1.SQLiteSource.Builder, ai.chalk.protos.chalk.graph.v1.SQLiteSourceOrBuilder> 
        getSqliteFieldBuilder() {
      if (sqliteBuilder_ == null) {
        if (!(sourceCase_ == 8)) {
          source_ = ai.chalk.protos.chalk.graph.v1.SQLiteSource.getDefaultInstance();
        }
        sqliteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.SQLiteSource, ai.chalk.protos.chalk.graph.v1.SQLiteSource.Builder, ai.chalk.protos.chalk.graph.v1.SQLiteSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.SQLiteSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 8;
      onChanged();
      return sqliteBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SpannerSource, ai.chalk.protos.chalk.graph.v1.SpannerSource.Builder, ai.chalk.protos.chalk.graph.v1.SpannerSourceOrBuilder> spannerBuilder_;
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     * @return Whether the spanner field is set.
     */
    @java.lang.Override
    public boolean hasSpanner() {
      return sourceCase_ == 9;
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     * @return The spanner.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SpannerSource getSpanner() {
      if (spannerBuilder_ == null) {
        if (sourceCase_ == 9) {
          return (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 9) {
          return spannerBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    public Builder setSpanner(ai.chalk.protos.chalk.graph.v1.SpannerSource value) {
      if (spannerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        spannerBuilder_.setMessage(value);
      }
      sourceCase_ = 9;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    public Builder setSpanner(
        ai.chalk.protos.chalk.graph.v1.SpannerSource.Builder builderForValue) {
      if (spannerBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        spannerBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 9;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    public Builder mergeSpanner(ai.chalk.protos.chalk.graph.v1.SpannerSource value) {
      if (spannerBuilder_ == null) {
        if (sourceCase_ == 9 &&
            source_ != ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.SpannerSource.newBuilder((ai.chalk.protos.chalk.graph.v1.SpannerSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 9) {
          spannerBuilder_.mergeFrom(value);
        } else {
          spannerBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 9;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    public Builder clearSpanner() {
      if (spannerBuilder_ == null) {
        if (sourceCase_ == 9) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 9) {
          sourceCase_ = 0;
          source_ = null;
        }
        spannerBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.SpannerSource.Builder getSpannerBuilder() {
      return getSpannerFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.SpannerSourceOrBuilder getSpannerOrBuilder() {
      if ((sourceCase_ == 9) && (spannerBuilder_ != null)) {
        return spannerBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 9) {
          return (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.SpannerSource spanner = 9 [json_name = "spanner"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.SpannerSource, ai.chalk.protos.chalk.graph.v1.SpannerSource.Builder, ai.chalk.protos.chalk.graph.v1.SpannerSourceOrBuilder> 
        getSpannerFieldBuilder() {
      if (spannerBuilder_ == null) {
        if (!(sourceCase_ == 9)) {
          source_ = ai.chalk.protos.chalk.graph.v1.SpannerSource.getDefaultInstance();
        }
        spannerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.SpannerSource, ai.chalk.protos.chalk.graph.v1.SpannerSource.Builder, ai.chalk.protos.chalk.graph.v1.SpannerSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.SpannerSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 9;
      onChanged();
      return spannerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.TrinoSource, ai.chalk.protos.chalk.graph.v1.TrinoSource.Builder, ai.chalk.protos.chalk.graph.v1.TrinoSourceOrBuilder> trinoBuilder_;
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     * @return Whether the trino field is set.
     */
    @java.lang.Override
    public boolean hasTrino() {
      return sourceCase_ == 10;
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     * @return The trino.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.TrinoSource getTrino() {
      if (trinoBuilder_ == null) {
        if (sourceCase_ == 10) {
          return (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 10) {
          return trinoBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    public Builder setTrino(ai.chalk.protos.chalk.graph.v1.TrinoSource value) {
      if (trinoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        trinoBuilder_.setMessage(value);
      }
      sourceCase_ = 10;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    public Builder setTrino(
        ai.chalk.protos.chalk.graph.v1.TrinoSource.Builder builderForValue) {
      if (trinoBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        trinoBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 10;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    public Builder mergeTrino(ai.chalk.protos.chalk.graph.v1.TrinoSource value) {
      if (trinoBuilder_ == null) {
        if (sourceCase_ == 10 &&
            source_ != ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance()) {
          source_ = ai.chalk.protos.chalk.graph.v1.TrinoSource.newBuilder((ai.chalk.protos.chalk.graph.v1.TrinoSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 10) {
          trinoBuilder_.mergeFrom(value);
        } else {
          trinoBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 10;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    public Builder clearTrino() {
      if (trinoBuilder_ == null) {
        if (sourceCase_ == 10) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 10) {
          sourceCase_ = 0;
          source_ = null;
        }
        trinoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.TrinoSource.Builder getTrinoBuilder() {
      return getTrinoFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.TrinoSourceOrBuilder getTrinoOrBuilder() {
      if ((sourceCase_ == 10) && (trinoBuilder_ != null)) {
        return trinoBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 10) {
          return (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_;
        }
        return ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.TrinoSource trino = 10 [json_name = "trino"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.TrinoSource, ai.chalk.protos.chalk.graph.v1.TrinoSource.Builder, ai.chalk.protos.chalk.graph.v1.TrinoSourceOrBuilder> 
        getTrinoFieldBuilder() {
      if (trinoBuilder_ == null) {
        if (!(sourceCase_ == 10)) {
          source_ = ai.chalk.protos.chalk.graph.v1.TrinoSource.getDefaultInstance();
        }
        trinoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.TrinoSource, ai.chalk.protos.chalk.graph.v1.TrinoSource.Builder, ai.chalk.protos.chalk.graph.v1.TrinoSourceOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.TrinoSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 10;
      onChanged();
      return trinoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:chalk.graph.v1.DatabaseSource)
  }

  // @@protoc_insertion_point(class_scope:chalk.graph.v1.DatabaseSource)
  private static final ai.chalk.protos.chalk.graph.v1.DatabaseSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.graph.v1.DatabaseSource();
  }

  public static ai.chalk.protos.chalk.graph.v1.DatabaseSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DatabaseSource>
      PARSER = new com.google.protobuf.AbstractParser<DatabaseSource>() {
    @java.lang.Override
    public DatabaseSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DatabaseSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DatabaseSource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.DatabaseSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

