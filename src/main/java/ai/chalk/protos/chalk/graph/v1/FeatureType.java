// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v1/graph.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v1;

/**
 * Protobuf type {@code chalk.graph.v1.FeatureType}
 */
public final class FeatureType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chalk.graph.v1.FeatureType)
    FeatureTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FeatureType.newBuilder() to construct.
  private FeatureType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FeatureType() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FeatureType();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.graph.v1.GraphProto.internal_static_chalk_graph_v1_FeatureType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.graph.v1.GraphProto.internal_static_chalk_graph_v1_FeatureType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.graph.v1.FeatureType.class, ai.chalk.protos.chalk.graph.v1.FeatureType.Builder.class);
  }

  private int typeCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SCALAR(1),
    HAS_ONE(2),
    HAS_MANY(3),
    FEATURE_TIME(4),
    WINDOWED(5),
    GROUP_BY(6),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return SCALAR;
        case 2: return HAS_ONE;
        case 3: return HAS_MANY;
        case 4: return FEATURE_TIME;
        case 5: return WINDOWED;
        case 6: return GROUP_BY;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int SCALAR_FIELD_NUMBER = 1;
  /**
   * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
   * @return Whether the scalar field is set.
   */
  @java.lang.Override
  public boolean hasScalar() {
    return typeCase_ == 1;
  }
  /**
   * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
   * @return The scalar.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.ScalarFeatureType getScalar() {
    if (typeCase_ == 1) {
       return (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.ScalarFeatureTypeOrBuilder getScalarOrBuilder() {
    if (typeCase_ == 1) {
       return (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
  }

  public static final int HAS_ONE_FIELD_NUMBER = 2;
  /**
   * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
   * @return Whether the hasOne field is set.
   */
  @java.lang.Override
  public boolean hasHasOne() {
    return typeCase_ == 2;
  }
  /**
   * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
   * @return The hasOne.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.HasOneFeatureType getHasOne() {
    if (typeCase_ == 2) {
       return (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.HasOneFeatureTypeOrBuilder getHasOneOrBuilder() {
    if (typeCase_ == 2) {
       return (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
  }

  public static final int HAS_MANY_FIELD_NUMBER = 3;
  /**
   * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
   * @return Whether the hasMany field is set.
   */
  @java.lang.Override
  public boolean hasHasMany() {
    return typeCase_ == 3;
  }
  /**
   * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
   * @return The hasMany.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.HasManyFeatureType getHasMany() {
    if (typeCase_ == 3) {
       return (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.HasManyFeatureTypeOrBuilder getHasManyOrBuilder() {
    if (typeCase_ == 3) {
       return (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
  }

  public static final int FEATURE_TIME_FIELD_NUMBER = 4;
  /**
   * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
   * @return Whether the featureTime field is set.
   */
  @java.lang.Override
  public boolean hasFeatureTime() {
    return typeCase_ == 4;
  }
  /**
   * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
   * @return The featureTime.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType getFeatureTime() {
    if (typeCase_ == 4) {
       return (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureTypeOrBuilder getFeatureTimeOrBuilder() {
    if (typeCase_ == 4) {
       return (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
  }

  public static final int WINDOWED_FIELD_NUMBER = 5;
  /**
   * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
   * @return Whether the windowed field is set.
   */
  @java.lang.Override
  public boolean hasWindowed() {
    return typeCase_ == 5;
  }
  /**
   * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
   * @return The windowed.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.WindowedFeatureType getWindowed() {
    if (typeCase_ == 5) {
       return (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.WindowedFeatureTypeOrBuilder getWindowedOrBuilder() {
    if (typeCase_ == 5) {
       return (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
  }

  public static final int GROUP_BY_FIELD_NUMBER = 6;
  /**
   * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
   * @return Whether the groupBy field is set.
   */
  @java.lang.Override
  public boolean hasGroupBy() {
    return typeCase_ == 6;
  }
  /**
   * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
   * @return The groupBy.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.GroupByFeatureType getGroupBy() {
    if (typeCase_ == 6) {
       return (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
  }
  /**
   * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.GroupByFeatureTypeOrBuilder getGroupByOrBuilder() {
    if (typeCase_ == 6) {
       return (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_;
    }
    return ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_);
    }
    if (typeCase_ == 3) {
      output.writeMessage(3, (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_);
    }
    if (typeCase_ == 5) {
      output.writeMessage(5, (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_);
    }
    if (typeCase_ == 6) {
      output.writeMessage(6, (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_);
    }
    if (typeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_);
    }
    if (typeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_);
    }
    if (typeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.graph.v1.FeatureType)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.graph.v1.FeatureType other = (ai.chalk.protos.chalk.graph.v1.FeatureType) obj;

    if (!getTypeCase().equals(other.getTypeCase())) return false;
    switch (typeCase_) {
      case 1:
        if (!getScalar()
            .equals(other.getScalar())) return false;
        break;
      case 2:
        if (!getHasOne()
            .equals(other.getHasOne())) return false;
        break;
      case 3:
        if (!getHasMany()
            .equals(other.getHasMany())) return false;
        break;
      case 4:
        if (!getFeatureTime()
            .equals(other.getFeatureTime())) return false;
        break;
      case 5:
        if (!getWindowed()
            .equals(other.getWindowed())) return false;
        break;
      case 6:
        if (!getGroupBy()
            .equals(other.getGroupBy())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + SCALAR_FIELD_NUMBER;
        hash = (53 * hash) + getScalar().hashCode();
        break;
      case 2:
        hash = (37 * hash) + HAS_ONE_FIELD_NUMBER;
        hash = (53 * hash) + getHasOne().hashCode();
        break;
      case 3:
        hash = (37 * hash) + HAS_MANY_FIELD_NUMBER;
        hash = (53 * hash) + getHasMany().hashCode();
        break;
      case 4:
        hash = (37 * hash) + FEATURE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureTime().hashCode();
        break;
      case 5:
        hash = (37 * hash) + WINDOWED_FIELD_NUMBER;
        hash = (53 * hash) + getWindowed().hashCode();
        break;
      case 6:
        hash = (37 * hash) + GROUP_BY_FIELD_NUMBER;
        hash = (53 * hash) + getGroupBy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.graph.v1.FeatureType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.graph.v1.FeatureType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.graph.v1.FeatureType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.graph.v1.FeatureType)
      ai.chalk.protos.chalk.graph.v1.FeatureTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.graph.v1.GraphProto.internal_static_chalk_graph_v1_FeatureType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.graph.v1.GraphProto.internal_static_chalk_graph_v1_FeatureType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.graph.v1.FeatureType.class, ai.chalk.protos.chalk.graph.v1.FeatureType.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.graph.v1.FeatureType.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (scalarBuilder_ != null) {
        scalarBuilder_.clear();
      }
      if (hasOneBuilder_ != null) {
        hasOneBuilder_.clear();
      }
      if (hasManyBuilder_ != null) {
        hasManyBuilder_.clear();
      }
      if (featureTimeBuilder_ != null) {
        featureTimeBuilder_.clear();
      }
      if (windowedBuilder_ != null) {
        windowedBuilder_.clear();
      }
      if (groupByBuilder_ != null) {
        groupByBuilder_.clear();
      }
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.graph.v1.GraphProto.internal_static_chalk_graph_v1_FeatureType_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.FeatureType getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.graph.v1.FeatureType.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.FeatureType build() {
      ai.chalk.protos.chalk.graph.v1.FeatureType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.FeatureType buildPartial() {
      ai.chalk.protos.chalk.graph.v1.FeatureType result = new ai.chalk.protos.chalk.graph.v1.FeatureType(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.graph.v1.FeatureType result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.graph.v1.FeatureType result) {
      result.typeCase_ = typeCase_;
      result.type_ = this.type_;
      if (typeCase_ == 1 &&
          scalarBuilder_ != null) {
        result.type_ = scalarBuilder_.build();
      }
      if (typeCase_ == 2 &&
          hasOneBuilder_ != null) {
        result.type_ = hasOneBuilder_.build();
      }
      if (typeCase_ == 3 &&
          hasManyBuilder_ != null) {
        result.type_ = hasManyBuilder_.build();
      }
      if (typeCase_ == 4 &&
          featureTimeBuilder_ != null) {
        result.type_ = featureTimeBuilder_.build();
      }
      if (typeCase_ == 5 &&
          windowedBuilder_ != null) {
        result.type_ = windowedBuilder_.build();
      }
      if (typeCase_ == 6 &&
          groupByBuilder_ != null) {
        result.type_ = groupByBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.graph.v1.FeatureType) {
        return mergeFrom((ai.chalk.protos.chalk.graph.v1.FeatureType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.graph.v1.FeatureType other) {
      if (other == ai.chalk.protos.chalk.graph.v1.FeatureType.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case SCALAR: {
          mergeScalar(other.getScalar());
          break;
        }
        case HAS_ONE: {
          mergeHasOne(other.getHasOne());
          break;
        }
        case HAS_MANY: {
          mergeHasMany(other.getHasMany());
          break;
        }
        case FEATURE_TIME: {
          mergeFeatureTime(other.getFeatureTime());
          break;
        }
        case WINDOWED: {
          mergeWindowed(other.getWindowed());
          break;
        }
        case GROUP_BY: {
          mergeGroupBy(other.getGroupBy());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getScalarFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getHasOneFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getHasManyFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getFeatureTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getWindowedFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getGroupByFieldBuilder().getBuilder(),
                  extensionRegistry);
              typeCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.ScalarFeatureType, ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.ScalarFeatureTypeOrBuilder> scalarBuilder_;
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     * @return Whether the scalar field is set.
     */
    @java.lang.Override
    public boolean hasScalar() {
      return typeCase_ == 1;
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     * @return The scalar.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.ScalarFeatureType getScalar() {
      if (scalarBuilder_ == null) {
        if (typeCase_ == 1) {
          return (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return scalarBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    public Builder setScalar(ai.chalk.protos.chalk.graph.v1.ScalarFeatureType value) {
      if (scalarBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        scalarBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    public Builder setScalar(
        ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.Builder builderForValue) {
      if (scalarBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        scalarBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    public Builder mergeScalar(ai.chalk.protos.chalk.graph.v1.ScalarFeatureType value) {
      if (scalarBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          scalarBuilder_.mergeFrom(value);
        } else {
          scalarBuilder_.setMessage(value);
        }
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    public Builder clearScalar() {
      if (scalarBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        scalarBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.Builder getScalarBuilder() {
      return getScalarFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.ScalarFeatureTypeOrBuilder getScalarOrBuilder() {
      if ((typeCase_ == 1) && (scalarBuilder_ != null)) {
        return scalarBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.ScalarFeatureType scalar = 1 [json_name = "scalar"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.ScalarFeatureType, ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.ScalarFeatureTypeOrBuilder> 
        getScalarFieldBuilder() {
      if (scalarBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.getDefaultInstance();
        }
        scalarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.ScalarFeatureType, ai.chalk.protos.chalk.graph.v1.ScalarFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.ScalarFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.ScalarFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();
      return scalarBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.HasOneFeatureType, ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasOneFeatureTypeOrBuilder> hasOneBuilder_;
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     * @return Whether the hasOne field is set.
     */
    @java.lang.Override
    public boolean hasHasOne() {
      return typeCase_ == 2;
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     * @return The hasOne.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.HasOneFeatureType getHasOne() {
      if (hasOneBuilder_ == null) {
        if (typeCase_ == 2) {
          return (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return hasOneBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    public Builder setHasOne(ai.chalk.protos.chalk.graph.v1.HasOneFeatureType value) {
      if (hasOneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        hasOneBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    public Builder setHasOne(
        ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.Builder builderForValue) {
      if (hasOneBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        hasOneBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    public Builder mergeHasOne(ai.chalk.protos.chalk.graph.v1.HasOneFeatureType value) {
      if (hasOneBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          hasOneBuilder_.mergeFrom(value);
        } else {
          hasOneBuilder_.setMessage(value);
        }
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    public Builder clearHasOne() {
      if (hasOneBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        hasOneBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.Builder getHasOneBuilder() {
      return getHasOneFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.HasOneFeatureTypeOrBuilder getHasOneOrBuilder() {
      if ((typeCase_ == 2) && (hasOneBuilder_ != null)) {
        return hasOneBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.HasOneFeatureType has_one = 2 [json_name = "hasOne"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.HasOneFeatureType, ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasOneFeatureTypeOrBuilder> 
        getHasOneFieldBuilder() {
      if (hasOneBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.getDefaultInstance();
        }
        hasOneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.HasOneFeatureType, ai.chalk.protos.chalk.graph.v1.HasOneFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasOneFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.HasOneFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();
      return hasOneBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.HasManyFeatureType, ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasManyFeatureTypeOrBuilder> hasManyBuilder_;
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     * @return Whether the hasMany field is set.
     */
    @java.lang.Override
    public boolean hasHasMany() {
      return typeCase_ == 3;
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     * @return The hasMany.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.HasManyFeatureType getHasMany() {
      if (hasManyBuilder_ == null) {
        if (typeCase_ == 3) {
          return (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 3) {
          return hasManyBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder setHasMany(ai.chalk.protos.chalk.graph.v1.HasManyFeatureType value) {
      if (hasManyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        hasManyBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder setHasMany(
        ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.Builder builderForValue) {
      if (hasManyBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        hasManyBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder mergeHasMany(ai.chalk.protos.chalk.graph.v1.HasManyFeatureType value) {
      if (hasManyBuilder_ == null) {
        if (typeCase_ == 3 &&
            type_ != ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3) {
          hasManyBuilder_.mergeFrom(value);
        } else {
          hasManyBuilder_.setMessage(value);
        }
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder clearHasMany() {
      if (hasManyBuilder_ == null) {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
        }
        hasManyBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.Builder getHasManyBuilder() {
      return getHasManyFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.HasManyFeatureTypeOrBuilder getHasManyOrBuilder() {
      if ((typeCase_ == 3) && (hasManyBuilder_ != null)) {
        return hasManyBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3) {
          return (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.HasManyFeatureType has_many = 3 [json_name = "hasMany"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.HasManyFeatureType, ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasManyFeatureTypeOrBuilder> 
        getHasManyFieldBuilder() {
      if (hasManyBuilder_ == null) {
        if (!(typeCase_ == 3)) {
          type_ = ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.getDefaultInstance();
        }
        hasManyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.HasManyFeatureType, ai.chalk.protos.chalk.graph.v1.HasManyFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.HasManyFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.HasManyFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3;
      onChanged();
      return hasManyBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureTypeOrBuilder> featureTimeBuilder_;
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     * @return Whether the featureTime field is set.
     */
    @java.lang.Override
    public boolean hasFeatureTime() {
      return typeCase_ == 4;
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     * @return The featureTime.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType getFeatureTime() {
      if (featureTimeBuilder_ == null) {
        if (typeCase_ == 4) {
          return (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return featureTimeBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    public Builder setFeatureTime(ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType value) {
      if (featureTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        featureTimeBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    public Builder setFeatureTime(
        ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.Builder builderForValue) {
      if (featureTimeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        featureTimeBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    public Builder mergeFeatureTime(ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType value) {
      if (featureTimeBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          featureTimeBuilder_.mergeFrom(value);
        } else {
          featureTimeBuilder_.setMessage(value);
        }
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    public Builder clearFeatureTime() {
      if (featureTimeBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        featureTimeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.Builder getFeatureTimeBuilder() {
      return getFeatureTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureTypeOrBuilder getFeatureTimeOrBuilder() {
      if ((typeCase_ == 4) && (featureTimeBuilder_ != null)) {
        return featureTimeBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.FeatureTimeFeatureType feature_time = 4 [json_name = "featureTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureTypeOrBuilder> 
        getFeatureTimeFieldBuilder() {
      if (featureTimeBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.getDefaultInstance();
        }
        featureTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.FeatureTimeFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();
      return featureTimeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.WindowedFeatureType, ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.WindowedFeatureTypeOrBuilder> windowedBuilder_;
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     * @return Whether the windowed field is set.
     */
    @java.lang.Override
    public boolean hasWindowed() {
      return typeCase_ == 5;
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     * @return The windowed.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.WindowedFeatureType getWindowed() {
      if (windowedBuilder_ == null) {
        if (typeCase_ == 5) {
          return (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 5) {
          return windowedBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    public Builder setWindowed(ai.chalk.protos.chalk.graph.v1.WindowedFeatureType value) {
      if (windowedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        windowedBuilder_.setMessage(value);
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    public Builder setWindowed(
        ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.Builder builderForValue) {
      if (windowedBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        windowedBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    public Builder mergeWindowed(ai.chalk.protos.chalk.graph.v1.WindowedFeatureType value) {
      if (windowedBuilder_ == null) {
        if (typeCase_ == 5 &&
            type_ != ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 5) {
          windowedBuilder_.mergeFrom(value);
        } else {
          windowedBuilder_.setMessage(value);
        }
      }
      typeCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    public Builder clearWindowed() {
      if (windowedBuilder_ == null) {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
        }
        windowedBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.Builder getWindowedBuilder() {
      return getWindowedFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.WindowedFeatureTypeOrBuilder getWindowedOrBuilder() {
      if ((typeCase_ == 5) && (windowedBuilder_ != null)) {
        return windowedBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 5) {
          return (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.WindowedFeatureType windowed = 5 [json_name = "windowed"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.WindowedFeatureType, ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.WindowedFeatureTypeOrBuilder> 
        getWindowedFieldBuilder() {
      if (windowedBuilder_ == null) {
        if (!(typeCase_ == 5)) {
          type_ = ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.getDefaultInstance();
        }
        windowedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.WindowedFeatureType, ai.chalk.protos.chalk.graph.v1.WindowedFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.WindowedFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.WindowedFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 5;
      onChanged();
      return windowedBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.GroupByFeatureType, ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.GroupByFeatureTypeOrBuilder> groupByBuilder_;
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     * @return Whether the groupBy field is set.
     */
    @java.lang.Override
    public boolean hasGroupBy() {
      return typeCase_ == 6;
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     * @return The groupBy.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.GroupByFeatureType getGroupBy() {
      if (groupByBuilder_ == null) {
        if (typeCase_ == 6) {
          return (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
      } else {
        if (typeCase_ == 6) {
          return groupByBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    public Builder setGroupBy(ai.chalk.protos.chalk.graph.v1.GroupByFeatureType value) {
      if (groupByBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        groupByBuilder_.setMessage(value);
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    public Builder setGroupBy(
        ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.Builder builderForValue) {
      if (groupByBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        groupByBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    public Builder mergeGroupBy(ai.chalk.protos.chalk.graph.v1.GroupByFeatureType value) {
      if (groupByBuilder_ == null) {
        if (typeCase_ == 6 &&
            type_ != ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance()) {
          type_ = ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.newBuilder((ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 6) {
          groupByBuilder_.mergeFrom(value);
        } else {
          groupByBuilder_.setMessage(value);
        }
      }
      typeCase_ = 6;
      return this;
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    public Builder clearGroupBy() {
      if (groupByBuilder_ == null) {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 6) {
          typeCase_ = 0;
          type_ = null;
        }
        groupByBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    public ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.Builder getGroupByBuilder() {
      return getGroupByFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.graph.v1.GroupByFeatureTypeOrBuilder getGroupByOrBuilder() {
      if ((typeCase_ == 6) && (groupByBuilder_ != null)) {
        return groupByBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 6) {
          return (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_;
        }
        return ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.graph.v1.GroupByFeatureType group_by = 6 [json_name = "groupBy"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.graph.v1.GroupByFeatureType, ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.GroupByFeatureTypeOrBuilder> 
        getGroupByFieldBuilder() {
      if (groupByBuilder_ == null) {
        if (!(typeCase_ == 6)) {
          type_ = ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.getDefaultInstance();
        }
        groupByBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.graph.v1.GroupByFeatureType, ai.chalk.protos.chalk.graph.v1.GroupByFeatureType.Builder, ai.chalk.protos.chalk.graph.v1.GroupByFeatureTypeOrBuilder>(
                (ai.chalk.protos.chalk.graph.v1.GroupByFeatureType) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 6;
      onChanged();
      return groupByBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:chalk.graph.v1.FeatureType)
  }

  // @@protoc_insertion_point(class_scope:chalk.graph.v1.FeatureType)
  private static final ai.chalk.protos.chalk.graph.v1.FeatureType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.graph.v1.FeatureType();
  }

  public static ai.chalk.protos.chalk.graph.v1.FeatureType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FeatureType>
      PARSER = new com.google.protobuf.AbstractParser<FeatureType>() {
    @java.lang.Override
    public FeatureType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FeatureType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FeatureType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.graph.v1.FeatureType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

