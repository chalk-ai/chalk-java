// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v1/graph.proto

// Protobuf Java Version: 3.25.3
package ai.chalk.protos.chalk.graph.v1;

public interface ResolverInputOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.graph.v1.ResolverInput)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.graph.v1.FeatureInput feature = 1 [json_name = "feature"];</code>
   * @return Whether the feature field is set.
   */
  boolean hasFeature();
  /**
   * <code>.chalk.graph.v1.FeatureInput feature = 1 [json_name = "feature"];</code>
   * @return The feature.
   */
  ai.chalk.protos.chalk.graph.v1.FeatureInput getFeature();
  /**
   * <code>.chalk.graph.v1.FeatureInput feature = 1 [json_name = "feature"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.FeatureInputOrBuilder getFeatureOrBuilder();

  /**
   * <code>.chalk.graph.v1.DataFrameType df = 2 [json_name = "df"];</code>
   * @return Whether the df field is set.
   */
  boolean hasDf();
  /**
   * <code>.chalk.graph.v1.DataFrameType df = 2 [json_name = "df"];</code>
   * @return The df.
   */
  ai.chalk.protos.chalk.graph.v1.DataFrameType getDf();
  /**
   * <code>.chalk.graph.v1.DataFrameType df = 2 [json_name = "df"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.DataFrameTypeOrBuilder getDfOrBuilder();

  /**
   * <code>.chalk.graph.v1.ResolverState state = 3 [json_name = "state"];</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <code>.chalk.graph.v1.ResolverState state = 3 [json_name = "state"];</code>
   * @return The state.
   */
  ai.chalk.protos.chalk.graph.v1.ResolverState getState();
  /**
   * <code>.chalk.graph.v1.ResolverState state = 3 [json_name = "state"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverStateOrBuilder getStateOrBuilder();

  ai.chalk.protos.chalk.graph.v1.ResolverInput.AnnotationCase getAnnotationCase();
}
