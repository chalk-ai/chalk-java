// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v1/graph.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v1;

public interface GraphOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.graph.v1.Graph)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .chalk.graph.v1.FeatureSet feature_sets = 1 [json_name = "featureSets"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.FeatureSet> 
      getFeatureSetsList();
  /**
   * <code>repeated .chalk.graph.v1.FeatureSet feature_sets = 1 [json_name = "featureSets"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.FeatureSet getFeatureSets(int index);
  /**
   * <code>repeated .chalk.graph.v1.FeatureSet feature_sets = 1 [json_name = "featureSets"];</code>
   */
  int getFeatureSetsCount();
  /**
   * <code>repeated .chalk.graph.v1.FeatureSet feature_sets = 1 [json_name = "featureSets"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.FeatureSetOrBuilder> 
      getFeatureSetsOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.FeatureSet feature_sets = 1 [json_name = "featureSets"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.FeatureSetOrBuilder getFeatureSetsOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v1.Resolver resolvers = 2 [json_name = "resolvers"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.Resolver> 
      getResolversList();
  /**
   * <code>repeated .chalk.graph.v1.Resolver resolvers = 2 [json_name = "resolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.Resolver getResolvers(int index);
  /**
   * <code>repeated .chalk.graph.v1.Resolver resolvers = 2 [json_name = "resolvers"];</code>
   */
  int getResolversCount();
  /**
   * <code>repeated .chalk.graph.v1.Resolver resolvers = 2 [json_name = "resolvers"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.ResolverOrBuilder> 
      getResolversOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.Resolver resolvers = 2 [json_name = "resolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverOrBuilder getResolversOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v1.StreamResolver stream_resolvers = 3 [json_name = "streamResolvers"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.StreamResolver> 
      getStreamResolversList();
  /**
   * <code>repeated .chalk.graph.v1.StreamResolver stream_resolvers = 3 [json_name = "streamResolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.StreamResolver getStreamResolvers(int index);
  /**
   * <code>repeated .chalk.graph.v1.StreamResolver stream_resolvers = 3 [json_name = "streamResolvers"];</code>
   */
  int getStreamResolversCount();
  /**
   * <code>repeated .chalk.graph.v1.StreamResolver stream_resolvers = 3 [json_name = "streamResolvers"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.StreamResolverOrBuilder> 
      getStreamResolversOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.StreamResolver stream_resolvers = 3 [json_name = "streamResolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.StreamResolverOrBuilder getStreamResolversOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v1.SinkResolver sink_resolvers = 4 [json_name = "sinkResolvers"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.SinkResolver> 
      getSinkResolversList();
  /**
   * <code>repeated .chalk.graph.v1.SinkResolver sink_resolvers = 4 [json_name = "sinkResolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.SinkResolver getSinkResolvers(int index);
  /**
   * <code>repeated .chalk.graph.v1.SinkResolver sink_resolvers = 4 [json_name = "sinkResolvers"];</code>
   */
  int getSinkResolversCount();
  /**
   * <code>repeated .chalk.graph.v1.SinkResolver sink_resolvers = 4 [json_name = "sinkResolvers"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.SinkResolverOrBuilder> 
      getSinkResolversOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.SinkResolver sink_resolvers = 4 [json_name = "sinkResolvers"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.SinkResolverOrBuilder getSinkResolversOrBuilder(
      int index);

  /**
   * <pre>
   * database_sources is deprecated; see database_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.DatabaseSource database_sources = 5 [json_name = "databaseSources", deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<ai.chalk.protos.chalk.graph.v1.DatabaseSource> 
      getDatabaseSourcesList();
  /**
   * <pre>
   * database_sources is deprecated; see database_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.DatabaseSource database_sources = 5 [json_name = "databaseSources", deprecated = true];</code>
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.DatabaseSource getDatabaseSources(int index);
  /**
   * <pre>
   * database_sources is deprecated; see database_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.DatabaseSource database_sources = 5 [json_name = "databaseSources", deprecated = true];</code>
   */
  @java.lang.Deprecated int getDatabaseSourcesCount();
  /**
   * <pre>
   * database_sources is deprecated; see database_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.DatabaseSource database_sources = 5 [json_name = "databaseSources", deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<? extends ai.chalk.protos.chalk.graph.v1.DatabaseSourceOrBuilder> 
      getDatabaseSourcesOrBuilderList();
  /**
   * <pre>
   * database_sources is deprecated; see database_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.DatabaseSource database_sources = 5 [json_name = "databaseSources", deprecated = true];</code>
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.DatabaseSourceOrBuilder getDatabaseSourcesOrBuilder(
      int index);

  /**
   * <pre>
   * stream_sources is deprecated; see stream_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.StreamSource stream_sources = 6 [json_name = "streamSources", deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<ai.chalk.protos.chalk.graph.v1.StreamSource> 
      getStreamSourcesList();
  /**
   * <pre>
   * stream_sources is deprecated; see stream_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.StreamSource stream_sources = 6 [json_name = "streamSources", deprecated = true];</code>
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.StreamSource getStreamSources(int index);
  /**
   * <pre>
   * stream_sources is deprecated; see stream_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.StreamSource stream_sources = 6 [json_name = "streamSources", deprecated = true];</code>
   */
  @java.lang.Deprecated int getStreamSourcesCount();
  /**
   * <pre>
   * stream_sources is deprecated; see stream_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.StreamSource stream_sources = 6 [json_name = "streamSources", deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<? extends ai.chalk.protos.chalk.graph.v1.StreamSourceOrBuilder> 
      getStreamSourcesOrBuilderList();
  /**
   * <pre>
   * stream_sources is deprecated; see stream_sources_v2
   * </pre>
   *
   * <code>repeated .chalk.graph.v1.StreamSource stream_sources = 6 [json_name = "streamSources", deprecated = true];</code>
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.StreamSourceOrBuilder getStreamSourcesOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v1.NamedQuery named_queries = 7 [json_name = "namedQueries"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.NamedQuery> 
      getNamedQueriesList();
  /**
   * <code>repeated .chalk.graph.v1.NamedQuery named_queries = 7 [json_name = "namedQueries"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.NamedQuery getNamedQueries(int index);
  /**
   * <code>repeated .chalk.graph.v1.NamedQuery named_queries = 7 [json_name = "namedQueries"];</code>
   */
  int getNamedQueriesCount();
  /**
   * <code>repeated .chalk.graph.v1.NamedQuery named_queries = 7 [json_name = "namedQueries"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.NamedQueryOrBuilder> 
      getNamedQueriesOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.NamedQuery named_queries = 7 [json_name = "namedQueries"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.NamedQueryOrBuilder getNamedQueriesOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v2.DatabaseSource database_sources_v2 = 8 [json_name = "databaseSourcesV2"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v2.DatabaseSource> 
      getDatabaseSourcesV2List();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSource database_sources_v2 = 8 [json_name = "databaseSourcesV2"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.DatabaseSource getDatabaseSourcesV2(int index);
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSource database_sources_v2 = 8 [json_name = "databaseSourcesV2"];</code>
   */
  int getDatabaseSourcesV2Count();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSource database_sources_v2 = 8 [json_name = "databaseSourcesV2"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v2.DatabaseSourceOrBuilder> 
      getDatabaseSourcesV2OrBuilderList();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSource database_sources_v2 = 8 [json_name = "databaseSourcesV2"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.DatabaseSourceOrBuilder getDatabaseSourcesV2OrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v2.DatabaseSourceGroup database_source_groups = 10 [json_name = "databaseSourceGroups"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v2.DatabaseSourceGroup> 
      getDatabaseSourceGroupsList();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSourceGroup database_source_groups = 10 [json_name = "databaseSourceGroups"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.DatabaseSourceGroup getDatabaseSourceGroups(int index);
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSourceGroup database_source_groups = 10 [json_name = "databaseSourceGroups"];</code>
   */
  int getDatabaseSourceGroupsCount();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSourceGroup database_source_groups = 10 [json_name = "databaseSourceGroups"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v2.DatabaseSourceGroupOrBuilder> 
      getDatabaseSourceGroupsOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v2.DatabaseSourceGroup database_source_groups = 10 [json_name = "databaseSourceGroups"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.DatabaseSourceGroupOrBuilder getDatabaseSourceGroupsOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v2.StreamSource stream_sources_v2 = 9 [json_name = "streamSourcesV2"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v2.StreamSource> 
      getStreamSourcesV2List();
  /**
   * <code>repeated .chalk.graph.v2.StreamSource stream_sources_v2 = 9 [json_name = "streamSourcesV2"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.StreamSource getStreamSourcesV2(int index);
  /**
   * <code>repeated .chalk.graph.v2.StreamSource stream_sources_v2 = 9 [json_name = "streamSourcesV2"];</code>
   */
  int getStreamSourcesV2Count();
  /**
   * <code>repeated .chalk.graph.v2.StreamSource stream_sources_v2 = 9 [json_name = "streamSourcesV2"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v2.StreamSourceOrBuilder> 
      getStreamSourcesV2OrBuilderList();
  /**
   * <code>repeated .chalk.graph.v2.StreamSource stream_sources_v2 = 9 [json_name = "streamSourcesV2"];</code>
   */
  ai.chalk.protos.chalk.graph.v2.StreamSourceOrBuilder getStreamSourcesV2OrBuilder(
      int index);
}
