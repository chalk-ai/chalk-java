// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v2/sources.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v2;

public interface StreamSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.graph.v2.StreamSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The type of the stream source -- e.g. kafka, pubsub, sqs
   * </pre>
   *
   * <code>string source_type = 1 [json_name = "sourceType"];</code>
   * @return The sourceType.
   */
  java.lang.String getSourceType();
  /**
   * <pre>
   * The type of the stream source -- e.g. kafka, pubsub, sqs
   * </pre>
   *
   * <code>string source_type = 1 [json_name = "sourceType"];</code>
   * @return The bytes for sourceType.
   */
  com.google.protobuf.ByteString
      getSourceTypeBytes();

  /**
   * <pre>
   * The (customer provided) name for the stream source. The default source for the given type is represented by the empty string
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The (customer provided) name for the stream source. The default source for the given type is represented by the empty string
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Additional source-specific options. DO NOT STORE CREDENTIALS IN HERE.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Value&gt; options = 3 [json_name = "options"];</code>
   */
  int getOptionsCount();
  /**
   * <pre>
   * Additional source-specific options. DO NOT STORE CREDENTIALS IN HERE.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Value&gt; options = 3 [json_name = "options"];</code>
   */
  boolean containsOptions(
      java.lang.String key);
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Value>
  getOptions();
  /**
   * <pre>
   * Additional source-specific options. DO NOT STORE CREDENTIALS IN HERE.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Value&gt; options = 3 [json_name = "options"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Value>
  getOptionsMap();
  /**
   * <pre>
   * Additional source-specific options. DO NOT STORE CREDENTIALS IN HERE.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Value&gt; options = 3 [json_name = "options"];</code>
   */
  /* nullable */
com.google.protobuf.Value getOptionsOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Value defaultValue);
  /**
   * <pre>
   * Additional source-specific options. DO NOT STORE CREDENTIALS IN HERE.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Value&gt; options = 3 [json_name = "options"];</code>
   */
  com.google.protobuf.Value getOptionsOrThrow(
      java.lang.String key);
}
