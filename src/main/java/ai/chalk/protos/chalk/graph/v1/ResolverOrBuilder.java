// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/graph/v1/graph.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.graph.v1;

public interface ResolverOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.graph.v1.Resolver)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string fqn = 1 [json_name = "fqn"];</code>
   * @return The fqn.
   */
  java.lang.String getFqn();
  /**
   * <code>string fqn = 1 [json_name = "fqn"];</code>
   * @return The bytes for fqn.
   */
  com.google.protobuf.ByteString
      getFqnBytes();

  /**
   * <code>.chalk.graph.v1.ResolverKind kind = 2 [json_name = "kind"];</code>
   * @return The enum numeric value on the wire for kind.
   */
  int getKindValue();
  /**
   * <code>.chalk.graph.v1.ResolverKind kind = 2 [json_name = "kind"];</code>
   * @return The kind.
   */
  ai.chalk.protos.chalk.graph.v1.ResolverKind getKind();

  /**
   * <code>repeated .chalk.graph.v1.ResolverInput inputs = 3 [json_name = "inputs"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.ResolverInput> 
      getInputsList();
  /**
   * <code>repeated .chalk.graph.v1.ResolverInput inputs = 3 [json_name = "inputs"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverInput getInputs(int index);
  /**
   * <code>repeated .chalk.graph.v1.ResolverInput inputs = 3 [json_name = "inputs"];</code>
   */
  int getInputsCount();
  /**
   * <code>repeated .chalk.graph.v1.ResolverInput inputs = 3 [json_name = "inputs"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.ResolverInputOrBuilder> 
      getInputsOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.ResolverInput inputs = 3 [json_name = "inputs"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverInputOrBuilder getInputsOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.graph.v1.ResolverOutput outputs = 4 [json_name = "outputs"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.ResolverOutput> 
      getOutputsList();
  /**
   * <code>repeated .chalk.graph.v1.ResolverOutput outputs = 4 [json_name = "outputs"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverOutput getOutputs(int index);
  /**
   * <code>repeated .chalk.graph.v1.ResolverOutput outputs = 4 [json_name = "outputs"];</code>
   */
  int getOutputsCount();
  /**
   * <code>repeated .chalk.graph.v1.ResolverOutput outputs = 4 [json_name = "outputs"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.ResolverOutputOrBuilder> 
      getOutputsOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.ResolverOutput outputs = 4 [json_name = "outputs"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ResolverOutputOrBuilder getOutputsOrBuilder(
      int index);

  /**
   * <code>bool is_generator = 5 [json_name = "isGenerator"];</code>
   * @return The isGenerator.
   */
  boolean getIsGenerator();

  /**
   * <code>repeated .chalk.graph.v1.DatabaseSourceReference data_sources = 6 [json_name = "dataSources"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.graph.v1.DatabaseSourceReference> 
      getDataSourcesList();
  /**
   * <code>repeated .chalk.graph.v1.DatabaseSourceReference data_sources = 6 [json_name = "dataSources"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.DatabaseSourceReference getDataSources(int index);
  /**
   * <code>repeated .chalk.graph.v1.DatabaseSourceReference data_sources = 6 [json_name = "dataSources"];</code>
   */
  int getDataSourcesCount();
  /**
   * <code>repeated .chalk.graph.v1.DatabaseSourceReference data_sources = 6 [json_name = "dataSources"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.graph.v1.DatabaseSourceReferenceOrBuilder> 
      getDataSourcesOrBuilderList();
  /**
   * <code>repeated .chalk.graph.v1.DatabaseSourceReference data_sources = 6 [json_name = "dataSources"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.DatabaseSourceReferenceOrBuilder getDataSourcesOrBuilder(
      int index);

  /**
   * <code>optional string machine_type = 7 [json_name = "machineType"];</code>
   * @return Whether the machineType field is set.
   */
  boolean hasMachineType();
  /**
   * <code>optional string machine_type = 7 [json_name = "machineType"];</code>
   * @return The machineType.
   */
  java.lang.String getMachineType();
  /**
   * <code>optional string machine_type = 7 [json_name = "machineType"];</code>
   * @return The bytes for machineType.
   */
  com.google.protobuf.ByteString
      getMachineTypeBytes();

  /**
   * <code>repeated string tags = 8 [json_name = "tags"];</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.String>
      getTagsList();
  /**
   * <code>repeated string tags = 8 [json_name = "tags"];</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <code>repeated string tags = 8 [json_name = "tags"];</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  java.lang.String getTags(int index);
  /**
   * <code>repeated string tags = 8 [json_name = "tags"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  com.google.protobuf.ByteString
      getTagsBytes(int index);

  /**
   * <code>optional string owner = 9 [json_name = "owner"];</code>
   * @return Whether the owner field is set.
   */
  boolean hasOwner();
  /**
   * <code>optional string owner = 9 [json_name = "owner"];</code>
   * @return The owner.
   */
  java.lang.String getOwner();
  /**
   * <code>optional string owner = 9 [json_name = "owner"];</code>
   * @return The bytes for owner.
   */
  com.google.protobuf.ByteString
      getOwnerBytes();

  /**
   * <pre>
   * The docstring of the python function
   * </pre>
   *
   * <code>optional string doc = 10 [json_name = "doc"];</code>
   * @return Whether the doc field is set.
   */
  boolean hasDoc();
  /**
   * <pre>
   * The docstring of the python function
   * </pre>
   *
   * <code>optional string doc = 10 [json_name = "doc"];</code>
   * @return The doc.
   */
  java.lang.String getDoc();
  /**
   * <pre>
   * The docstring of the python function
   * </pre>
   *
   * <code>optional string doc = 10 [json_name = "doc"];</code>
   * @return The bytes for doc.
   */
  com.google.protobuf.ByteString
      getDocBytes();

  /**
   * <code>repeated string environments = 11 [json_name = "environments"];</code>
   * @return A list containing the environments.
   */
  java.util.List<java.lang.String>
      getEnvironmentsList();
  /**
   * <code>repeated string environments = 11 [json_name = "environments"];</code>
   * @return The count of environments.
   */
  int getEnvironmentsCount();
  /**
   * <code>repeated string environments = 11 [json_name = "environments"];</code>
   * @param index The index of the element to return.
   * @return The environments at the given index.
   */
  java.lang.String getEnvironments(int index);
  /**
   * <code>repeated string environments = 11 [json_name = "environments"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the environments at the given index.
   */
  com.google.protobuf.ByteString
      getEnvironmentsBytes(int index);

  /**
   * <code>.google.protobuf.Duration timeout_duration = 12 [json_name = "timeoutDuration"];</code>
   * @return Whether the timeoutDuration field is set.
   */
  boolean hasTimeoutDuration();
  /**
   * <code>.google.protobuf.Duration timeout_duration = 12 [json_name = "timeoutDuration"];</code>
   * @return The timeoutDuration.
   */
  com.google.protobuf.Duration getTimeoutDuration();
  /**
   * <code>.google.protobuf.Duration timeout_duration = 12 [json_name = "timeoutDuration"];</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutDurationOrBuilder();

  /**
   * <code>.chalk.graph.v1.Schedule schedule = 13 [json_name = "schedule"];</code>
   * @return Whether the schedule field is set.
   */
  boolean hasSchedule();
  /**
   * <code>.chalk.graph.v1.Schedule schedule = 13 [json_name = "schedule"];</code>
   * @return The schedule.
   */
  ai.chalk.protos.chalk.graph.v1.Schedule getSchedule();
  /**
   * <code>.chalk.graph.v1.Schedule schedule = 13 [json_name = "schedule"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.ScheduleOrBuilder getScheduleOrBuilder();

  /**
   * <code>.chalk.expression.v1.LogicalExprNode when = 14 [json_name = "when"];</code>
   * @return Whether the when field is set.
   */
  boolean hasWhen();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode when = 14 [json_name = "when"];</code>
   * @return The when.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getWhen();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode when = 14 [json_name = "when"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getWhenOrBuilder();

  /**
   * <code>.chalk.graph.v1.CronFilterWithFeatureArgs cron_filter = 15 [json_name = "cronFilter"];</code>
   * @return Whether the cronFilter field is set.
   */
  boolean hasCronFilter();
  /**
   * <code>.chalk.graph.v1.CronFilterWithFeatureArgs cron_filter = 15 [json_name = "cronFilter"];</code>
   * @return The cronFilter.
   */
  ai.chalk.protos.chalk.graph.v1.CronFilterWithFeatureArgs getCronFilter();
  /**
   * <code>.chalk.graph.v1.CronFilterWithFeatureArgs cron_filter = 15 [json_name = "cronFilter"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.CronFilterWithFeatureArgsOrBuilder getCronFilterOrBuilder();

  /**
   * <code>.chalk.graph.v1.FunctionReference function = 16 [json_name = "function"];</code>
   * @return Whether the function field is set.
   */
  boolean hasFunction();
  /**
   * <code>.chalk.graph.v1.FunctionReference function = 16 [json_name = "function"];</code>
   * @return The function.
   */
  ai.chalk.protos.chalk.graph.v1.FunctionReference getFunction();
  /**
   * <code>.chalk.graph.v1.FunctionReference function = 16 [json_name = "function"];</code>
   */
  ai.chalk.protos.chalk.graph.v1.FunctionReferenceOrBuilder getFunctionOrBuilder();

  /**
   * <code>.chalk.graph.v1.ResourceHint resource_hint = 17 [json_name = "resourceHint"];</code>
   * @return The enum numeric value on the wire for resourceHint.
   */
  int getResourceHintValue();
  /**
   * <code>.chalk.graph.v1.ResourceHint resource_hint = 17 [json_name = "resourceHint"];</code>
   * @return The resourceHint.
   */
  ai.chalk.protos.chalk.graph.v1.ResourceHint getResourceHint();

  /**
   * <code>bool is_static = 18 [json_name = "isStatic"];</code>
   * @return The isStatic.
   */
  boolean getIsStatic();
}
