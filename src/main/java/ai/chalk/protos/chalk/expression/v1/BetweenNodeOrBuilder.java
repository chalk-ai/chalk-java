// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 3.25.3
package ai.chalk.protos.chalk.expression.v1;

public interface BetweenNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.expression.v1.BetweenNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return Whether the expr field is set.
   */
  boolean hasExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return The expr.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getExprOrBuilder();

  /**
   * <code>bool negated = 2 [json_name = "negated"];</code>
   * @return The negated.
   */
  boolean getNegated();

  /**
   * <code>.chalk.expression.v1.LogicalExprNode low = 3 [json_name = "low"];</code>
   * @return Whether the low field is set.
   */
  boolean hasLow();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode low = 3 [json_name = "low"];</code>
   * @return The low.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getLow();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode low = 3 [json_name = "low"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getLowOrBuilder();

  /**
   * <code>.chalk.expression.v1.LogicalExprNode high = 4 [json_name = "high"];</code>
   * @return Whether the high field is set.
   */
  boolean hasHigh();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode high = 4 [json_name = "high"];</code>
   * @return The high.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getHigh();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode high = 4 [json_name = "high"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getHighOrBuilder();
}
