// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.expression.v1;

public interface InListNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.expression.v1.InListNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return Whether the expr field is set.
   */
  boolean hasExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return The expr.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getExprOrBuilder();

  /**
   * <code>repeated .chalk.expression.v1.LogicalExprNode list = 2 [json_name = "list"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.expression.v1.LogicalExprNode> 
      getListList();
  /**
   * <code>repeated .chalk.expression.v1.LogicalExprNode list = 2 [json_name = "list"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getList(int index);
  /**
   * <code>repeated .chalk.expression.v1.LogicalExprNode list = 2 [json_name = "list"];</code>
   */
  int getListCount();
  /**
   * <code>repeated .chalk.expression.v1.LogicalExprNode list = 2 [json_name = "list"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder> 
      getListOrBuilderList();
  /**
   * <code>repeated .chalk.expression.v1.LogicalExprNode list = 2 [json_name = "list"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getListOrBuilder(
      int index);

  /**
   * <code>bool negated = 3 [json_name = "negated"];</code>
   * @return The negated.
   */
  boolean getNegated();
}
