// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.expression.v1;

/**
 * Protobuf type {@code chalk.expression.v1.CaseNode}
 */
public final class CaseNode extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:chalk.expression.v1.CaseNode)
    CaseNodeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      CaseNode.class.getName());
  }
  // Use CaseNode.newBuilder() to construct.
  private CaseNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CaseNode() {
    whenThenExpr_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.expression.v1.ExpressionProto.internal_static_chalk_expression_v1_CaseNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.expression.v1.ExpressionProto.internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.expression.v1.CaseNode.class, ai.chalk.protos.chalk.expression.v1.CaseNode.Builder.class);
  }

  private int bitField0_;
  public static final int EXPR_FIELD_NUMBER = 1;
  private ai.chalk.protos.chalk.expression.v1.LogicalExprNode expr_;
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return Whether the expr field is set.
   */
  @java.lang.Override
  public boolean hasExpr() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   * @return The expr.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.LogicalExprNode getExpr() {
    return expr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : expr_;
  }
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getExprOrBuilder() {
    return expr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : expr_;
  }

  public static final int WHEN_THEN_EXPR_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<ai.chalk.protos.chalk.expression.v1.WhenThen> whenThenExpr_;
  /**
   * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.chalk.protos.chalk.expression.v1.WhenThen> getWhenThenExprList() {
    return whenThenExpr_;
  }
  /**
   * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder> 
      getWhenThenExprOrBuilderList() {
    return whenThenExpr_;
  }
  /**
   * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
   */
  @java.lang.Override
  public int getWhenThenExprCount() {
    return whenThenExpr_.size();
  }
  /**
   * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.WhenThen getWhenThenExpr(int index) {
    return whenThenExpr_.get(index);
  }
  /**
   * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder getWhenThenExprOrBuilder(
      int index) {
    return whenThenExpr_.get(index);
  }

  public static final int ELSE_EXPR_FIELD_NUMBER = 3;
  private ai.chalk.protos.chalk.expression.v1.LogicalExprNode elseExpr_;
  /**
   * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
   * @return Whether the elseExpr field is set.
   */
  @java.lang.Override
  public boolean hasElseExpr() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
   * @return The elseExpr.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.LogicalExprNode getElseExpr() {
    return elseExpr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : elseExpr_;
  }
  /**
   * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getElseExprOrBuilder() {
    return elseExpr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : elseExpr_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getExpr());
    }
    for (int i = 0; i < whenThenExpr_.size(); i++) {
      output.writeMessage(2, whenThenExpr_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getElseExpr());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getExpr());
    }
    for (int i = 0; i < whenThenExpr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, whenThenExpr_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getElseExpr());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.expression.v1.CaseNode)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.expression.v1.CaseNode other = (ai.chalk.protos.chalk.expression.v1.CaseNode) obj;

    if (hasExpr() != other.hasExpr()) return false;
    if (hasExpr()) {
      if (!getExpr()
          .equals(other.getExpr())) return false;
    }
    if (!getWhenThenExprList()
        .equals(other.getWhenThenExprList())) return false;
    if (hasElseExpr() != other.hasElseExpr()) return false;
    if (hasElseExpr()) {
      if (!getElseExpr()
          .equals(other.getElseExpr())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasExpr()) {
      hash = (37 * hash) + EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getExpr().hashCode();
    }
    if (getWhenThenExprCount() > 0) {
      hash = (37 * hash) + WHEN_THEN_EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getWhenThenExprList().hashCode();
    }
    if (hasElseExpr()) {
      hash = (37 * hash) + ELSE_EXPR_FIELD_NUMBER;
      hash = (53 * hash) + getElseExpr().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.expression.v1.CaseNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.expression.v1.CaseNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.expression.v1.CaseNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.expression.v1.CaseNode)
      ai.chalk.protos.chalk.expression.v1.CaseNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.expression.v1.ExpressionProto.internal_static_chalk_expression_v1_CaseNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.expression.v1.ExpressionProto.internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.expression.v1.CaseNode.class, ai.chalk.protos.chalk.expression.v1.CaseNode.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.expression.v1.CaseNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getExprFieldBuilder();
        getWhenThenExprFieldBuilder();
        getElseExprFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      expr_ = null;
      if (exprBuilder_ != null) {
        exprBuilder_.dispose();
        exprBuilder_ = null;
      }
      if (whenThenExprBuilder_ == null) {
        whenThenExpr_ = java.util.Collections.emptyList();
      } else {
        whenThenExpr_ = null;
        whenThenExprBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      elseExpr_ = null;
      if (elseExprBuilder_ != null) {
        elseExprBuilder_.dispose();
        elseExprBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.expression.v1.ExpressionProto.internal_static_chalk_expression_v1_CaseNode_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.expression.v1.CaseNode getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.expression.v1.CaseNode.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.expression.v1.CaseNode build() {
      ai.chalk.protos.chalk.expression.v1.CaseNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.expression.v1.CaseNode buildPartial() {
      ai.chalk.protos.chalk.expression.v1.CaseNode result = new ai.chalk.protos.chalk.expression.v1.CaseNode(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ai.chalk.protos.chalk.expression.v1.CaseNode result) {
      if (whenThenExprBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          whenThenExpr_ = java.util.Collections.unmodifiableList(whenThenExpr_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.whenThenExpr_ = whenThenExpr_;
      } else {
        result.whenThenExpr_ = whenThenExprBuilder_.build();
      }
    }

    private void buildPartial0(ai.chalk.protos.chalk.expression.v1.CaseNode result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.expr_ = exprBuilder_ == null
            ? expr_
            : exprBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.elseExpr_ = elseExprBuilder_ == null
            ? elseExpr_
            : elseExprBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.expression.v1.CaseNode) {
        return mergeFrom((ai.chalk.protos.chalk.expression.v1.CaseNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.expression.v1.CaseNode other) {
      if (other == ai.chalk.protos.chalk.expression.v1.CaseNode.getDefaultInstance()) return this;
      if (other.hasExpr()) {
        mergeExpr(other.getExpr());
      }
      if (whenThenExprBuilder_ == null) {
        if (!other.whenThenExpr_.isEmpty()) {
          if (whenThenExpr_.isEmpty()) {
            whenThenExpr_ = other.whenThenExpr_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureWhenThenExprIsMutable();
            whenThenExpr_.addAll(other.whenThenExpr_);
          }
          onChanged();
        }
      } else {
        if (!other.whenThenExpr_.isEmpty()) {
          if (whenThenExprBuilder_.isEmpty()) {
            whenThenExprBuilder_.dispose();
            whenThenExprBuilder_ = null;
            whenThenExpr_ = other.whenThenExpr_;
            bitField0_ = (bitField0_ & ~0x00000002);
            whenThenExprBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getWhenThenExprFieldBuilder() : null;
          } else {
            whenThenExprBuilder_.addAllMessages(other.whenThenExpr_);
          }
        }
      }
      if (other.hasElseExpr()) {
        mergeElseExpr(other.getElseExpr());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getExprFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              ai.chalk.protos.chalk.expression.v1.WhenThen m =
                  input.readMessage(
                      ai.chalk.protos.chalk.expression.v1.WhenThen.parser(),
                      extensionRegistry);
              if (whenThenExprBuilder_ == null) {
                ensureWhenThenExprIsMutable();
                whenThenExpr_.add(m);
              } else {
                whenThenExprBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getElseExprFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private ai.chalk.protos.chalk.expression.v1.LogicalExprNode expr_;
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder> exprBuilder_;
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     * @return Whether the expr field is set.
     */
    public boolean hasExpr() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     * @return The expr.
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNode getExpr() {
      if (exprBuilder_ == null) {
        return expr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : expr_;
      } else {
        return exprBuilder_.getMessage();
      }
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public Builder setExpr(ai.chalk.protos.chalk.expression.v1.LogicalExprNode value) {
      if (exprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expr_ = value;
      } else {
        exprBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public Builder setExpr(
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder builderForValue) {
      if (exprBuilder_ == null) {
        expr_ = builderForValue.build();
      } else {
        exprBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public Builder mergeExpr(ai.chalk.protos.chalk.expression.v1.LogicalExprNode value) {
      if (exprBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          expr_ != null &&
          expr_ != ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance()) {
          getExprBuilder().mergeFrom(value);
        } else {
          expr_ = value;
        }
      } else {
        exprBuilder_.mergeFrom(value);
      }
      if (expr_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public Builder clearExpr() {
      bitField0_ = (bitField0_ & ~0x00000001);
      expr_ = null;
      if (exprBuilder_ != null) {
        exprBuilder_.dispose();
        exprBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder getExprBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getExprFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getExprOrBuilder() {
      if (exprBuilder_ != null) {
        return exprBuilder_.getMessageOrBuilder();
      } else {
        return expr_ == null ?
            ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : expr_;
      }
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode expr = 1 [json_name = "expr"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder> 
        getExprFieldBuilder() {
      if (exprBuilder_ == null) {
        exprBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder>(
                getExpr(),
                getParentForChildren(),
                isClean());
        expr_ = null;
      }
      return exprBuilder_;
    }

    private java.util.List<ai.chalk.protos.chalk.expression.v1.WhenThen> whenThenExpr_ =
      java.util.Collections.emptyList();
    private void ensureWhenThenExprIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        whenThenExpr_ = new java.util.ArrayList<ai.chalk.protos.chalk.expression.v1.WhenThen>(whenThenExpr_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.WhenThen, ai.chalk.protos.chalk.expression.v1.WhenThen.Builder, ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder> whenThenExprBuilder_;

    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.expression.v1.WhenThen> getWhenThenExprList() {
      if (whenThenExprBuilder_ == null) {
        return java.util.Collections.unmodifiableList(whenThenExpr_);
      } else {
        return whenThenExprBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public int getWhenThenExprCount() {
      if (whenThenExprBuilder_ == null) {
        return whenThenExpr_.size();
      } else {
        return whenThenExprBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.WhenThen getWhenThenExpr(int index) {
      if (whenThenExprBuilder_ == null) {
        return whenThenExpr_.get(index);
      } else {
        return whenThenExprBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder setWhenThenExpr(
        int index, ai.chalk.protos.chalk.expression.v1.WhenThen value) {
      if (whenThenExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhenThenExprIsMutable();
        whenThenExpr_.set(index, value);
        onChanged();
      } else {
        whenThenExprBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder setWhenThenExpr(
        int index, ai.chalk.protos.chalk.expression.v1.WhenThen.Builder builderForValue) {
      if (whenThenExprBuilder_ == null) {
        ensureWhenThenExprIsMutable();
        whenThenExpr_.set(index, builderForValue.build());
        onChanged();
      } else {
        whenThenExprBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder addWhenThenExpr(ai.chalk.protos.chalk.expression.v1.WhenThen value) {
      if (whenThenExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhenThenExprIsMutable();
        whenThenExpr_.add(value);
        onChanged();
      } else {
        whenThenExprBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder addWhenThenExpr(
        int index, ai.chalk.protos.chalk.expression.v1.WhenThen value) {
      if (whenThenExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWhenThenExprIsMutable();
        whenThenExpr_.add(index, value);
        onChanged();
      } else {
        whenThenExprBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder addWhenThenExpr(
        ai.chalk.protos.chalk.expression.v1.WhenThen.Builder builderForValue) {
      if (whenThenExprBuilder_ == null) {
        ensureWhenThenExprIsMutable();
        whenThenExpr_.add(builderForValue.build());
        onChanged();
      } else {
        whenThenExprBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder addWhenThenExpr(
        int index, ai.chalk.protos.chalk.expression.v1.WhenThen.Builder builderForValue) {
      if (whenThenExprBuilder_ == null) {
        ensureWhenThenExprIsMutable();
        whenThenExpr_.add(index, builderForValue.build());
        onChanged();
      } else {
        whenThenExprBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder addAllWhenThenExpr(
        java.lang.Iterable<? extends ai.chalk.protos.chalk.expression.v1.WhenThen> values) {
      if (whenThenExprBuilder_ == null) {
        ensureWhenThenExprIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, whenThenExpr_);
        onChanged();
      } else {
        whenThenExprBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder clearWhenThenExpr() {
      if (whenThenExprBuilder_ == null) {
        whenThenExpr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        whenThenExprBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public Builder removeWhenThenExpr(int index) {
      if (whenThenExprBuilder_ == null) {
        ensureWhenThenExprIsMutable();
        whenThenExpr_.remove(index);
        onChanged();
      } else {
        whenThenExprBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.WhenThen.Builder getWhenThenExprBuilder(
        int index) {
      return getWhenThenExprFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder getWhenThenExprOrBuilder(
        int index) {
      if (whenThenExprBuilder_ == null) {
        return whenThenExpr_.get(index);  } else {
        return whenThenExprBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public java.util.List<? extends ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder> 
         getWhenThenExprOrBuilderList() {
      if (whenThenExprBuilder_ != null) {
        return whenThenExprBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(whenThenExpr_);
      }
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.WhenThen.Builder addWhenThenExprBuilder() {
      return getWhenThenExprFieldBuilder().addBuilder(
          ai.chalk.protos.chalk.expression.v1.WhenThen.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.WhenThen.Builder addWhenThenExprBuilder(
        int index) {
      return getWhenThenExprFieldBuilder().addBuilder(
          index, ai.chalk.protos.chalk.expression.v1.WhenThen.getDefaultInstance());
    }
    /**
     * <code>repeated .chalk.expression.v1.WhenThen when_then_expr = 2 [json_name = "whenThenExpr"];</code>
     */
    public java.util.List<ai.chalk.protos.chalk.expression.v1.WhenThen.Builder> 
         getWhenThenExprBuilderList() {
      return getWhenThenExprFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.WhenThen, ai.chalk.protos.chalk.expression.v1.WhenThen.Builder, ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder> 
        getWhenThenExprFieldBuilder() {
      if (whenThenExprBuilder_ == null) {
        whenThenExprBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.chalk.protos.chalk.expression.v1.WhenThen, ai.chalk.protos.chalk.expression.v1.WhenThen.Builder, ai.chalk.protos.chalk.expression.v1.WhenThenOrBuilder>(
                whenThenExpr_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        whenThenExpr_ = null;
      }
      return whenThenExprBuilder_;
    }

    private ai.chalk.protos.chalk.expression.v1.LogicalExprNode elseExpr_;
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder> elseExprBuilder_;
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     * @return Whether the elseExpr field is set.
     */
    public boolean hasElseExpr() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     * @return The elseExpr.
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNode getElseExpr() {
      if (elseExprBuilder_ == null) {
        return elseExpr_ == null ? ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : elseExpr_;
      } else {
        return elseExprBuilder_.getMessage();
      }
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public Builder setElseExpr(ai.chalk.protos.chalk.expression.v1.LogicalExprNode value) {
      if (elseExprBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        elseExpr_ = value;
      } else {
        elseExprBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public Builder setElseExpr(
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder builderForValue) {
      if (elseExprBuilder_ == null) {
        elseExpr_ = builderForValue.build();
      } else {
        elseExprBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public Builder mergeElseExpr(ai.chalk.protos.chalk.expression.v1.LogicalExprNode value) {
      if (elseExprBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          elseExpr_ != null &&
          elseExpr_ != ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance()) {
          getElseExprBuilder().mergeFrom(value);
        } else {
          elseExpr_ = value;
        }
      } else {
        elseExprBuilder_.mergeFrom(value);
      }
      if (elseExpr_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public Builder clearElseExpr() {
      bitField0_ = (bitField0_ & ~0x00000004);
      elseExpr_ = null;
      if (elseExprBuilder_ != null) {
        elseExprBuilder_.dispose();
        elseExprBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder getElseExprBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getElseExprFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    public ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getElseExprOrBuilder() {
      if (elseExprBuilder_ != null) {
        return elseExprBuilder_.getMessageOrBuilder();
      } else {
        return elseExpr_ == null ?
            ai.chalk.protos.chalk.expression.v1.LogicalExprNode.getDefaultInstance() : elseExpr_;
      }
    }
    /**
     * <code>.chalk.expression.v1.LogicalExprNode else_expr = 3 [json_name = "elseExpr"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder> 
        getElseExprFieldBuilder() {
      if (elseExprBuilder_ == null) {
        elseExprBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.expression.v1.LogicalExprNode, ai.chalk.protos.chalk.expression.v1.LogicalExprNode.Builder, ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder>(
                getElseExpr(),
                getParentForChildren(),
                isClean());
        elseExpr_ = null;
      }
      return elseExprBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:chalk.expression.v1.CaseNode)
  }

  // @@protoc_insertion_point(class_scope:chalk.expression.v1.CaseNode)
  private static final ai.chalk.protos.chalk.expression.v1.CaseNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.expression.v1.CaseNode();
  }

  public static ai.chalk.protos.chalk.expression.v1.CaseNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CaseNode>
      PARSER = new com.google.protobuf.AbstractParser<CaseNode>() {
    @java.lang.Override
    public CaseNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CaseNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CaseNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.expression.v1.CaseNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

