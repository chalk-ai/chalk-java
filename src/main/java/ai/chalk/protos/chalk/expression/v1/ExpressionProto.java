// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.expression.v1;

public final class ExpressionProto {
  private ExpressionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Identifier_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Identifier_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ExprGetAttribute_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ExprGetAttribute_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ExprGetSubscript_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ExprGetSubscript_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ExprCall_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ExprCall_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ExprCall_KwargsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ExprCall_KwargsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ExprLiteral_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ExprLiteral_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LogicalExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LogicalExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ColumnRelation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ColumnRelation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Column_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Column_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Wildcard_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Wildcard_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_PlaceholderNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_PlaceholderNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LogicalExprList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LogicalExprList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_GroupingSetNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_GroupingSetNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CubeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CubeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_RollupNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_RollupNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_NamedStructField_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_NamedStructField_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ListIndex_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ListIndex_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ListRange_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ListRange_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_GetIndexedField_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_GetIndexedField_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNull_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNull_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotNull_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotNull_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsTrue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsTrue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsFalse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsFalse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsUnknown_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsUnknown_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotTrue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotTrue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotFalse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotFalse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotUnknown_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotUnknown_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Not_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Not_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AliasNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AliasNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BareTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BareTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_PartialTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_PartialTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_FullTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_FullTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_OwnedTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_OwnedTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BinaryExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BinaryExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_NegativeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_NegativeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_InListNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_InListNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ScalarFunctionNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateUDFExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ScalarUDFExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BetweenNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BetweenNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LikeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LikeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ILikeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ILikeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_SimilarToNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_SimilarToNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CaseNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WhenThen_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WhenThen_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CastNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CastNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_TryCastNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_TryCastNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_SortExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_SortExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowFrame_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowFrame_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowFrameBound_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowFrameBound_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$chalk/expression/v1/expression.proto\022\023" +
      "chalk.expression.v1\032\032chalk/arrow/v1/arro" +
      "w.proto\" \n\nIdentifier\022\022\n\004name\030\001 \001(\tR\004nam" +
      "e\"\217\001\n\020ExprGetAttribute\022<\n\006parent\030\001 \001(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\006pa" +
      "rent\022=\n\tattribute\030\002 \001(\0132\037.chalk.expressi" +
      "on.v1.IdentifierR\tattribute\"\224\001\n\020ExprGetS" +
      "ubscript\022<\n\006parent\030\001 \001(\0132$.chalk.express" +
      "ion.v1.LogicalExprNodeR\006parent\022B\n\tsubscr" +
      "ipt\030\002 \003(\0132$.chalk.expression.v1.LogicalE" +
      "xprNodeR\tsubscript\"\242\002\n\010ExprCall\0228\n\004func\030" +
      "\001 \001(\0132$.chalk.expression.v1.LogicalExprN" +
      "odeR\004func\0228\n\004args\030\002 \003(\0132$.chalk.expressi" +
      "on.v1.LogicalExprNodeR\004args\022A\n\006kwargs\030\003 " +
      "\003(\0132).chalk.expression.v1.ExprCall.Kwarg" +
      "sEntryR\006kwargs\032_\n\013KwargsEntry\022\020\n\003key\030\001 \001" +
      "(\tR\003key\022:\n\005value\030\002 \001(\0132$.chalk.expressio" +
      "n.v1.LogicalExprNodeR\005value:\0028\001\"u\n\013ExprL" +
      "iteral\0221\n\005value\030\001 \001(\0132\033.chalk.arrow.v1.S" +
      "calarValueR\005value\0223\n\026is_arrow_scalar_obj" +
      "ect\030\002 \001(\010R\023isArrowScalarObject\"\341\025\n\017Logic" +
      "alExprNode\022A\n\nidentifier\030# \001(\0132\037.chalk.e" +
      "xpression.v1.IdentifierH\000R\nidentifier\022L\n" +
      "\rget_attribute\030$ \001(\0132%.chalk.expression." +
      "v1.ExprGetAttributeH\000R\014getAttribute\022L\n\rg" +
      "et_subscript\030% \001(\0132%.chalk.expression.v1" +
      ".ExprGetSubscriptH\000R\014getSubscript\0223\n\004cal" +
      "l\030& \001(\0132\035.chalk.expression.v1.ExprCallH\000" +
      "R\004call\022G\n\rliteral_value\030\' \001(\0132 .chalk.ex" +
      "pression.v1.ExprLiteralH\000R\014literalValue\022" +
      "\027\n\007expr_id\030( \001(\tR\006exprId\0229\n\006column\030\001 \001(\013" +
      "2\033.chalk.expression.v1.ColumnB\002\030\001H\001R\006col" +
      "umn\022:\n\005alias\030\002 \001(\0132\036.chalk.expression.v1" +
      ".AliasNodeB\002\030\001H\001R\005alias\022;\n\007literal\030\003 \001(\013" +
      "2\033.chalk.arrow.v1.ScalarValueB\002\030\001H\001R\007lit" +
      "eral\022J\n\013binary_expr\030\004 \001(\0132#.chalk.expres" +
      "sion.v1.BinaryExprNodeB\002\030\001H\001R\nbinaryExpr" +
      "\022S\n\016aggregate_expr\030\005 \001(\0132&.chalk.express" +
      "ion.v1.AggregateExprNodeB\002\030\001H\001R\raggregat" +
      "eExpr\022C\n\014is_null_expr\030\006 \001(\0132\033.chalk.expr" +
      "ession.v1.IsNullB\002\030\001H\001R\nisNullExpr\022M\n\020is" +
      "_not_null_expr\030\007 \001(\0132\036.chalk.expression." +
      "v1.IsNotNullB\002\030\001H\001R\risNotNullExpr\0229\n\010not" +
      "_expr\030\010 \001(\0132\030.chalk.expression.v1.NotB\002\030" +
      "\001H\001R\007notExpr\022@\n\007between\030\t \001(\0132 .chalk.ex" +
      "pression.v1.BetweenNodeB\002\030\001H\001R\007between\0227" +
      "\n\004case\030\n \001(\0132\035.chalk.expression.v1.CaseN" +
      "odeB\002\030\001H\001R\004case\0227\n\004cast\030\013 \001(\0132\035.chalk.ex" +
      "pression.v1.CastNodeB\002\030\001H\001R\004cast\022;\n\004sort" +
      "\030\014 \001(\0132!.chalk.expression.v1.SortExprNod" +
      "eB\002\030\001H\001R\004sort\022C\n\010negative\030\r \001(\0132!.chalk." +
      "expression.v1.NegativeNodeB\002\030\001H\001R\010negati" +
      "ve\022>\n\007in_list\030\016 \001(\0132\037.chalk.expression.v" +
      "1.InListNodeB\002\030\001H\001R\006inList\022?\n\010wildcard\030\017" +
      " \001(\0132\035.chalk.expression.v1.WildcardB\002\030\001H" +
      "\001R\010wildcard\022V\n\017scalar_function\030\020 \001(\0132\'.c" +
      "halk.expression.v1.ScalarFunctionNodeB\002\030" +
      "\001H\001R\016scalarFunction\022A\n\010try_cast\030\021 \001(\0132 ." +
      "chalk.expression.v1.TryCastNodeB\002\030\001H\001R\007t" +
      "ryCast\022J\n\013window_expr\030\022 \001(\0132#.chalk.expr" +
      "ession.v1.WindowExprNodeB\002\030\001H\001R\nwindowEx" +
      "pr\022]\n\022aggregate_udf_expr\030\023 \001(\0132).chalk.e" +
      "xpression.v1.AggregateUDFExprNodeB\002\030\001H\001R" +
      "\020aggregateUdfExpr\022T\n\017scalar_udf_expr\030\024 \001" +
      "(\0132&.chalk.expression.v1.ScalarUDFExprNo" +
      "deB\002\030\001H\001R\rscalarUdfExpr\022V\n\021get_indexed_f" +
      "ield\030\025 \001(\0132$.chalk.expression.v1.GetInde" +
      "xedFieldB\002\030\001H\001R\017getIndexedField\022M\n\014group" +
      "ing_set\030\026 \001(\0132$.chalk.expression.v1.Grou" +
      "pingSetNodeB\002\030\001H\001R\013groupingSet\0227\n\004cube\030\027" +
      " \001(\0132\035.chalk.expression.v1.CubeNodeB\002\030\001H" +
      "\001R\004cube\022=\n\006rollup\030\030 \001(\0132\037.chalk.expressi" +
      "on.v1.RollupNodeB\002\030\001H\001R\006rollup\022:\n\007is_tru" +
      "e\030\031 \001(\0132\033.chalk.expression.v1.IsTrueB\002\030\001" +
      "H\001R\006isTrue\022=\n\010is_false\030\032 \001(\0132\034.chalk.exp" +
      "ression.v1.IsFalseB\002\030\001H\001R\007isFalse\022C\n\nis_" +
      "unknown\030\033 \001(\0132\036.chalk.expression.v1.IsUn" +
      "knownB\002\030\001H\001R\tisUnknown\022D\n\013is_not_true\030\034 " +
      "\001(\0132\036.chalk.expression.v1.IsNotTrueB\002\030\001H" +
      "\001R\tisNotTrue\022G\n\014is_not_false\030\035 \001(\0132\037.cha" +
      "lk.expression.v1.IsNotFalseB\002\030\001H\001R\nisNot" +
      "False\022M\n\016is_not_unknown\030\036 \001(\0132!.chalk.ex" +
      "pression.v1.IsNotUnknownB\002\030\001H\001R\014isNotUnk" +
      "nown\0227\n\004like\030\037 \001(\0132\035.chalk.expression.v1" +
      ".LikeNodeB\002\030\001H\001R\004like\022:\n\005ilike\030  \001(\0132\036.c" +
      "halk.expression.v1.ILikeNodeB\002\030\001H\001R\005ilik" +
      "e\022G\n\nsimilar_to\030! \001(\0132\".chalk.expression" +
      ".v1.SimilarToNodeB\002\030\001H\001R\tsimilarTo\022L\n\013pl" +
      "aceholder\030\" \001(\0132$.chalk.expression.v1.Pl" +
      "aceholderNodeB\002\030\001H\001R\013placeholderB\013\n\texpr" +
      "_formB\013\n\texpr_type\",\n\016ColumnRelation\022\032\n\010" +
      "relation\030\001 \001(\tR\010relation\"]\n\006Column\022\022\n\004na" +
      "me\030\001 \001(\tR\004name\022?\n\010relation\030\002 \001(\0132#.chalk" +
      ".expression.v1.ColumnRelationR\010relation\"" +
      ";\n\010Wildcard\022!\n\tqualifier\030\001 \001(\tH\000R\tqualif" +
      "ier\210\001\001B\014\n\n_qualifier\"Y\n\017PlaceholderNode\022" +
      "\016\n\002id\030\001 \001(\tR\002id\0226\n\tdata_type\030\002 \001(\0132\031.cha" +
      "lk.arrow.v1.ArrowTypeR\010dataType\"K\n\017Logic" +
      "alExprList\0228\n\004expr\030\001 \003(\0132$.chalk.express" +
      "ion.v1.LogicalExprNodeR\004expr\"K\n\017Grouping" +
      "SetNode\0228\n\004expr\030\001 \003(\0132$.chalk.expression" +
      ".v1.LogicalExprListR\004expr\"D\n\010CubeNode\0228\n" +
      "\004expr\030\001 \003(\0132$.chalk.expression.v1.Logica" +
      "lExprNodeR\004expr\"F\n\nRollupNode\0228\n\004expr\030\001 " +
      "\003(\0132$.chalk.expression.v1.LogicalExprNod" +
      "eR\004expr\"C\n\020NamedStructField\022/\n\004name\030\001 \001(" +
      "\0132\033.chalk.arrow.v1.ScalarValueR\004name\"C\n\t" +
      "ListIndex\0226\n\003key\030\001 \001(\0132$.chalk.expressio" +
      "n.v1.LogicalExprNodeR\003key\"\201\001\n\tListRange\022" +
      ":\n\005start\030\001 \001(\0132$.chalk.expression.v1.Log" +
      "icalExprNodeR\005start\0228\n\004stop\030\002 \001(\0132$.chal" +
      "k.expression.v1.LogicalExprNodeR\004stop\"\255\002" +
      "\n\017GetIndexedField\0228\n\004expr\030\001 \001(\0132$.chalk." +
      "expression.v1.LogicalExprNodeR\004expr\022U\n\022n" +
      "amed_struct_field\030\002 \001(\0132%.chalk.expressi" +
      "on.v1.NamedStructFieldH\000R\020namedStructFie" +
      "ld\022?\n\nlist_index\030\003 \001(\0132\036.chalk.expressio" +
      "n.v1.ListIndexH\000R\tlistIndex\022?\n\nlist_rang" +
      "e\030\004 \001(\0132\036.chalk.expression.v1.ListRangeH" +
      "\000R\tlistRangeB\007\n\005field\"B\n\006IsNull\0228\n\004expr\030" +
      "\001 \001(\0132$.chalk.expression.v1.LogicalExprN" +
      "odeR\004expr\"E\n\tIsNotNull\0228\n\004expr\030\001 \001(\0132$.c" +
      "halk.expression.v1.LogicalExprNodeR\004expr" +
      "\"B\n\006IsTrue\0228\n\004expr\030\001 \001(\0132$.chalk.express" +
      "ion.v1.LogicalExprNodeR\004expr\"C\n\007IsFalse\022" +
      "8\n\004expr\030\001 \001(\0132$.chalk.expression.v1.Logi" +
      "calExprNodeR\004expr\"E\n\tIsUnknown\0228\n\004expr\030\001" +
      " \001(\0132$.chalk.expression.v1.LogicalExprNo" +
      "deR\004expr\"E\n\tIsNotTrue\0228\n\004expr\030\001 \001(\0132$.ch" +
      "alk.expression.v1.LogicalExprNodeR\004expr\"" +
      "F\n\nIsNotFalse\0228\n\004expr\030\001 \001(\0132$.chalk.expr" +
      "ession.v1.LogicalExprNodeR\004expr\"H\n\014IsNot" +
      "Unknown\0228\n\004expr\030\001 \001(\0132$.chalk.expression" +
      ".v1.LogicalExprNodeR\004expr\"?\n\003Not\0228\n\004expr" +
      "\030\001 \001(\0132$.chalk.expression.v1.LogicalExpr" +
      "NodeR\004expr\"\241\001\n\tAliasNode\0228\n\004expr\030\001 \001(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\004ex" +
      "pr\022\024\n\005alias\030\002 \001(\tR\005alias\022D\n\010relation\030\003 \003" +
      "(\0132(.chalk.expression.v1.OwnedTableRefer" +
      "enceR\010relation\"*\n\022BareTableReference\022\024\n\005" +
      "table\030\001 \001(\tR\005table\"E\n\025PartialTableRefere" +
      "nce\022\026\n\006schema\030\001 \001(\tR\006schema\022\024\n\005table\030\002 \001" +
      "(\tR\005table\"\\\n\022FullTableReference\022\030\n\007catal" +
      "og\030\001 \001(\tR\007catalog\022\026\n\006schema\030\002 \001(\tR\006schem" +
      "a\022\024\n\005table\030\003 \001(\tR\005table\"\363\001\n\023OwnedTableRe" +
      "ference\022=\n\004bare\030\001 \001(\0132\'.chalk.expression" +
      ".v1.BareTableReferenceH\000R\004bare\022F\n\007partia" +
      "l\030\002 \001(\0132*.chalk.expression.v1.PartialTab" +
      "leReferenceH\000R\007partial\022=\n\004full\030\003 \001(\0132\'.c" +
      "halk.expression.v1.FullTableReferenceH\000R" +
      "\004fullB\026\n\024table_reference_enum\"b\n\016BinaryE" +
      "xprNode\022@\n\010operands\030\001 \003(\0132$.chalk.expres" +
      "sion.v1.LogicalExprNodeR\010operands\022\016\n\002op\030" +
      "\003 \001(\tR\002op\"H\n\014NegativeNode\0228\n\004expr\030\001 \001(\0132" +
      "$.chalk.expression.v1.LogicalExprNodeR\004e" +
      "xpr\"\232\001\n\nInListNode\0228\n\004expr\030\001 \001(\0132$.chalk" +
      ".expression.v1.LogicalExprNodeR\004expr\0228\n\004" +
      "list\030\002 \003(\0132$.chalk.expression.v1.Logical" +
      "ExprNodeR\004list\022\030\n\007negated\030\003 \001(\010R\007negated" +
      "\"\205\001\n\022ScalarFunctionNode\0225\n\003fun\030\001 \001(\0162#.c" +
      "halk.expression.v1.ScalarFunctionR\003fun\0228" +
      "\n\004args\030\002 \003(\0132$.chalk.expression.v1.Logic" +
      "alExprNodeR\004args\"\265\002\n\021AggregateExprNode\022K" +
      "\n\raggr_function\030\001 \001(\0162&.chalk.expression" +
      ".v1.AggregateFunctionR\014aggrFunction\0228\n\004e" +
      "xpr\030\002 \003(\0132$.chalk.expression.v1.LogicalE" +
      "xprNodeR\004expr\022\032\n\010distinct\030\003 \001(\010R\010distinc" +
      "t\022<\n\006filter\030\004 \001(\0132$.chalk.expression.v1." +
      "LogicalExprNodeR\006filter\022?\n\010order_by\030\005 \003(" +
      "\0132$.chalk.expression.v1.LogicalExprNodeR" +
      "\007orderBy\"\232\003\n\024AggregateUDFExprNode\022\031\n\010fun" +
      "_name\030\001 \001(\tR\007funName\0228\n\004args\030\002 \003(\0132$.cha" +
      "lk.expression.v1.LogicalExprNodeR\004args\022<" +
      "\n\006filter\030\003 \001(\0132$.chalk.expression.v1.Log" +
      "icalExprNodeR\006filter\022?\n\010order_by\030\004 \003(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\007or" +
      "derBy\022M\n\006kwargs\030\005 \003(\01325.chalk.expression" +
      ".v1.AggregateUDFExprNode.KwargsEntryR\006kw" +
      "args\032_\n\013KwargsEntry\022\020\n\003key\030\001 \001(\tR\003key\022:\n" +
      "\005value\030\002 \001(\0132$.chalk.expression.v1.Logic" +
      "alExprNodeR\005value:\0028\001\"h\n\021ScalarUDFExprNo" +
      "de\022\031\n\010fun_name\030\001 \001(\tR\007funName\0228\n\004args\030\002 " +
      "\003(\0132$.chalk.expression.v1.LogicalExprNod" +
      "eR\004args\"\201\004\n\016WindowExprNode\022M\n\raggr_funct" +
      "ion\030\001 \001(\0162&.chalk.expression.v1.Aggregat" +
      "eFunctionH\000R\014aggrFunction\022X\n\021built_in_fu" +
      "nction\030\002 \001(\0162*.chalk.expression.v1.Built" +
      "InWindowFunctionH\000R\017builtInFunction\022\024\n\004u" +
      "daf\030\003 \001(\tH\000R\004udaf\022\024\n\004udwf\030\t \001(\tH\000R\004udwf\022" +
      "8\n\004expr\030\004 \001(\0132$.chalk.expression.v1.Logi" +
      "calExprNodeR\004expr\022G\n\014partition_by\030\005 \003(\0132" +
      "$.chalk.expression.v1.LogicalExprNodeR\013p" +
      "artitionBy\022?\n\010order_by\030\006 \003(\0132$.chalk.exp" +
      "ression.v1.LogicalExprNodeR\007orderBy\022C\n\014w" +
      "indow_frame\030\010 \001(\0132 .chalk.expression.v1." +
      "WindowFrameR\013windowFrameB\021\n\017window_funct" +
      "ion\"\323\001\n\013BetweenNode\0228\n\004expr\030\001 \001(\0132$.chal" +
      "k.expression.v1.LogicalExprNodeR\004expr\022\030\n" +
      "\007negated\030\002 \001(\010R\007negated\0226\n\003low\030\003 \001(\0132$.c" +
      "halk.expression.v1.LogicalExprNodeR\003low\022" +
      "8\n\004high\030\004 \001(\0132$.chalk.expression.v1.Logi" +
      "calExprNodeR\004high\"\277\001\n\010LikeNode\022\030\n\007negate" +
      "d\030\001 \001(\010R\007negated\0228\n\004expr\030\002 \001(\0132$.chalk.e" +
      "xpression.v1.LogicalExprNodeR\004expr\022>\n\007pa" +
      "ttern\030\003 \001(\0132$.chalk.expression.v1.Logica" +
      "lExprNodeR\007pattern\022\037\n\013escape_char\030\004 \001(\tR" +
      "\nescapeChar\"\300\001\n\tILikeNode\022\030\n\007negated\030\001 \001" +
      "(\010R\007negated\0228\n\004expr\030\002 \001(\0132$.chalk.expres" +
      "sion.v1.LogicalExprNodeR\004expr\022>\n\007pattern" +
      "\030\003 \001(\0132$.chalk.expression.v1.LogicalExpr" +
      "NodeR\007pattern\022\037\n\013escape_char\030\004 \001(\tR\nesca" +
      "peChar\"\304\001\n\rSimilarToNode\022\030\n\007negated\030\001 \001(" +
      "\010R\007negated\0228\n\004expr\030\002 \001(\0132$.chalk.express" +
      "ion.v1.LogicalExprNodeR\004expr\022>\n\007pattern\030" +
      "\003 \001(\0132$.chalk.expression.v1.LogicalExprN" +
      "odeR\007pattern\022\037\n\013escape_char\030\004 \001(\tR\nescap" +
      "eChar\"\314\001\n\010CaseNode\0228\n\004expr\030\001 \001(\0132$.chalk" +
      ".expression.v1.LogicalExprNodeR\004expr\022C\n\016" +
      "when_then_expr\030\002 \003(\0132\035.chalk.expression." +
      "v1.WhenThenR\014whenThenExpr\022A\n\telse_expr\030\003" +
      " \001(\0132$.chalk.expression.v1.LogicalExprNo" +
      "deR\010elseExpr\"\220\001\n\010WhenThen\022A\n\twhen_expr\030\001" +
      " \001(\0132$.chalk.expression.v1.LogicalExprNo" +
      "deR\010whenExpr\022A\n\tthen_expr\030\002 \001(\0132$.chalk." +
      "expression.v1.LogicalExprNodeR\010thenExpr\"" +
      "~\n\010CastNode\0228\n\004expr\030\001 \001(\0132$.chalk.expres" +
      "sion.v1.LogicalExprNodeR\004expr\0228\n\narrow_t" +
      "ype\030\002 \001(\0132\031.chalk.arrow.v1.ArrowTypeR\tar" +
      "rowType\"\201\001\n\013TryCastNode\0228\n\004expr\030\001 \001(\0132$." +
      "chalk.expression.v1.LogicalExprNodeR\004exp" +
      "r\0228\n\narrow_type\030\002 \001(\0132\031.chalk.arrow.v1.A" +
      "rrowTypeR\tarrowType\"{\n\014SortExprNode\0228\n\004e" +
      "xpr\030\001 \001(\0132$.chalk.expression.v1.LogicalE" +
      "xprNodeR\004expr\022\020\n\003asc\030\002 \001(\010R\003asc\022\037\n\013nulls" +
      "_first\030\003 \001(\010R\nnullsFirst\"\366\001\n\013WindowFrame" +
      "\022S\n\022window_frame_units\030\001 \001(\0162%.chalk.exp" +
      "ression.v1.WindowFrameUnitsR\020windowFrame" +
      "Units\022F\n\013start_bound\030\002 \001(\0132%.chalk.expre" +
      "ssion.v1.WindowFrameBoundR\nstartBound\022@\n" +
      "\005bound\030\003 \001(\0132%.chalk.expression.v1.Windo" +
      "wFrameBoundH\000R\005bound\210\001\001B\010\n\006_bound\"\262\001\n\020Wi" +
      "ndowFrameBound\022`\n\027window_frame_bound_typ" +
      "e\030\001 \001(\0162).chalk.expression.v1.WindowFram" +
      "eBoundTypeR\024windowFrameBoundType\022<\n\013boun" +
      "d_value\030\002 \001(\0132\033.chalk.arrow.v1.ScalarVal" +
      "ueR\nboundValue*\240\037\n\016ScalarFunction\022\037\n\033SCA" +
      "LAR_FUNCTION_UNSPECIFIED\020\000\022\027\n\023SCALAR_FUN" +
      "CTION_ABS\020\001\022\030\n\024SCALAR_FUNCTION_ACOS\020\002\022\030\n" +
      "\024SCALAR_FUNCTION_ASIN\020\003\022\030\n\024SCALAR_FUNCTI" +
      "ON_ATAN\020\004\022\031\n\025SCALAR_FUNCTION_ASCII\020\005\022\030\n\024" +
      "SCALAR_FUNCTION_CEIL\020\006\022\027\n\023SCALAR_FUNCTIO" +
      "N_COS\020\007\022\032\n\026SCALAR_FUNCTION_DIGEST\020\010\022\027\n\023S" +
      "CALAR_FUNCTION_EXP\020\t\022\031\n\025SCALAR_FUNCTION_" +
      "FLOOR\020\n\022\026\n\022SCALAR_FUNCTION_LN\020\013\022\027\n\023SCALA" +
      "R_FUNCTION_LOG\020\014\022\031\n\025SCALAR_FUNCTION_LOG1" +
      "0\020\r\022\030\n\024SCALAR_FUNCTION_LOG2\020\016\022\031\n\025SCALAR_" +
      "FUNCTION_ROUND\020\017\022\032\n\026SCALAR_FUNCTION_SIGN" +
      "UM\020\020\022\027\n\023SCALAR_FUNCTION_SIN\020\021\022\030\n\024SCALAR_" +
      "FUNCTION_SQRT\020\022\022\027\n\023SCALAR_FUNCTION_TAN\020\023" +
      "\022\031\n\025SCALAR_FUNCTION_TRUNC\020\024\022\031\n\025SCALAR_FU" +
      "NCTION_ARRAY\020\025\022 \n\034SCALAR_FUNCTION_REGEXP" +
      "_MATCH\020\026\022\036\n\032SCALAR_FUNCTION_BIT_LENGTH\020\027" +
      "\022\031\n\025SCALAR_FUNCTION_BTRIM\020\030\022$\n SCALAR_FU" +
      "NCTION_CHARACTER_LENGTH\020\031\022\027\n\023SCALAR_FUNC" +
      "TION_CHR\020\032\022\032\n\026SCALAR_FUNCTION_CONCAT\020\033\022)" +
      "\n%SCALAR_FUNCTION_CONCAT_WITH_SEPARATOR\020" +
      "\034\022\035\n\031SCALAR_FUNCTION_DATE_PART\020\035\022\036\n\032SCAL" +
      "AR_FUNCTION_DATE_TRUNC\020\036\022\034\n\030SCALAR_FUNCT" +
      "ION_INIT_CAP\020\037\022\030\n\024SCALAR_FUNCTION_LEFT\020 " +
      "\022\030\n\024SCALAR_FUNCTION_LPAD\020!\022\031\n\025SCALAR_FUN" +
      "CTION_LOWER\020\"\022\031\n\025SCALAR_FUNCTION_LTRIM\020#" +
      "\022\027\n\023SCALAR_FUNCTION_MD5\020$\022\033\n\027SCALAR_FUNC" +
      "TION_NULL_IF\020%\022 \n\034SCALAR_FUNCTION_OCTET_" +
      "LENGTH\020&\022\032\n\026SCALAR_FUNCTION_RANDOM\020\'\022\"\n\036" +
      "SCALAR_FUNCTION_REGEXP_REPLACE\020(\022\032\n\026SCAL" +
      "AR_FUNCTION_REPEAT\020)\022\033\n\027SCALAR_FUNCTION_" +
      "REPLACE\020*\022\033\n\027SCALAR_FUNCTION_REVERSE\020+\022\031" +
      "\n\025SCALAR_FUNCTION_RIGHT\020,\022\030\n\024SCALAR_FUNC" +
      "TION_RPAD\020-\022\031\n\025SCALAR_FUNCTION_RTRIM\020.\022\032" +
      "\n\026SCALAR_FUNCTION_SHA224\020/\022\032\n\026SCALAR_FUN" +
      "CTION_SHA256\0200\022\032\n\026SCALAR_FUNCTION_SHA384" +
      "\0201\022\032\n\026SCALAR_FUNCTION_SHA512\0202\022\036\n\032SCALAR" +
      "_FUNCTION_SPLIT_PART\0203\022\037\n\033SCALAR_FUNCTIO" +
      "N_STARTS_WITH\0204\022\032\n\026SCALAR_FUNCTION_STRPO" +
      "S\0205\022\032\n\026SCALAR_FUNCTION_SUBSTR\0206\022\032\n\026SCALA" +
      "R_FUNCTION_TO_HEX\0207\022 \n\034SCALAR_FUNCTION_T" +
      "O_TIMESTAMP\0208\022\'\n#SCALAR_FUNCTION_TO_TIME" +
      "STAMP_MILLIS\0209\022\'\n#SCALAR_FUNCTION_TO_TIM" +
      "ESTAMP_MICROS\020:\022(\n$SCALAR_FUNCTION_TO_TI" +
      "MESTAMP_SECONDS\020;\022\027\n\023SCALAR_FUNCTION_NOW" +
      "\020<\022\035\n\031SCALAR_FUNCTION_TRANSLATE\020=\022\030\n\024SCA" +
      "LAR_FUNCTION_TRIM\020>\022\031\n\025SCALAR_FUNCTION_U" +
      "PPER\020?\022\034\n\030SCALAR_FUNCTION_COALESCE\020@\022\031\n\025" +
      "SCALAR_FUNCTION_POWER\020A\022\036\n\032SCALAR_FUNCTI" +
      "ON_STRUCT_FUN\020B\022!\n\035SCALAR_FUNCTION_FROM_" +
      "UNIXTIME\020C\022\031\n\025SCALAR_FUNCTION_ATAN2\020D\022\034\n" +
      "\030SCALAR_FUNCTION_DATE_BIN\020E\022 \n\034SCALAR_FU" +
      "NCTION_ARROW_TYPEOF\020F\022 \n\034SCALAR_FUNCTION" +
      "_CURRENT_DATE\020G\022 \n\034SCALAR_FUNCTION_CURRE" +
      "NT_TIME\020H\022\030\n\024SCALAR_FUNCTION_UUID\020I\022\030\n\024S" +
      "CALAR_FUNCTION_CBRT\020J\022\031\n\025SCALAR_FUNCTION" +
      "_ACOSH\020K\022\031\n\025SCALAR_FUNCTION_ASINH\020L\022\031\n\025S" +
      "CALAR_FUNCTION_ATANH\020M\022\030\n\024SCALAR_FUNCTIO" +
      "N_SINH\020N\022\030\n\024SCALAR_FUNCTION_COSH\020O\022\030\n\024SC" +
      "ALAR_FUNCTION_TANH\020P\022\026\n\022SCALAR_FUNCTION_" +
      "PI\020Q\022\033\n\027SCALAR_FUNCTION_DEGREES\020R\022\033\n\027SCA" +
      "LAR_FUNCTION_RADIANS\020S\022\035\n\031SCALAR_FUNCTIO" +
      "N_FACTORIAL\020T\022\027\n\023SCALAR_FUNCTION_LCM\020U\022\027" +
      "\n\023SCALAR_FUNCTION_GCD\020V\022 \n\034SCALAR_FUNCTI" +
      "ON_ARRAY_APPEND\020W\022 \n\034SCALAR_FUNCTION_ARR" +
      "AY_CONCAT\020X\022\036\n\032SCALAR_FUNCTION_ARRAY_DIM" +
      "S\020Y\022 \n\034SCALAR_FUNCTION_ARRAY_REPEAT\020Z\022 \n" +
      "\034SCALAR_FUNCTION_ARRAY_LENGTH\020[\022\037\n\033SCALA" +
      "R_FUNCTION_ARRAY_NDIMS\020\\\022\"\n\036SCALAR_FUNCT" +
      "ION_ARRAY_POSITION\020]\022#\n\037SCALAR_FUNCTION_" +
      "ARRAY_POSITIONS\020^\022!\n\035SCALAR_FUNCTION_ARR" +
      "AY_PREPEND\020_\022 \n\034SCALAR_FUNCTION_ARRAY_RE" +
      "MOVE\020`\022!\n\035SCALAR_FUNCTION_ARRAY_REPLACE\020" +
      "a\022#\n\037SCALAR_FUNCTION_ARRAY_TO_STRING\020b\022\037" +
      "\n\033SCALAR_FUNCTION_CARDINALITY\020c\022!\n\035SCALA" +
      "R_FUNCTION_ARRAY_ELEMENT\020d\022\037\n\033SCALAR_FUN" +
      "CTION_ARRAY_SLICE\020e\022\032\n\026SCALAR_FUNCTION_E" +
      "NCODE\020f\022\032\n\026SCALAR_FUNCTION_DECODE\020g\022\027\n\023S" +
      "CALAR_FUNCTION_COT\020h\022\035\n\031SCALAR_FUNCTION_" +
      "ARRAY_HAS\020i\022!\n\035SCALAR_FUNCTION_ARRAY_HAS" +
      "_ANY\020j\022!\n\035SCALAR_FUNCTION_ARRAY_HAS_ALL\020" +
      "k\022\"\n\036SCALAR_FUNCTION_ARRAY_REMOVE_N\020l\022#\n" +
      "\037SCALAR_FUNCTION_ARRAY_REPLACE_N\020m\022$\n SC" +
      "ALAR_FUNCTION_ARRAY_REMOVE_ALL\020n\022%\n!SCAL" +
      "AR_FUNCTION_ARRAY_REPLACE_ALL\020o\022\031\n\025SCALA" +
      "R_FUNCTION_NANVL\020p\022\033\n\027SCALAR_FUNCTION_FL" +
      "ATTEN\020q\022\031\n\025SCALAR_FUNCTION_ISNAN\020r\022\032\n\026SC" +
      "ALAR_FUNCTION_ISZERO\020s\022\037\n\033SCALAR_FUNCTIO" +
      "N_ARRAY_EMPTY\020t\022\"\n\036SCALAR_FUNCTION_ARRAY" +
      "_POP_BACK\020u\022#\n\037SCALAR_FUNCTION_STRING_TO" +
      "_ARRAY\020v\022&\n\"SCALAR_FUNCTION_TO_TIMESTAMP" +
      "_NANOS\020w\022#\n\037SCALAR_FUNCTION_ARRAY_INTERS" +
      "ECT\020x\022\037\n\033SCALAR_FUNCTION_ARRAY_UNION\020y\022\034" +
      "\n\030SCALAR_FUNCTION_OVER_LAY\020z\022\031\n\025SCALAR_F" +
      "UNCTION_RANGE\020{\022 \n\034SCALAR_FUNCTION_ARRAY" +
      "_EXCEPT\020|\022#\n\037SCALAR_FUNCTION_ARRAY_POP_F" +
      "RONT\020}\022\037\n\033SCALAR_FUNCTION_LEVENSHTEIN\020~\022" +
      " \n\034SCALAR_FUNCTION_SUBSTR_INDEX\020\177\022 \n\033SCA" +
      "LAR_FUNCTION_FIND_IN_SET\020\200\001\022\037\n\032SCALAR_FU" +
      "NCTION_ARRAY_SORT\020\201\001\022#\n\036SCALAR_FUNCTION_" +
      "ARRAY_DISTINCT\020\202\001*\213\n\n\021AggregateFunction\022" +
      "\"\n\036AGGREGATE_FUNCTION_UNSPECIFIED\020\000\022\032\n\026A" +
      "GGREGATE_FUNCTION_MIN\020\001\022\032\n\026AGGREGATE_FUN" +
      "CTION_MAX\020\002\022\032\n\026AGGREGATE_FUNCTION_SUM\020\003\022" +
      "\032\n\026AGGREGATE_FUNCTION_AVG\020\004\022\034\n\030AGGREGATE" +
      "_FUNCTION_COUNT\020\005\022&\n\"AGGREGATE_FUNCTION_" +
      "APPROX_DISTINCT\020\006\022\034\n\030AGGREGATE_FUNCTION_" +
      "ARRAY\020\007\022\037\n\033AGGREGATE_FUNCTION_VARIANCE\020\010" +
      "\022#\n\037AGGREGATE_FUNCTION_VARIANCE_POP\020\t\022!\n" +
      "\035AGGREGATE_FUNCTION_COVARIANCE\020\n\022%\n!AGGR" +
      "EGATE_FUNCTION_COVARIANCE_POP\020\013\022\035\n\031AGGRE" +
      "GATE_FUNCTION_STDDEV\020\014\022!\n\035AGGREGATE_FUNC" +
      "TION_STDDEV_POP\020\r\022\"\n\036AGGREGATE_FUNCTION_" +
      "CORRELATION\020\016\022-\n)AGGREGATE_FUNCTION_APPR" +
      "OX_PERCENTILE_CONT\020\017\022$\n AGGREGATE_FUNCTI" +
      "ON_APPROX_MEDIAN\020\020\0229\n5AGGREGATE_FUNCTION" +
      "_APPROX_PERCENTILE_CONT_WITH_WEIGHT\020\021\022\037\n" +
      "\033AGGREGATE_FUNCTION_GROUPING\020\022\022\035\n\031AGGREG" +
      "ATE_FUNCTION_MEDIAN\020\023\022\036\n\032AGGREGATE_FUNCT" +
      "ION_BIT_AND\020\024\022\035\n\031AGGREGATE_FUNCTION_BIT_" +
      "OR\020\025\022\036\n\032AGGREGATE_FUNCTION_BIT_XOR\020\026\022\037\n\033" +
      "AGGREGATE_FUNCTION_BOOL_AND\020\027\022\036\n\032AGGREGA" +
      "TE_FUNCTION_BOOL_OR\020\030\022\"\n\036AGGREGATE_FUNCT" +
      "ION_FIRST_VALUE\020\031\022!\n\035AGGREGATE_FUNCTION_" +
      "LAST_VALUE\020\032\022!\n\035AGGREGATE_FUNCTION_REGR_" +
      "SLOPE\020\033\022%\n!AGGREGATE_FUNCTION_REGR_INTER" +
      "CEPT\020\034\022!\n\035AGGREGATE_FUNCTION_REGR_COUNT\020" +
      "\035\022\036\n\032AGGREGATE_FUNCTION_REGR_R2\020\036\022 \n\034AGG" +
      "REGATE_FUNCTION_REGR_AVGX\020\037\022 \n\034AGGREGATE" +
      "_FUNCTION_REGR_AVGY\020 \022\037\n\033AGGREGATE_FUNCT" +
      "ION_REGR_SXX\020!\022\037\n\033AGGREGATE_FUNCTION_REG" +
      "R_SYY\020\"\022\037\n\033AGGREGATE_FUNCTION_REGR_SXY\020#" +
      "\022\035\n\031AGGREGATE_FUNCTION_STRING\020$*\355\003\n\025Buil" +
      "tInWindowFunction\022(\n$BUILT_IN_WINDOW_FUN" +
      "CTION_UNSPECIFIED\020\000\022\'\n#BUILT_IN_WINDOW_F" +
      "UNCTION_ROW_NUMBER\020\001\022!\n\035BUILT_IN_WINDOW_" +
      "FUNCTION_RANK\020\002\022\'\n#BUILT_IN_WINDOW_FUNCT" +
      "ION_DENSE_RANK\020\003\022)\n%BUILT_IN_WINDOW_FUNC" +
      "TION_PERCENT_RANK\020\004\022&\n\"BUILT_IN_WINDOW_F" +
      "UNCTION_CUME_DIST\020\005\022\"\n\036BUILT_IN_WINDOW_F" +
      "UNCTION_NTILE\020\006\022 \n\034BUILT_IN_WINDOW_FUNCT" +
      "ION_LAG\020\007\022!\n\035BUILT_IN_WINDOW_FUNCTION_LE" +
      "AD\020\010\022(\n$BUILT_IN_WINDOW_FUNCTION_FIRST_V" +
      "ALUE\020\t\022\'\n#BUILT_IN_WINDOW_FUNCTION_LAST_" +
      "VALUE\020\n\022&\n\"BUILT_IN_WINDOW_FUNCTION_NTH_" +
      "VALUE\020\013*\220\001\n\020WindowFrameUnits\022\"\n\036WINDOW_F" +
      "RAME_UNITS_UNSPECIFIED\020\000\022\033\n\027WINDOW_FRAME" +
      "_UNITS_ROWS\020\001\022\034\n\030WINDOW_FRAME_UNITS_RANG" +
      "E\020\002\022\035\n\031WINDOW_FRAME_UNITS_GROUPS\020\003*\266\001\n\024W" +
      "indowFrameBoundType\022\'\n#WINDOW_FRAME_BOUN" +
      "D_TYPE_UNSPECIFIED\020\000\022\'\n#WINDOW_FRAME_BOU" +
      "ND_TYPE_CURRENT_ROW\020\001\022%\n!WINDOW_FRAME_BO" +
      "UND_TYPE_PRECEDING\020\002\022%\n!WINDOW_FRAME_BOU" +
      "ND_TYPE_FOLLOWING\020\003B\244\001\n#ai.chalk.protos." +
      "chalk.expression.v1B\017ExpressionProtoP\001\242\002",
      "\003CEX\252\002\023Chalk.Expression.V1\312\002\023Chalk\\Expre" +
      "ssion\\V1\342\002\037Chalk\\Expression\\V1\\GPBMetada" +
      "ta\352\002\025Chalk::Expression::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ai.chalk.protos.chalk.arrow.v1.ArrowProto.getDescriptor(),
        });
    internal_static_chalk_expression_v1_Identifier_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_chalk_expression_v1_Identifier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Identifier_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_chalk_expression_v1_ExprGetAttribute_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_chalk_expression_v1_ExprGetAttribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ExprGetAttribute_descriptor,
        new java.lang.String[] { "Parent", "Attribute", });
    internal_static_chalk_expression_v1_ExprGetSubscript_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_chalk_expression_v1_ExprGetSubscript_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ExprGetSubscript_descriptor,
        new java.lang.String[] { "Parent", "Subscript", });
    internal_static_chalk_expression_v1_ExprCall_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_chalk_expression_v1_ExprCall_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ExprCall_descriptor,
        new java.lang.String[] { "Func", "Args", "Kwargs", });
    internal_static_chalk_expression_v1_ExprCall_KwargsEntry_descriptor =
      internal_static_chalk_expression_v1_ExprCall_descriptor.getNestedTypes().get(0);
    internal_static_chalk_expression_v1_ExprCall_KwargsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ExprCall_KwargsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_expression_v1_ExprLiteral_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_chalk_expression_v1_ExprLiteral_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ExprLiteral_descriptor,
        new java.lang.String[] { "Value", "IsArrowScalarObject", });
    internal_static_chalk_expression_v1_LogicalExprNode_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_chalk_expression_v1_LogicalExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LogicalExprNode_descriptor,
        new java.lang.String[] { "Identifier", "GetAttribute", "GetSubscript", "Call", "LiteralValue", "ExprId", "Column", "Alias", "Literal", "BinaryExpr", "AggregateExpr", "IsNullExpr", "IsNotNullExpr", "NotExpr", "Between", "Case", "Cast", "Sort", "Negative", "InList", "Wildcard", "ScalarFunction", "TryCast", "WindowExpr", "AggregateUdfExpr", "ScalarUdfExpr", "GetIndexedField", "GroupingSet", "Cube", "Rollup", "IsTrue", "IsFalse", "IsUnknown", "IsNotTrue", "IsNotFalse", "IsNotUnknown", "Like", "Ilike", "SimilarTo", "Placeholder", "ExprForm", "ExprType", });
    internal_static_chalk_expression_v1_ColumnRelation_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_chalk_expression_v1_ColumnRelation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ColumnRelation_descriptor,
        new java.lang.String[] { "Relation", });
    internal_static_chalk_expression_v1_Column_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_chalk_expression_v1_Column_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Column_descriptor,
        new java.lang.String[] { "Name", "Relation", });
    internal_static_chalk_expression_v1_Wildcard_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_chalk_expression_v1_Wildcard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Wildcard_descriptor,
        new java.lang.String[] { "Qualifier", });
    internal_static_chalk_expression_v1_PlaceholderNode_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_chalk_expression_v1_PlaceholderNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_PlaceholderNode_descriptor,
        new java.lang.String[] { "Id", "DataType", });
    internal_static_chalk_expression_v1_LogicalExprList_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_chalk_expression_v1_LogicalExprList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LogicalExprList_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_GroupingSetNode_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_chalk_expression_v1_GroupingSetNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_GroupingSetNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_CubeNode_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_chalk_expression_v1_CubeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CubeNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_RollupNode_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_chalk_expression_v1_RollupNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_RollupNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_NamedStructField_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_chalk_expression_v1_NamedStructField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_NamedStructField_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_chalk_expression_v1_ListIndex_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_chalk_expression_v1_ListIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ListIndex_descriptor,
        new java.lang.String[] { "Key", });
    internal_static_chalk_expression_v1_ListRange_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_chalk_expression_v1_ListRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ListRange_descriptor,
        new java.lang.String[] { "Start", "Stop", });
    internal_static_chalk_expression_v1_GetIndexedField_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_chalk_expression_v1_GetIndexedField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_GetIndexedField_descriptor,
        new java.lang.String[] { "Expr", "NamedStructField", "ListIndex", "ListRange", "Field", });
    internal_static_chalk_expression_v1_IsNull_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_chalk_expression_v1_IsNull_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNull_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotNull_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_chalk_expression_v1_IsNotNull_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotNull_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsTrue_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_chalk_expression_v1_IsTrue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsTrue_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsFalse_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_chalk_expression_v1_IsFalse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsFalse_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsUnknown_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_chalk_expression_v1_IsUnknown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsUnknown_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotTrue_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_chalk_expression_v1_IsNotTrue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotTrue_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotFalse_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_chalk_expression_v1_IsNotFalse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotFalse_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotUnknown_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_chalk_expression_v1_IsNotUnknown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotUnknown_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_Not_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_chalk_expression_v1_Not_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Not_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_AliasNode_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_chalk_expression_v1_AliasNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AliasNode_descriptor,
        new java.lang.String[] { "Expr", "Alias", "Relation", });
    internal_static_chalk_expression_v1_BareTableReference_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_chalk_expression_v1_BareTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BareTableReference_descriptor,
        new java.lang.String[] { "Table", });
    internal_static_chalk_expression_v1_PartialTableReference_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_chalk_expression_v1_PartialTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_PartialTableReference_descriptor,
        new java.lang.String[] { "Schema", "Table", });
    internal_static_chalk_expression_v1_FullTableReference_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_chalk_expression_v1_FullTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_FullTableReference_descriptor,
        new java.lang.String[] { "Catalog", "Schema", "Table", });
    internal_static_chalk_expression_v1_OwnedTableReference_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_chalk_expression_v1_OwnedTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_OwnedTableReference_descriptor,
        new java.lang.String[] { "Bare", "Partial", "Full", "TableReferenceEnum", });
    internal_static_chalk_expression_v1_BinaryExprNode_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_chalk_expression_v1_BinaryExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BinaryExprNode_descriptor,
        new java.lang.String[] { "Operands", "Op", });
    internal_static_chalk_expression_v1_NegativeNode_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_chalk_expression_v1_NegativeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_NegativeNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_InListNode_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_chalk_expression_v1_InListNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_InListNode_descriptor,
        new java.lang.String[] { "Expr", "List", "Negated", });
    internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_chalk_expression_v1_ScalarFunctionNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor,
        new java.lang.String[] { "Fun", "Args", });
    internal_static_chalk_expression_v1_AggregateExprNode_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_chalk_expression_v1_AggregateExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateExprNode_descriptor,
        new java.lang.String[] { "AggrFunction", "Expr", "Distinct", "Filter", "OrderBy", });
    internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_chalk_expression_v1_AggregateUDFExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor,
        new java.lang.String[] { "FunName", "Args", "Filter", "OrderBy", "Kwargs", });
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor =
      internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor.getNestedTypes().get(0);
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_chalk_expression_v1_ScalarUDFExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor,
        new java.lang.String[] { "FunName", "Args", });
    internal_static_chalk_expression_v1_WindowExprNode_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_chalk_expression_v1_WindowExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowExprNode_descriptor,
        new java.lang.String[] { "AggrFunction", "BuiltInFunction", "Udaf", "Udwf", "Expr", "PartitionBy", "OrderBy", "WindowFrame", "WindowFunction", });
    internal_static_chalk_expression_v1_BetweenNode_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_chalk_expression_v1_BetweenNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BetweenNode_descriptor,
        new java.lang.String[] { "Expr", "Negated", "Low", "High", });
    internal_static_chalk_expression_v1_LikeNode_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_chalk_expression_v1_LikeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LikeNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_ILikeNode_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_chalk_expression_v1_ILikeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ILikeNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_SimilarToNode_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_chalk_expression_v1_SimilarToNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_SimilarToNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_CaseNode_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CaseNode_descriptor,
        new java.lang.String[] { "Expr", "WhenThenExpr", "ElseExpr", });
    internal_static_chalk_expression_v1_WhenThen_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_chalk_expression_v1_WhenThen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WhenThen_descriptor,
        new java.lang.String[] { "WhenExpr", "ThenExpr", });
    internal_static_chalk_expression_v1_CastNode_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_chalk_expression_v1_CastNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CastNode_descriptor,
        new java.lang.String[] { "Expr", "ArrowType", });
    internal_static_chalk_expression_v1_TryCastNode_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_chalk_expression_v1_TryCastNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_TryCastNode_descriptor,
        new java.lang.String[] { "Expr", "ArrowType", });
    internal_static_chalk_expression_v1_SortExprNode_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_chalk_expression_v1_SortExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_SortExprNode_descriptor,
        new java.lang.String[] { "Expr", "Asc", "NullsFirst", });
    internal_static_chalk_expression_v1_WindowFrame_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_chalk_expression_v1_WindowFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowFrame_descriptor,
        new java.lang.String[] { "WindowFrameUnits", "StartBound", "Bound", });
    internal_static_chalk_expression_v1_WindowFrameBound_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_chalk_expression_v1_WindowFrameBound_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowFrameBound_descriptor,
        new java.lang.String[] { "WindowFrameBoundType", "BoundValue", });
    ai.chalk.protos.chalk.arrow.v1.ArrowProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
