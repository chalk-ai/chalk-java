// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.expression.v1;

public final class ExpressionProto {
  private ExpressionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LogicalExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LogicalExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ColumnRelation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ColumnRelation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Column_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Column_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Wildcard_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Wildcard_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_PlaceholderNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_PlaceholderNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LogicalExprList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LogicalExprList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_GroupingSetNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_GroupingSetNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CubeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CubeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_RollupNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_RollupNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_NamedStructField_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_NamedStructField_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ListIndex_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ListIndex_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ListRange_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ListRange_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_GetIndexedField_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_GetIndexedField_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNull_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNull_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotNull_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotNull_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsTrue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsTrue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsFalse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsFalse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsUnknown_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsUnknown_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotTrue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotTrue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotFalse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotFalse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_IsNotUnknown_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_IsNotUnknown_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_Not_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_Not_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AliasNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AliasNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BareTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BareTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_PartialTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_PartialTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_FullTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_FullTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_OwnedTableReference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_OwnedTableReference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BinaryExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BinaryExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_NegativeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_NegativeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_InListNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_InListNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ScalarFunctionNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateUDFExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ScalarUDFExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_BetweenNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_BetweenNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_LikeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_LikeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_ILikeNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_ILikeNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_SimilarToNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_SimilarToNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CaseNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WhenThen_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WhenThen_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_CastNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_CastNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_TryCastNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_TryCastNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_SortExprNode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_SortExprNode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowFrame_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowFrame_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_expression_v1_WindowFrameBound_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_expression_v1_WindowFrameBound_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$chalk/expression/v1/expression.proto\022\023" +
      "chalk.expression.v1\032\032chalk/arrow/v1/arro" +
      "w.proto\"\326\021\n\017LogicalExprNode\0225\n\006column\030\001 " +
      "\001(\0132\033.chalk.expression.v1.ColumnH\000R\006colu" +
      "mn\0226\n\005alias\030\002 \001(\0132\036.chalk.expression.v1." +
      "AliasNodeH\000R\005alias\0227\n\007literal\030\003 \001(\0132\033.ch" +
      "alk.arrow.v1.ScalarValueH\000R\007literal\022F\n\013b" +
      "inary_expr\030\004 \001(\0132#.chalk.expression.v1.B" +
      "inaryExprNodeH\000R\nbinaryExpr\022O\n\016aggregate" +
      "_expr\030\005 \001(\0132&.chalk.expression.v1.Aggreg" +
      "ateExprNodeH\000R\raggregateExpr\022?\n\014is_null_" +
      "expr\030\006 \001(\0132\033.chalk.expression.v1.IsNullH" +
      "\000R\nisNullExpr\022I\n\020is_not_null_expr\030\007 \001(\0132" +
      "\036.chalk.expression.v1.IsNotNullH\000R\risNot" +
      "NullExpr\0225\n\010not_expr\030\010 \001(\0132\030.chalk.expre" +
      "ssion.v1.NotH\000R\007notExpr\022<\n\007between\030\t \001(\013" +
      "2 .chalk.expression.v1.BetweenNodeH\000R\007be" +
      "tween\0223\n\004case\030\n \001(\0132\035.chalk.expression.v" +
      "1.CaseNodeH\000R\004case\0223\n\004cast\030\013 \001(\0132\035.chalk" +
      ".expression.v1.CastNodeH\000R\004cast\0227\n\004sort\030" +
      "\014 \001(\0132!.chalk.expression.v1.SortExprNode" +
      "H\000R\004sort\022?\n\010negative\030\r \001(\0132!.chalk.expre" +
      "ssion.v1.NegativeNodeH\000R\010negative\022:\n\007in_" +
      "list\030\016 \001(\0132\037.chalk.expression.v1.InListN" +
      "odeH\000R\006inList\022;\n\010wildcard\030\017 \001(\0132\035.chalk." +
      "expression.v1.WildcardH\000R\010wildcard\022R\n\017sc" +
      "alar_function\030\020 \001(\0132\'.chalk.expression.v" +
      "1.ScalarFunctionNodeH\000R\016scalarFunction\022=" +
      "\n\010try_cast\030\021 \001(\0132 .chalk.expression.v1.T" +
      "ryCastNodeH\000R\007tryCast\022F\n\013window_expr\030\022 \001" +
      "(\0132#.chalk.expression.v1.WindowExprNodeH" +
      "\000R\nwindowExpr\022Y\n\022aggregate_udf_expr\030\023 \001(" +
      "\0132).chalk.expression.v1.AggregateUDFExpr" +
      "NodeH\000R\020aggregateUdfExpr\022P\n\017scalar_udf_e" +
      "xpr\030\024 \001(\0132&.chalk.expression.v1.ScalarUD" +
      "FExprNodeH\000R\rscalarUdfExpr\022R\n\021get_indexe" +
      "d_field\030\025 \001(\0132$.chalk.expression.v1.GetI" +
      "ndexedFieldH\000R\017getIndexedField\022I\n\014groupi" +
      "ng_set\030\026 \001(\0132$.chalk.expression.v1.Group" +
      "ingSetNodeH\000R\013groupingSet\0223\n\004cube\030\027 \001(\0132" +
      "\035.chalk.expression.v1.CubeNodeH\000R\004cube\0229" +
      "\n\006rollup\030\030 \001(\0132\037.chalk.expression.v1.Rol" +
      "lupNodeH\000R\006rollup\0226\n\007is_true\030\031 \001(\0132\033.cha" +
      "lk.expression.v1.IsTrueH\000R\006isTrue\0229\n\010is_" +
      "false\030\032 \001(\0132\034.chalk.expression.v1.IsFals" +
      "eH\000R\007isFalse\022?\n\nis_unknown\030\033 \001(\0132\036.chalk" +
      ".expression.v1.IsUnknownH\000R\tisUnknown\022@\n" +
      "\013is_not_true\030\034 \001(\0132\036.chalk.expression.v1" +
      ".IsNotTrueH\000R\tisNotTrue\022C\n\014is_not_false\030" +
      "\035 \001(\0132\037.chalk.expression.v1.IsNotFalseH\000" +
      "R\nisNotFalse\022I\n\016is_not_unknown\030\036 \001(\0132!.c" +
      "halk.expression.v1.IsNotUnknownH\000R\014isNot" +
      "Unknown\0223\n\004like\030\037 \001(\0132\035.chalk.expression" +
      ".v1.LikeNodeH\000R\004like\0226\n\005ilike\030  \001(\0132\036.ch" +
      "alk.expression.v1.ILikeNodeH\000R\005ilike\022C\n\n" +
      "similar_to\030! \001(\0132\".chalk.expression.v1.S" +
      "imilarToNodeH\000R\tsimilarTo\022H\n\013placeholder" +
      "\030\" \001(\0132$.chalk.expression.v1.Placeholder" +
      "NodeH\000R\013placeholderB\013\n\texpr_type\",\n\016Colu" +
      "mnRelation\022\032\n\010relation\030\001 \001(\tR\010relation\"]" +
      "\n\006Column\022\022\n\004name\030\001 \001(\tR\004name\022?\n\010relation" +
      "\030\002 \001(\0132#.chalk.expression.v1.ColumnRelat" +
      "ionR\010relation\";\n\010Wildcard\022!\n\tqualifier\030\001" +
      " \001(\tH\000R\tqualifier\210\001\001B\014\n\n_qualifier\"Y\n\017Pl" +
      "aceholderNode\022\016\n\002id\030\001 \001(\tR\002id\0226\n\tdata_ty" +
      "pe\030\002 \001(\0132\031.chalk.arrow.v1.ArrowTypeR\010dat" +
      "aType\"K\n\017LogicalExprList\0228\n\004expr\030\001 \003(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\004ex" +
      "pr\"K\n\017GroupingSetNode\0228\n\004expr\030\001 \003(\0132$.ch" +
      "alk.expression.v1.LogicalExprListR\004expr\"" +
      "D\n\010CubeNode\0228\n\004expr\030\001 \003(\0132$.chalk.expres" +
      "sion.v1.LogicalExprNodeR\004expr\"F\n\nRollupN" +
      "ode\0228\n\004expr\030\001 \003(\0132$.chalk.expression.v1." +
      "LogicalExprNodeR\004expr\"C\n\020NamedStructFiel" +
      "d\022/\n\004name\030\001 \001(\0132\033.chalk.arrow.v1.ScalarV" +
      "alueR\004name\"C\n\tListIndex\0226\n\003key\030\001 \001(\0132$.c" +
      "halk.expression.v1.LogicalExprNodeR\003key\"" +
      "\201\001\n\tListRange\022:\n\005start\030\001 \001(\0132$.chalk.exp" +
      "ression.v1.LogicalExprNodeR\005start\0228\n\004sto" +
      "p\030\002 \001(\0132$.chalk.expression.v1.LogicalExp" +
      "rNodeR\004stop\"\255\002\n\017GetIndexedField\0228\n\004expr\030" +
      "\001 \001(\0132$.chalk.expression.v1.LogicalExprN" +
      "odeR\004expr\022U\n\022named_struct_field\030\002 \001(\0132%." +
      "chalk.expression.v1.NamedStructFieldH\000R\020" +
      "namedStructField\022?\n\nlist_index\030\003 \001(\0132\036.c" +
      "halk.expression.v1.ListIndexH\000R\tlistInde" +
      "x\022?\n\nlist_range\030\004 \001(\0132\036.chalk.expression" +
      ".v1.ListRangeH\000R\tlistRangeB\007\n\005field\"B\n\006I" +
      "sNull\0228\n\004expr\030\001 \001(\0132$.chalk.expression.v" +
      "1.LogicalExprNodeR\004expr\"E\n\tIsNotNull\0228\n\004" +
      "expr\030\001 \001(\0132$.chalk.expression.v1.Logical" +
      "ExprNodeR\004expr\"B\n\006IsTrue\0228\n\004expr\030\001 \001(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\004ex" +
      "pr\"C\n\007IsFalse\0228\n\004expr\030\001 \001(\0132$.chalk.expr" +
      "ession.v1.LogicalExprNodeR\004expr\"E\n\tIsUnk" +
      "nown\0228\n\004expr\030\001 \001(\0132$.chalk.expression.v1" +
      ".LogicalExprNodeR\004expr\"E\n\tIsNotTrue\0228\n\004e" +
      "xpr\030\001 \001(\0132$.chalk.expression.v1.LogicalE" +
      "xprNodeR\004expr\"F\n\nIsNotFalse\0228\n\004expr\030\001 \001(" +
      "\0132$.chalk.expression.v1.LogicalExprNodeR" +
      "\004expr\"H\n\014IsNotUnknown\0228\n\004expr\030\001 \001(\0132$.ch" +
      "alk.expression.v1.LogicalExprNodeR\004expr\"" +
      "?\n\003Not\0228\n\004expr\030\001 \001(\0132$.chalk.expression." +
      "v1.LogicalExprNodeR\004expr\"\241\001\n\tAliasNode\0228" +
      "\n\004expr\030\001 \001(\0132$.chalk.expression.v1.Logic" +
      "alExprNodeR\004expr\022\024\n\005alias\030\002 \001(\tR\005alias\022D" +
      "\n\010relation\030\003 \003(\0132(.chalk.expression.v1.O" +
      "wnedTableReferenceR\010relation\"*\n\022BareTabl" +
      "eReference\022\024\n\005table\030\001 \001(\tR\005table\"E\n\025Part" +
      "ialTableReference\022\026\n\006schema\030\001 \001(\tR\006schem" +
      "a\022\024\n\005table\030\002 \001(\tR\005table\"\\\n\022FullTableRefe" +
      "rence\022\030\n\007catalog\030\001 \001(\tR\007catalog\022\026\n\006schem" +
      "a\030\002 \001(\tR\006schema\022\024\n\005table\030\003 \001(\tR\005table\"\363\001" +
      "\n\023OwnedTableReference\022=\n\004bare\030\001 \001(\0132\'.ch" +
      "alk.expression.v1.BareTableReferenceH\000R\004" +
      "bare\022F\n\007partial\030\002 \001(\0132*.chalk.expression" +
      ".v1.PartialTableReferenceH\000R\007partial\022=\n\004" +
      "full\030\003 \001(\0132\'.chalk.expression.v1.FullTab" +
      "leReferenceH\000R\004fullB\026\n\024table_reference_e" +
      "num\"b\n\016BinaryExprNode\022@\n\010operands\030\001 \003(\0132" +
      "$.chalk.expression.v1.LogicalExprNodeR\010o" +
      "perands\022\016\n\002op\030\003 \001(\tR\002op\"H\n\014NegativeNode\022" +
      "8\n\004expr\030\001 \001(\0132$.chalk.expression.v1.Logi" +
      "calExprNodeR\004expr\"\232\001\n\nInListNode\0228\n\004expr" +
      "\030\001 \001(\0132$.chalk.expression.v1.LogicalExpr" +
      "NodeR\004expr\0228\n\004list\030\002 \003(\0132$.chalk.express" +
      "ion.v1.LogicalExprNodeR\004list\022\030\n\007negated\030" +
      "\003 \001(\010R\007negated\"\205\001\n\022ScalarFunctionNode\0225\n" +
      "\003fun\030\001 \001(\0162#.chalk.expression.v1.ScalarF" +
      "unctionR\003fun\0228\n\004args\030\002 \003(\0132$.chalk.expre" +
      "ssion.v1.LogicalExprNodeR\004args\"\265\002\n\021Aggre" +
      "gateExprNode\022K\n\raggr_function\030\001 \001(\0162&.ch" +
      "alk.expression.v1.AggregateFunctionR\014agg" +
      "rFunction\0228\n\004expr\030\002 \003(\0132$.chalk.expressi" +
      "on.v1.LogicalExprNodeR\004expr\022\032\n\010distinct\030" +
      "\003 \001(\010R\010distinct\022<\n\006filter\030\004 \001(\0132$.chalk." +
      "expression.v1.LogicalExprNodeR\006filter\022?\n" +
      "\010order_by\030\005 \003(\0132$.chalk.expression.v1.Lo" +
      "gicalExprNodeR\007orderBy\"\232\003\n\024AggregateUDFE" +
      "xprNode\022\031\n\010fun_name\030\001 \001(\tR\007funName\0228\n\004ar" +
      "gs\030\002 \003(\0132$.chalk.expression.v1.LogicalEx" +
      "prNodeR\004args\022<\n\006filter\030\003 \001(\0132$.chalk.exp" +
      "ression.v1.LogicalExprNodeR\006filter\022?\n\010or" +
      "der_by\030\004 \003(\0132$.chalk.expression.v1.Logic" +
      "alExprNodeR\007orderBy\022M\n\006kwargs\030\005 \003(\01325.ch" +
      "alk.expression.v1.AggregateUDFExprNode.K" +
      "wargsEntryR\006kwargs\032_\n\013KwargsEntry\022\020\n\003key" +
      "\030\001 \001(\tR\003key\022:\n\005value\030\002 \001(\0132$.chalk.expre" +
      "ssion.v1.LogicalExprNodeR\005value:\0028\001\"h\n\021S" +
      "calarUDFExprNode\022\031\n\010fun_name\030\001 \001(\tR\007funN" +
      "ame\0228\n\004args\030\002 \003(\0132$.chalk.expression.v1." +
      "LogicalExprNodeR\004args\"\201\004\n\016WindowExprNode" +
      "\022M\n\raggr_function\030\001 \001(\0162&.chalk.expressi" +
      "on.v1.AggregateFunctionH\000R\014aggrFunction\022" +
      "X\n\021built_in_function\030\002 \001(\0162*.chalk.expre" +
      "ssion.v1.BuiltInWindowFunctionH\000R\017builtI" +
      "nFunction\022\024\n\004udaf\030\003 \001(\tH\000R\004udaf\022\024\n\004udwf\030" +
      "\t \001(\tH\000R\004udwf\0228\n\004expr\030\004 \001(\0132$.chalk.expr" +
      "ession.v1.LogicalExprNodeR\004expr\022G\n\014parti" +
      "tion_by\030\005 \003(\0132$.chalk.expression.v1.Logi" +
      "calExprNodeR\013partitionBy\022?\n\010order_by\030\006 \003" +
      "(\0132$.chalk.expression.v1.LogicalExprNode" +
      "R\007orderBy\022C\n\014window_frame\030\010 \001(\0132 .chalk." +
      "expression.v1.WindowFrameR\013windowFrameB\021" +
      "\n\017window_function\"\323\001\n\013BetweenNode\0228\n\004exp" +
      "r\030\001 \001(\0132$.chalk.expression.v1.LogicalExp" +
      "rNodeR\004expr\022\030\n\007negated\030\002 \001(\010R\007negated\0226\n" +
      "\003low\030\003 \001(\0132$.chalk.expression.v1.Logical" +
      "ExprNodeR\003low\0228\n\004high\030\004 \001(\0132$.chalk.expr" +
      "ession.v1.LogicalExprNodeR\004high\"\277\001\n\010Like" +
      "Node\022\030\n\007negated\030\001 \001(\010R\007negated\0228\n\004expr\030\002" +
      " \001(\0132$.chalk.expression.v1.LogicalExprNo" +
      "deR\004expr\022>\n\007pattern\030\003 \001(\0132$.chalk.expres" +
      "sion.v1.LogicalExprNodeR\007pattern\022\037\n\013esca" +
      "pe_char\030\004 \001(\tR\nescapeChar\"\300\001\n\tILikeNode\022" +
      "\030\n\007negated\030\001 \001(\010R\007negated\0228\n\004expr\030\002 \001(\0132" +
      "$.chalk.expression.v1.LogicalExprNodeR\004e" +
      "xpr\022>\n\007pattern\030\003 \001(\0132$.chalk.expression." +
      "v1.LogicalExprNodeR\007pattern\022\037\n\013escape_ch" +
      "ar\030\004 \001(\tR\nescapeChar\"\304\001\n\rSimilarToNode\022\030" +
      "\n\007negated\030\001 \001(\010R\007negated\0228\n\004expr\030\002 \001(\0132$" +
      ".chalk.expression.v1.LogicalExprNodeR\004ex" +
      "pr\022>\n\007pattern\030\003 \001(\0132$.chalk.expression.v" +
      "1.LogicalExprNodeR\007pattern\022\037\n\013escape_cha" +
      "r\030\004 \001(\tR\nescapeChar\"\314\001\n\010CaseNode\0228\n\004expr" +
      "\030\001 \001(\0132$.chalk.expression.v1.LogicalExpr" +
      "NodeR\004expr\022C\n\016when_then_expr\030\002 \003(\0132\035.cha" +
      "lk.expression.v1.WhenThenR\014whenThenExpr\022" +
      "A\n\telse_expr\030\003 \001(\0132$.chalk.expression.v1" +
      ".LogicalExprNodeR\010elseExpr\"\220\001\n\010WhenThen\022" +
      "A\n\twhen_expr\030\001 \001(\0132$.chalk.expression.v1" +
      ".LogicalExprNodeR\010whenExpr\022A\n\tthen_expr\030" +
      "\002 \001(\0132$.chalk.expression.v1.LogicalExprN" +
      "odeR\010thenExpr\"~\n\010CastNode\0228\n\004expr\030\001 \001(\0132" +
      "$.chalk.expression.v1.LogicalExprNodeR\004e" +
      "xpr\0228\n\narrow_type\030\002 \001(\0132\031.chalk.arrow.v1" +
      ".ArrowTypeR\tarrowType\"\201\001\n\013TryCastNode\0228\n" +
      "\004expr\030\001 \001(\0132$.chalk.expression.v1.Logica" +
      "lExprNodeR\004expr\0228\n\narrow_type\030\002 \001(\0132\031.ch" +
      "alk.arrow.v1.ArrowTypeR\tarrowType\"{\n\014Sor" +
      "tExprNode\0228\n\004expr\030\001 \001(\0132$.chalk.expressi" +
      "on.v1.LogicalExprNodeR\004expr\022\020\n\003asc\030\002 \001(\010" +
      "R\003asc\022\037\n\013nulls_first\030\003 \001(\010R\nnullsFirst\"\366" +
      "\001\n\013WindowFrame\022S\n\022window_frame_units\030\001 \001" +
      "(\0162%.chalk.expression.v1.WindowFrameUnit" +
      "sR\020windowFrameUnits\022F\n\013start_bound\030\002 \001(\013" +
      "2%.chalk.expression.v1.WindowFrameBoundR" +
      "\nstartBound\022@\n\005bound\030\003 \001(\0132%.chalk.expre" +
      "ssion.v1.WindowFrameBoundH\000R\005bound\210\001\001B\010\n" +
      "\006_bound\"\262\001\n\020WindowFrameBound\022`\n\027window_f" +
      "rame_bound_type\030\001 \001(\0162).chalk.expression" +
      ".v1.WindowFrameBoundTypeR\024windowFrameBou" +
      "ndType\022<\n\013bound_value\030\002 \001(\0132\033.chalk.arro" +
      "w.v1.ScalarValueR\nboundValue*\240\037\n\016ScalarF" +
      "unction\022\037\n\033SCALAR_FUNCTION_UNSPECIFIED\020\000" +
      "\022\027\n\023SCALAR_FUNCTION_ABS\020\001\022\030\n\024SCALAR_FUNC" +
      "TION_ACOS\020\002\022\030\n\024SCALAR_FUNCTION_ASIN\020\003\022\030\n" +
      "\024SCALAR_FUNCTION_ATAN\020\004\022\031\n\025SCALAR_FUNCTI" +
      "ON_ASCII\020\005\022\030\n\024SCALAR_FUNCTION_CEIL\020\006\022\027\n\023" +
      "SCALAR_FUNCTION_COS\020\007\022\032\n\026SCALAR_FUNCTION" +
      "_DIGEST\020\010\022\027\n\023SCALAR_FUNCTION_EXP\020\t\022\031\n\025SC" +
      "ALAR_FUNCTION_FLOOR\020\n\022\026\n\022SCALAR_FUNCTION" +
      "_LN\020\013\022\027\n\023SCALAR_FUNCTION_LOG\020\014\022\031\n\025SCALAR" +
      "_FUNCTION_LOG10\020\r\022\030\n\024SCALAR_FUNCTION_LOG" +
      "2\020\016\022\031\n\025SCALAR_FUNCTION_ROUND\020\017\022\032\n\026SCALAR" +
      "_FUNCTION_SIGNUM\020\020\022\027\n\023SCALAR_FUNCTION_SI" +
      "N\020\021\022\030\n\024SCALAR_FUNCTION_SQRT\020\022\022\027\n\023SCALAR_" +
      "FUNCTION_TAN\020\023\022\031\n\025SCALAR_FUNCTION_TRUNC\020" +
      "\024\022\031\n\025SCALAR_FUNCTION_ARRAY\020\025\022 \n\034SCALAR_F" +
      "UNCTION_REGEXP_MATCH\020\026\022\036\n\032SCALAR_FUNCTIO" +
      "N_BIT_LENGTH\020\027\022\031\n\025SCALAR_FUNCTION_BTRIM\020" +
      "\030\022$\n SCALAR_FUNCTION_CHARACTER_LENGTH\020\031\022" +
      "\027\n\023SCALAR_FUNCTION_CHR\020\032\022\032\n\026SCALAR_FUNCT" +
      "ION_CONCAT\020\033\022)\n%SCALAR_FUNCTION_CONCAT_W" +
      "ITH_SEPARATOR\020\034\022\035\n\031SCALAR_FUNCTION_DATE_" +
      "PART\020\035\022\036\n\032SCALAR_FUNCTION_DATE_TRUNC\020\036\022\034" +
      "\n\030SCALAR_FUNCTION_INIT_CAP\020\037\022\030\n\024SCALAR_F" +
      "UNCTION_LEFT\020 \022\030\n\024SCALAR_FUNCTION_LPAD\020!" +
      "\022\031\n\025SCALAR_FUNCTION_LOWER\020\"\022\031\n\025SCALAR_FU" +
      "NCTION_LTRIM\020#\022\027\n\023SCALAR_FUNCTION_MD5\020$\022" +
      "\033\n\027SCALAR_FUNCTION_NULL_IF\020%\022 \n\034SCALAR_F" +
      "UNCTION_OCTET_LENGTH\020&\022\032\n\026SCALAR_FUNCTIO" +
      "N_RANDOM\020\'\022\"\n\036SCALAR_FUNCTION_REGEXP_REP" +
      "LACE\020(\022\032\n\026SCALAR_FUNCTION_REPEAT\020)\022\033\n\027SC" +
      "ALAR_FUNCTION_REPLACE\020*\022\033\n\027SCALAR_FUNCTI" +
      "ON_REVERSE\020+\022\031\n\025SCALAR_FUNCTION_RIGHT\020,\022" +
      "\030\n\024SCALAR_FUNCTION_RPAD\020-\022\031\n\025SCALAR_FUNC" +
      "TION_RTRIM\020.\022\032\n\026SCALAR_FUNCTION_SHA224\020/" +
      "\022\032\n\026SCALAR_FUNCTION_SHA256\0200\022\032\n\026SCALAR_F" +
      "UNCTION_SHA384\0201\022\032\n\026SCALAR_FUNCTION_SHA5" +
      "12\0202\022\036\n\032SCALAR_FUNCTION_SPLIT_PART\0203\022\037\n\033" +
      "SCALAR_FUNCTION_STARTS_WITH\0204\022\032\n\026SCALAR_" +
      "FUNCTION_STRPOS\0205\022\032\n\026SCALAR_FUNCTION_SUB" +
      "STR\0206\022\032\n\026SCALAR_FUNCTION_TO_HEX\0207\022 \n\034SCA" +
      "LAR_FUNCTION_TO_TIMESTAMP\0208\022\'\n#SCALAR_FU" +
      "NCTION_TO_TIMESTAMP_MILLIS\0209\022\'\n#SCALAR_F" +
      "UNCTION_TO_TIMESTAMP_MICROS\020:\022(\n$SCALAR_" +
      "FUNCTION_TO_TIMESTAMP_SECONDS\020;\022\027\n\023SCALA" +
      "R_FUNCTION_NOW\020<\022\035\n\031SCALAR_FUNCTION_TRAN" +
      "SLATE\020=\022\030\n\024SCALAR_FUNCTION_TRIM\020>\022\031\n\025SCA" +
      "LAR_FUNCTION_UPPER\020?\022\034\n\030SCALAR_FUNCTION_" +
      "COALESCE\020@\022\031\n\025SCALAR_FUNCTION_POWER\020A\022\036\n" +
      "\032SCALAR_FUNCTION_STRUCT_FUN\020B\022!\n\035SCALAR_" +
      "FUNCTION_FROM_UNIXTIME\020C\022\031\n\025SCALAR_FUNCT" +
      "ION_ATAN2\020D\022\034\n\030SCALAR_FUNCTION_DATE_BIN\020" +
      "E\022 \n\034SCALAR_FUNCTION_ARROW_TYPEOF\020F\022 \n\034S" +
      "CALAR_FUNCTION_CURRENT_DATE\020G\022 \n\034SCALAR_" +
      "FUNCTION_CURRENT_TIME\020H\022\030\n\024SCALAR_FUNCTI" +
      "ON_UUID\020I\022\030\n\024SCALAR_FUNCTION_CBRT\020J\022\031\n\025S" +
      "CALAR_FUNCTION_ACOSH\020K\022\031\n\025SCALAR_FUNCTIO" +
      "N_ASINH\020L\022\031\n\025SCALAR_FUNCTION_ATANH\020M\022\030\n\024" +
      "SCALAR_FUNCTION_SINH\020N\022\030\n\024SCALAR_FUNCTIO" +
      "N_COSH\020O\022\030\n\024SCALAR_FUNCTION_TANH\020P\022\026\n\022SC" +
      "ALAR_FUNCTION_PI\020Q\022\033\n\027SCALAR_FUNCTION_DE" +
      "GREES\020R\022\033\n\027SCALAR_FUNCTION_RADIANS\020S\022\035\n\031" +
      "SCALAR_FUNCTION_FACTORIAL\020T\022\027\n\023SCALAR_FU" +
      "NCTION_LCM\020U\022\027\n\023SCALAR_FUNCTION_GCD\020V\022 \n" +
      "\034SCALAR_FUNCTION_ARRAY_APPEND\020W\022 \n\034SCALA" +
      "R_FUNCTION_ARRAY_CONCAT\020X\022\036\n\032SCALAR_FUNC" +
      "TION_ARRAY_DIMS\020Y\022 \n\034SCALAR_FUNCTION_ARR" +
      "AY_REPEAT\020Z\022 \n\034SCALAR_FUNCTION_ARRAY_LEN" +
      "GTH\020[\022\037\n\033SCALAR_FUNCTION_ARRAY_NDIMS\020\\\022\"" +
      "\n\036SCALAR_FUNCTION_ARRAY_POSITION\020]\022#\n\037SC" +
      "ALAR_FUNCTION_ARRAY_POSITIONS\020^\022!\n\035SCALA" +
      "R_FUNCTION_ARRAY_PREPEND\020_\022 \n\034SCALAR_FUN" +
      "CTION_ARRAY_REMOVE\020`\022!\n\035SCALAR_FUNCTION_" +
      "ARRAY_REPLACE\020a\022#\n\037SCALAR_FUNCTION_ARRAY" +
      "_TO_STRING\020b\022\037\n\033SCALAR_FUNCTION_CARDINAL" +
      "ITY\020c\022!\n\035SCALAR_FUNCTION_ARRAY_ELEMENT\020d" +
      "\022\037\n\033SCALAR_FUNCTION_ARRAY_SLICE\020e\022\032\n\026SCA" +
      "LAR_FUNCTION_ENCODE\020f\022\032\n\026SCALAR_FUNCTION" +
      "_DECODE\020g\022\027\n\023SCALAR_FUNCTION_COT\020h\022\035\n\031SC" +
      "ALAR_FUNCTION_ARRAY_HAS\020i\022!\n\035SCALAR_FUNC" +
      "TION_ARRAY_HAS_ANY\020j\022!\n\035SCALAR_FUNCTION_" +
      "ARRAY_HAS_ALL\020k\022\"\n\036SCALAR_FUNCTION_ARRAY" +
      "_REMOVE_N\020l\022#\n\037SCALAR_FUNCTION_ARRAY_REP" +
      "LACE_N\020m\022$\n SCALAR_FUNCTION_ARRAY_REMOVE" +
      "_ALL\020n\022%\n!SCALAR_FUNCTION_ARRAY_REPLACE_" +
      "ALL\020o\022\031\n\025SCALAR_FUNCTION_NANVL\020p\022\033\n\027SCAL" +
      "AR_FUNCTION_FLATTEN\020q\022\031\n\025SCALAR_FUNCTION" +
      "_ISNAN\020r\022\032\n\026SCALAR_FUNCTION_ISZERO\020s\022\037\n\033" +
      "SCALAR_FUNCTION_ARRAY_EMPTY\020t\022\"\n\036SCALAR_" +
      "FUNCTION_ARRAY_POP_BACK\020u\022#\n\037SCALAR_FUNC" +
      "TION_STRING_TO_ARRAY\020v\022&\n\"SCALAR_FUNCTIO" +
      "N_TO_TIMESTAMP_NANOS\020w\022#\n\037SCALAR_FUNCTIO" +
      "N_ARRAY_INTERSECT\020x\022\037\n\033SCALAR_FUNCTION_A" +
      "RRAY_UNION\020y\022\034\n\030SCALAR_FUNCTION_OVER_LAY" +
      "\020z\022\031\n\025SCALAR_FUNCTION_RANGE\020{\022 \n\034SCALAR_" +
      "FUNCTION_ARRAY_EXCEPT\020|\022#\n\037SCALAR_FUNCTI" +
      "ON_ARRAY_POP_FRONT\020}\022\037\n\033SCALAR_FUNCTION_" +
      "LEVENSHTEIN\020~\022 \n\034SCALAR_FUNCTION_SUBSTR_" +
      "INDEX\020\177\022 \n\033SCALAR_FUNCTION_FIND_IN_SET\020\200" +
      "\001\022\037\n\032SCALAR_FUNCTION_ARRAY_SORT\020\201\001\022#\n\036SC" +
      "ALAR_FUNCTION_ARRAY_DISTINCT\020\202\001*\213\n\n\021Aggr" +
      "egateFunction\022\"\n\036AGGREGATE_FUNCTION_UNSP" +
      "ECIFIED\020\000\022\032\n\026AGGREGATE_FUNCTION_MIN\020\001\022\032\n" +
      "\026AGGREGATE_FUNCTION_MAX\020\002\022\032\n\026AGGREGATE_F" +
      "UNCTION_SUM\020\003\022\032\n\026AGGREGATE_FUNCTION_AVG\020" +
      "\004\022\034\n\030AGGREGATE_FUNCTION_COUNT\020\005\022&\n\"AGGRE" +
      "GATE_FUNCTION_APPROX_DISTINCT\020\006\022\034\n\030AGGRE" +
      "GATE_FUNCTION_ARRAY\020\007\022\037\n\033AGGREGATE_FUNCT" +
      "ION_VARIANCE\020\010\022#\n\037AGGREGATE_FUNCTION_VAR" +
      "IANCE_POP\020\t\022!\n\035AGGREGATE_FUNCTION_COVARI" +
      "ANCE\020\n\022%\n!AGGREGATE_FUNCTION_COVARIANCE_" +
      "POP\020\013\022\035\n\031AGGREGATE_FUNCTION_STDDEV\020\014\022!\n\035" +
      "AGGREGATE_FUNCTION_STDDEV_POP\020\r\022\"\n\036AGGRE" +
      "GATE_FUNCTION_CORRELATION\020\016\022-\n)AGGREGATE" +
      "_FUNCTION_APPROX_PERCENTILE_CONT\020\017\022$\n AG" +
      "GREGATE_FUNCTION_APPROX_MEDIAN\020\020\0229\n5AGGR" +
      "EGATE_FUNCTION_APPROX_PERCENTILE_CONT_WI" +
      "TH_WEIGHT\020\021\022\037\n\033AGGREGATE_FUNCTION_GROUPI" +
      "NG\020\022\022\035\n\031AGGREGATE_FUNCTION_MEDIAN\020\023\022\036\n\032A" +
      "GGREGATE_FUNCTION_BIT_AND\020\024\022\035\n\031AGGREGATE" +
      "_FUNCTION_BIT_OR\020\025\022\036\n\032AGGREGATE_FUNCTION" +
      "_BIT_XOR\020\026\022\037\n\033AGGREGATE_FUNCTION_BOOL_AN" +
      "D\020\027\022\036\n\032AGGREGATE_FUNCTION_BOOL_OR\020\030\022\"\n\036A" +
      "GGREGATE_FUNCTION_FIRST_VALUE\020\031\022!\n\035AGGRE" +
      "GATE_FUNCTION_LAST_VALUE\020\032\022!\n\035AGGREGATE_" +
      "FUNCTION_REGR_SLOPE\020\033\022%\n!AGGREGATE_FUNCT" +
      "ION_REGR_INTERCEPT\020\034\022!\n\035AGGREGATE_FUNCTI" +
      "ON_REGR_COUNT\020\035\022\036\n\032AGGREGATE_FUNCTION_RE" +
      "GR_R2\020\036\022 \n\034AGGREGATE_FUNCTION_REGR_AVGX\020" +
      "\037\022 \n\034AGGREGATE_FUNCTION_REGR_AVGY\020 \022\037\n\033A" +
      "GGREGATE_FUNCTION_REGR_SXX\020!\022\037\n\033AGGREGAT" +
      "E_FUNCTION_REGR_SYY\020\"\022\037\n\033AGGREGATE_FUNCT" +
      "ION_REGR_SXY\020#\022\035\n\031AGGREGATE_FUNCTION_STR" +
      "ING\020$*\355\003\n\025BuiltInWindowFunction\022(\n$BUILT" +
      "_IN_WINDOW_FUNCTION_UNSPECIFIED\020\000\022\'\n#BUI" +
      "LT_IN_WINDOW_FUNCTION_ROW_NUMBER\020\001\022!\n\035BU" +
      "ILT_IN_WINDOW_FUNCTION_RANK\020\002\022\'\n#BUILT_I" +
      "N_WINDOW_FUNCTION_DENSE_RANK\020\003\022)\n%BUILT_" +
      "IN_WINDOW_FUNCTION_PERCENT_RANK\020\004\022&\n\"BUI" +
      "LT_IN_WINDOW_FUNCTION_CUME_DIST\020\005\022\"\n\036BUI" +
      "LT_IN_WINDOW_FUNCTION_NTILE\020\006\022 \n\034BUILT_I" +
      "N_WINDOW_FUNCTION_LAG\020\007\022!\n\035BUILT_IN_WIND" +
      "OW_FUNCTION_LEAD\020\010\022(\n$BUILT_IN_WINDOW_FU" +
      "NCTION_FIRST_VALUE\020\t\022\'\n#BUILT_IN_WINDOW_" +
      "FUNCTION_LAST_VALUE\020\n\022&\n\"BUILT_IN_WINDOW" +
      "_FUNCTION_NTH_VALUE\020\013*\220\001\n\020WindowFrameUni" +
      "ts\022\"\n\036WINDOW_FRAME_UNITS_UNSPECIFIED\020\000\022\033" +
      "\n\027WINDOW_FRAME_UNITS_ROWS\020\001\022\034\n\030WINDOW_FR" +
      "AME_UNITS_RANGE\020\002\022\035\n\031WINDOW_FRAME_UNITS_" +
      "GROUPS\020\003*\266\001\n\024WindowFrameBoundType\022\'\n#WIN" +
      "DOW_FRAME_BOUND_TYPE_UNSPECIFIED\020\000\022\'\n#WI" +
      "NDOW_FRAME_BOUND_TYPE_CURRENT_ROW\020\001\022%\n!W" +
      "INDOW_FRAME_BOUND_TYPE_PRECEDING\020\002\022%\n!WI" +
      "NDOW_FRAME_BOUND_TYPE_FOLLOWING\020\003B\244\001\n#ai" +
      ".chalk.protos.chalk.expression.v1B\017Expre" +
      "ssionProtoP\001\242\002\003CEX\252\002\023Chalk.Expression.V1" +
      "\312\002\023Chalk\\Expression\\V1\342\002\037Chalk\\Expressio" +
      "n\\V1\\GPBMetadata\352\002\025Chalk::Expression::V1" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ai.chalk.protos.chalk.arrow.v1.ArrowProto.getDescriptor(),
        });
    internal_static_chalk_expression_v1_LogicalExprNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_chalk_expression_v1_LogicalExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LogicalExprNode_descriptor,
        new java.lang.String[] { "Column", "Alias", "Literal", "BinaryExpr", "AggregateExpr", "IsNullExpr", "IsNotNullExpr", "NotExpr", "Between", "Case", "Cast", "Sort", "Negative", "InList", "Wildcard", "ScalarFunction", "TryCast", "WindowExpr", "AggregateUdfExpr", "ScalarUdfExpr", "GetIndexedField", "GroupingSet", "Cube", "Rollup", "IsTrue", "IsFalse", "IsUnknown", "IsNotTrue", "IsNotFalse", "IsNotUnknown", "Like", "Ilike", "SimilarTo", "Placeholder", "ExprType", });
    internal_static_chalk_expression_v1_ColumnRelation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_chalk_expression_v1_ColumnRelation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ColumnRelation_descriptor,
        new java.lang.String[] { "Relation", });
    internal_static_chalk_expression_v1_Column_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_chalk_expression_v1_Column_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Column_descriptor,
        new java.lang.String[] { "Name", "Relation", });
    internal_static_chalk_expression_v1_Wildcard_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_chalk_expression_v1_Wildcard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Wildcard_descriptor,
        new java.lang.String[] { "Qualifier", });
    internal_static_chalk_expression_v1_PlaceholderNode_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_chalk_expression_v1_PlaceholderNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_PlaceholderNode_descriptor,
        new java.lang.String[] { "Id", "DataType", });
    internal_static_chalk_expression_v1_LogicalExprList_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_chalk_expression_v1_LogicalExprList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LogicalExprList_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_GroupingSetNode_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_chalk_expression_v1_GroupingSetNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_GroupingSetNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_CubeNode_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_chalk_expression_v1_CubeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CubeNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_RollupNode_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_chalk_expression_v1_RollupNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_RollupNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_NamedStructField_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_chalk_expression_v1_NamedStructField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_NamedStructField_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_chalk_expression_v1_ListIndex_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_chalk_expression_v1_ListIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ListIndex_descriptor,
        new java.lang.String[] { "Key", });
    internal_static_chalk_expression_v1_ListRange_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_chalk_expression_v1_ListRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ListRange_descriptor,
        new java.lang.String[] { "Start", "Stop", });
    internal_static_chalk_expression_v1_GetIndexedField_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_chalk_expression_v1_GetIndexedField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_GetIndexedField_descriptor,
        new java.lang.String[] { "Expr", "NamedStructField", "ListIndex", "ListRange", "Field", });
    internal_static_chalk_expression_v1_IsNull_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_chalk_expression_v1_IsNull_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNull_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotNull_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_chalk_expression_v1_IsNotNull_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotNull_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsTrue_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_chalk_expression_v1_IsTrue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsTrue_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsFalse_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_chalk_expression_v1_IsFalse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsFalse_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsUnknown_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_chalk_expression_v1_IsUnknown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsUnknown_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotTrue_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_chalk_expression_v1_IsNotTrue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotTrue_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotFalse_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_chalk_expression_v1_IsNotFalse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotFalse_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_IsNotUnknown_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_chalk_expression_v1_IsNotUnknown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_IsNotUnknown_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_Not_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_chalk_expression_v1_Not_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_Not_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_AliasNode_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_chalk_expression_v1_AliasNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AliasNode_descriptor,
        new java.lang.String[] { "Expr", "Alias", "Relation", });
    internal_static_chalk_expression_v1_BareTableReference_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_chalk_expression_v1_BareTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BareTableReference_descriptor,
        new java.lang.String[] { "Table", });
    internal_static_chalk_expression_v1_PartialTableReference_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_chalk_expression_v1_PartialTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_PartialTableReference_descriptor,
        new java.lang.String[] { "Schema", "Table", });
    internal_static_chalk_expression_v1_FullTableReference_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_chalk_expression_v1_FullTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_FullTableReference_descriptor,
        new java.lang.String[] { "Catalog", "Schema", "Table", });
    internal_static_chalk_expression_v1_OwnedTableReference_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_chalk_expression_v1_OwnedTableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_OwnedTableReference_descriptor,
        new java.lang.String[] { "Bare", "Partial", "Full", "TableReferenceEnum", });
    internal_static_chalk_expression_v1_BinaryExprNode_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_chalk_expression_v1_BinaryExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BinaryExprNode_descriptor,
        new java.lang.String[] { "Operands", "Op", });
    internal_static_chalk_expression_v1_NegativeNode_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_chalk_expression_v1_NegativeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_NegativeNode_descriptor,
        new java.lang.String[] { "Expr", });
    internal_static_chalk_expression_v1_InListNode_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_chalk_expression_v1_InListNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_InListNode_descriptor,
        new java.lang.String[] { "Expr", "List", "Negated", });
    internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_chalk_expression_v1_ScalarFunctionNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ScalarFunctionNode_descriptor,
        new java.lang.String[] { "Fun", "Args", });
    internal_static_chalk_expression_v1_AggregateExprNode_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_chalk_expression_v1_AggregateExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateExprNode_descriptor,
        new java.lang.String[] { "AggrFunction", "Expr", "Distinct", "Filter", "OrderBy", });
    internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_chalk_expression_v1_AggregateUDFExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor,
        new java.lang.String[] { "FunName", "Args", "Filter", "OrderBy", "Kwargs", });
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor =
      internal_static_chalk_expression_v1_AggregateUDFExprNode_descriptor.getNestedTypes().get(0);
    internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_AggregateUDFExprNode_KwargsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_chalk_expression_v1_ScalarUDFExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ScalarUDFExprNode_descriptor,
        new java.lang.String[] { "FunName", "Args", });
    internal_static_chalk_expression_v1_WindowExprNode_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_chalk_expression_v1_WindowExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowExprNode_descriptor,
        new java.lang.String[] { "AggrFunction", "BuiltInFunction", "Udaf", "Udwf", "Expr", "PartitionBy", "OrderBy", "WindowFrame", "WindowFunction", });
    internal_static_chalk_expression_v1_BetweenNode_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_chalk_expression_v1_BetweenNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_BetweenNode_descriptor,
        new java.lang.String[] { "Expr", "Negated", "Low", "High", });
    internal_static_chalk_expression_v1_LikeNode_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_chalk_expression_v1_LikeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_LikeNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_ILikeNode_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_chalk_expression_v1_ILikeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_ILikeNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_SimilarToNode_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_chalk_expression_v1_SimilarToNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_SimilarToNode_descriptor,
        new java.lang.String[] { "Negated", "Expr", "Pattern", "EscapeChar", });
    internal_static_chalk_expression_v1_CaseNode_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_chalk_expression_v1_CaseNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CaseNode_descriptor,
        new java.lang.String[] { "Expr", "WhenThenExpr", "ElseExpr", });
    internal_static_chalk_expression_v1_WhenThen_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_chalk_expression_v1_WhenThen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WhenThen_descriptor,
        new java.lang.String[] { "WhenExpr", "ThenExpr", });
    internal_static_chalk_expression_v1_CastNode_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_chalk_expression_v1_CastNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_CastNode_descriptor,
        new java.lang.String[] { "Expr", "ArrowType", });
    internal_static_chalk_expression_v1_TryCastNode_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_chalk_expression_v1_TryCastNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_TryCastNode_descriptor,
        new java.lang.String[] { "Expr", "ArrowType", });
    internal_static_chalk_expression_v1_SortExprNode_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_chalk_expression_v1_SortExprNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_SortExprNode_descriptor,
        new java.lang.String[] { "Expr", "Asc", "NullsFirst", });
    internal_static_chalk_expression_v1_WindowFrame_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_chalk_expression_v1_WindowFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowFrame_descriptor,
        new java.lang.String[] { "WindowFrameUnits", "StartBound", "Bound", });
    internal_static_chalk_expression_v1_WindowFrameBound_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_chalk_expression_v1_WindowFrameBound_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_expression_v1_WindowFrameBound_descriptor,
        new java.lang.String[] { "WindowFrameBoundType", "BoundValue", });
    ai.chalk.protos.chalk.arrow.v1.ArrowProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
