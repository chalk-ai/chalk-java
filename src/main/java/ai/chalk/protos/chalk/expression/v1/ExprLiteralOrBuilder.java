// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/expression/v1/expression.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.expression.v1;

public interface ExprLiteralOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.expression.v1.ExprLiteral)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.chalk.arrow.v1.ScalarValue value = 1 [json_name = "value"];</code>
   * @return Whether the value field is set.
   */
  boolean hasValue();
  /**
   * <code>.chalk.arrow.v1.ScalarValue value = 1 [json_name = "value"];</code>
   * @return The value.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarValue getValue();
  /**
   * <code>.chalk.arrow.v1.ScalarValue value = 1 [json_name = "value"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarValueOrBuilder getValueOrBuilder();

  /**
   * <pre>
   * All Python literal values are encoded as arrow scalar values.
   * - If this bool is `False`, then the decoded value was originally a plain
   * Python value.
   * - If this bool is `True`, then the decoded value should be a
   * `pyarrow.Scalar` value.
   * </pre>
   *
   * <code>bool is_arrow_scalar_object = 2 [json_name = "isArrowScalarObject"];</code>
   * @return The isArrowScalarObject.
   */
  boolean getIsArrowScalarObject();
}
