// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/chalk_error.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.common.v1;

/**
 * Protobuf enum {@code chalk.common.v1.ErrorCode}
 */
public enum ErrorCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * An unspecified error occurred.
   * </pre>
   *
   * <code>ERROR_CODE_INTERNAL_SERVER_ERROR_UNSPECIFIED = 0;</code>
   */
  ERROR_CODE_INTERNAL_SERVER_ERROR_UNSPECIFIED(0),
  /**
   * <pre>
   * The query contained features that do not exist
   * </pre>
   *
   * <code>ERROR_CODE_PARSE_FAILED = 1;</code>
   */
  ERROR_CODE_PARSE_FAILED(1),
  /**
   * <pre>
   *
   * A resolver was required as part of running the dependency
   * graph that could not be found.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_NOT_FOUND = 2;</code>
   */
  ERROR_CODE_RESOLVER_NOT_FOUND(2),
  /**
   * <pre>
   *
   * The query is invalid. All supplied features need to be
   * rooted in the same top-level entity.
   * </pre>
   *
   * <code>ERROR_CODE_INVALID_QUERY = 3;</code>
   */
  ERROR_CODE_INVALID_QUERY(3),
  /**
   * <pre>
   *
   * A feature value did not match the expected schema
   * (e.g. `incompatible type "int"; expected "str"`)
   * </pre>
   *
   * <code>ERROR_CODE_VALIDATION_FAILED = 4;</code>
   */
  ERROR_CODE_VALIDATION_FAILED(4),
  /**
   * <pre>
   * The resolver for a feature errored.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_FAILED = 5;</code>
   */
  ERROR_CODE_RESOLVER_FAILED(5),
  /**
   * <pre>
   * The resolver for a feature timed out.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_TIMED_OUT = 6;</code>
   */
  ERROR_CODE_RESOLVER_TIMED_OUT(6),
  /**
   * <pre>
   *
   * A crash in a resolver that was to produce an input for
   * the resolver crashed, and so the resolver could not run
   * crashed, and so the resolver could not run.
   * </pre>
   *
   * <code>ERROR_CODE_UPSTREAM_FAILED = 7;</code>
   */
  ERROR_CODE_UPSTREAM_FAILED(7),
  /**
   * <pre>
   * The request was submitted with an invalid authentication header.
   * </pre>
   *
   * <code>ERROR_CODE_UNAUTHENTICATED = 8;</code>
   */
  ERROR_CODE_UNAUTHENTICATED(8),
  /**
   * <pre>
   * The supplied credentials do not provide the right authorization to execute the request.
   * </pre>
   *
   * <code>ERROR_CODE_UNAUTHORIZED = 9;</code>
   */
  ERROR_CODE_UNAUTHORIZED(9),
  /**
   * <pre>
   * The operation was cancelled, typically by the caller.
   * </pre>
   *
   * <code>ERROR_CODE_CANCELLED = 10;</code>
   */
  ERROR_CODE_CANCELLED(10),
  /**
   * <pre>
   * The deadline expired before the operation could complete.
   * </pre>
   *
   * <code>ERROR_CODE_DEADLINE_EXCEEDED = 11;</code>
   */
  ERROR_CODE_DEADLINE_EXCEEDED(11),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ErrorCode.class.getName());
  }
  /**
   * <pre>
   * An unspecified error occurred.
   * </pre>
   *
   * <code>ERROR_CODE_INTERNAL_SERVER_ERROR_UNSPECIFIED = 0;</code>
   */
  public static final int ERROR_CODE_INTERNAL_SERVER_ERROR_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * The query contained features that do not exist
   * </pre>
   *
   * <code>ERROR_CODE_PARSE_FAILED = 1;</code>
   */
  public static final int ERROR_CODE_PARSE_FAILED_VALUE = 1;
  /**
   * <pre>
   *
   * A resolver was required as part of running the dependency
   * graph that could not be found.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_NOT_FOUND = 2;</code>
   */
  public static final int ERROR_CODE_RESOLVER_NOT_FOUND_VALUE = 2;
  /**
   * <pre>
   *
   * The query is invalid. All supplied features need to be
   * rooted in the same top-level entity.
   * </pre>
   *
   * <code>ERROR_CODE_INVALID_QUERY = 3;</code>
   */
  public static final int ERROR_CODE_INVALID_QUERY_VALUE = 3;
  /**
   * <pre>
   *
   * A feature value did not match the expected schema
   * (e.g. `incompatible type "int"; expected "str"`)
   * </pre>
   *
   * <code>ERROR_CODE_VALIDATION_FAILED = 4;</code>
   */
  public static final int ERROR_CODE_VALIDATION_FAILED_VALUE = 4;
  /**
   * <pre>
   * The resolver for a feature errored.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_FAILED = 5;</code>
   */
  public static final int ERROR_CODE_RESOLVER_FAILED_VALUE = 5;
  /**
   * <pre>
   * The resolver for a feature timed out.
   * </pre>
   *
   * <code>ERROR_CODE_RESOLVER_TIMED_OUT = 6;</code>
   */
  public static final int ERROR_CODE_RESOLVER_TIMED_OUT_VALUE = 6;
  /**
   * <pre>
   *
   * A crash in a resolver that was to produce an input for
   * the resolver crashed, and so the resolver could not run
   * crashed, and so the resolver could not run.
   * </pre>
   *
   * <code>ERROR_CODE_UPSTREAM_FAILED = 7;</code>
   */
  public static final int ERROR_CODE_UPSTREAM_FAILED_VALUE = 7;
  /**
   * <pre>
   * The request was submitted with an invalid authentication header.
   * </pre>
   *
   * <code>ERROR_CODE_UNAUTHENTICATED = 8;</code>
   */
  public static final int ERROR_CODE_UNAUTHENTICATED_VALUE = 8;
  /**
   * <pre>
   * The supplied credentials do not provide the right authorization to execute the request.
   * </pre>
   *
   * <code>ERROR_CODE_UNAUTHORIZED = 9;</code>
   */
  public static final int ERROR_CODE_UNAUTHORIZED_VALUE = 9;
  /**
   * <pre>
   * The operation was cancelled, typically by the caller.
   * </pre>
   *
   * <code>ERROR_CODE_CANCELLED = 10;</code>
   */
  public static final int ERROR_CODE_CANCELLED_VALUE = 10;
  /**
   * <pre>
   * The deadline expired before the operation could complete.
   * </pre>
   *
   * <code>ERROR_CODE_DEADLINE_EXCEEDED = 11;</code>
   */
  public static final int ERROR_CODE_DEADLINE_EXCEEDED_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrorCode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ErrorCode forNumber(int value) {
    switch (value) {
      case 0: return ERROR_CODE_INTERNAL_SERVER_ERROR_UNSPECIFIED;
      case 1: return ERROR_CODE_PARSE_FAILED;
      case 2: return ERROR_CODE_RESOLVER_NOT_FOUND;
      case 3: return ERROR_CODE_INVALID_QUERY;
      case 4: return ERROR_CODE_VALIDATION_FAILED;
      case 5: return ERROR_CODE_RESOLVER_FAILED;
      case 6: return ERROR_CODE_RESOLVER_TIMED_OUT;
      case 7: return ERROR_CODE_UPSTREAM_FAILED;
      case 8: return ERROR_CODE_UNAUTHENTICATED;
      case 9: return ERROR_CODE_UNAUTHORIZED;
      case 10: return ERROR_CODE_CANCELLED;
      case 11: return ERROR_CODE_DEADLINE_EXCEEDED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
          public ErrorCode findValueByNumber(int number) {
            return ErrorCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.common.v1.ChalkErrorProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final ErrorCode[] VALUES = values();

  public static ErrorCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrorCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:chalk.common.v1.ErrorCode)
}

