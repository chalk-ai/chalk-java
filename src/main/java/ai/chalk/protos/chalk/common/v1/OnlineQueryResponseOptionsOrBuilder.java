// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/online_query.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.common.v1;

public interface OnlineQueryResponseOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.common.v1.OnlineQueryResponseOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>bool include_meta = 1 [json_name = "includeMeta"];</code>
   * @return The includeMeta.
   */
  boolean getIncludeMeta();

  /**
   * <code>.chalk.common.v1.ExplainOptions explain = 2 [json_name = "explain"];</code>
   * @return Whether the explain field is set.
   */
  boolean hasExplain();
  /**
   * <code>.chalk.common.v1.ExplainOptions explain = 2 [json_name = "explain"];</code>
   * @return The explain.
   */
  ai.chalk.protos.chalk.common.v1.ExplainOptions getExplain();
  /**
   * <code>.chalk.common.v1.ExplainOptions explain = 2 [json_name = "explain"];</code>
   */
  ai.chalk.protos.chalk.common.v1.ExplainOptionsOrBuilder getExplainOrBuilder();

  /**
   * <code>.chalk.common.v1.FeatureEncodingOptions encoding_options = 3 [json_name = "encodingOptions"];</code>
   * @return Whether the encodingOptions field is set.
   */
  boolean hasEncodingOptions();
  /**
   * <code>.chalk.common.v1.FeatureEncodingOptions encoding_options = 3 [json_name = "encodingOptions"];</code>
   * @return The encodingOptions.
   */
  ai.chalk.protos.chalk.common.v1.FeatureEncodingOptions getEncodingOptions();
  /**
   * <code>.chalk.common.v1.FeatureEncodingOptions encoding_options = 3 [json_name = "encodingOptions"];</code>
   */
  ai.chalk.protos.chalk.common.v1.FeatureEncodingOptionsOrBuilder getEncodingOptionsOrBuilder();

  /**
   * <pre>
   * Customer-provided metadata that gets returned in the response
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  int getMetadataCount();
  /**
   * <pre>
   * Customer-provided metadata that gets returned in the response
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  boolean containsMetadata(
      java.lang.String key);
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetadata();
  /**
   * <pre>
   * Customer-provided metadata that gets returned in the response
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetadataMap();
  /**
   * <pre>
   * Customer-provided metadata that gets returned in the response
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  /* nullable */
java.lang.String getMetadataOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Customer-provided metadata that gets returned in the response
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  java.lang.String getMetadataOrThrow(
      java.lang.String key);
}
