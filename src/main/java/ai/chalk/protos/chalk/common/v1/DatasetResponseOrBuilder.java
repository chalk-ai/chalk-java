// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/dataset_response.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.common.v1;

public interface DatasetResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.common.v1.DatasetResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Whether the export job is finished (it runs asynchronously)
   * </pre>
   *
   * <code>bool is_finished = 1 [json_name = "isFinished"];</code>
   * @return The isFinished.
   */
  boolean getIsFinished();

  /**
   * <pre>
   * Version number representing the format of the data. The client uses this version number
   * to properly decode and load the query results into DataFrames.
   * </pre>
   *
   * <code>int32 version = 2 [json_name = "version"];</code>
   * @return The version.
   */
  int getVersion();

  /**
   * <code>string environment_id = 3 [json_name = "environmentId"];</code>
   * @return The environmentId.
   */
  java.lang.String getEnvironmentId();
  /**
   * <code>string environment_id = 3 [json_name = "environmentId"];</code>
   * @return The bytes for environmentId.
   */
  com.google.protobuf.ByteString
      getEnvironmentIdBytes();

  /**
   * <code>string dataset_id = 4 [json_name = "datasetId"];</code>
   * @return The datasetId.
   */
  java.lang.String getDatasetId();
  /**
   * <code>string dataset_id = 4 [json_name = "datasetId"];</code>
   * @return The bytes for datasetId.
   */
  com.google.protobuf.ByteString
      getDatasetIdBytes();

  /**
   * <code>string dataset_name = 5 [json_name = "datasetName"];</code>
   * @return The datasetName.
   */
  java.lang.String getDatasetName();
  /**
   * <code>string dataset_name = 5 [json_name = "datasetName"];</code>
   * @return The bytes for datasetName.
   */
  com.google.protobuf.ByteString
      getDatasetNameBytes();

  /**
   * <code>repeated .chalk.common.v1.ChalkError errors = 101 [json_name = "errors"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.common.v1.ChalkError> 
      getErrorsList();
  /**
   * <code>repeated .chalk.common.v1.ChalkError errors = 101 [json_name = "errors"];</code>
   */
  ai.chalk.protos.chalk.common.v1.ChalkError getErrors(int index);
  /**
   * <code>repeated .chalk.common.v1.ChalkError errors = 101 [json_name = "errors"];</code>
   */
  int getErrorsCount();
  /**
   * <code>repeated .chalk.common.v1.ChalkError errors = 101 [json_name = "errors"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.common.v1.ChalkErrorOrBuilder> 
      getErrorsOrBuilderList();
  /**
   * <code>repeated .chalk.common.v1.ChalkError errors = 101 [json_name = "errors"];</code>
   */
  ai.chalk.protos.chalk.common.v1.ChalkErrorOrBuilder getErrorsOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.common.v1.DatasetRevisionResponse revisions = 102 [json_name = "revisions"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.common.v1.DatasetRevisionResponse> 
      getRevisionsList();
  /**
   * <code>repeated .chalk.common.v1.DatasetRevisionResponse revisions = 102 [json_name = "revisions"];</code>
   */
  ai.chalk.protos.chalk.common.v1.DatasetRevisionResponse getRevisions(int index);
  /**
   * <code>repeated .chalk.common.v1.DatasetRevisionResponse revisions = 102 [json_name = "revisions"];</code>
   */
  int getRevisionsCount();
  /**
   * <code>repeated .chalk.common.v1.DatasetRevisionResponse revisions = 102 [json_name = "revisions"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.common.v1.DatasetRevisionResponseOrBuilder> 
      getRevisionsOrBuilderList();
  /**
   * <code>repeated .chalk.common.v1.DatasetRevisionResponse revisions = 102 [json_name = "revisions"];</code>
   */
  ai.chalk.protos.chalk.common.v1.DatasetRevisionResponseOrBuilder getRevisionsOrBuilder(
      int index);
}
