// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/query_values.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.common.v1;

@java.lang.Deprecated public interface TableNameTableIdentifierOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.common.v1.TableNameTableIdentifier)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The tableName.
   */
  java.lang.String getTableName();
  /**
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The bytes for tableName.
   */
  com.google.protobuf.ByteString
      getTableNameBytes();

  /**
   * <pre>
   * Optionally, you can filter. Specifying any filters will result in a join against the query log table.
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 2 [json_name = "filters"];</code>
   * @return Whether the filters field is set.
   */
  boolean hasFilters();
  /**
   * <pre>
   * Optionally, you can filter. Specifying any filters will result in a join against the query log table.
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 2 [json_name = "filters"];</code>
   * @return The filters.
   */
  ai.chalk.protos.chalk.common.v1.QueryLogFilters getFilters();
  /**
   * <pre>
   * Optionally, you can filter. Specifying any filters will result in a join against the query log table.
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 2 [json_name = "filters"];</code>
   */
  ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder getFiltersOrBuilder();
}
