// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/online_query.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.common.v1;

public interface FeatureExpressionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.common.v1.FeatureExpression)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string output_column_name = 1 [json_name = "outputColumnName"];</code>
   * @return The outputColumnName.
   */
  java.lang.String getOutputColumnName();
  /**
   * <code>string output_column_name = 1 [json_name = "outputColumnName"];</code>
   * @return The bytes for outputColumnName.
   */
  com.google.protobuf.ByteString
      getOutputColumnNameBytes();

  /**
   * <code>string namespace = 3 [json_name = "namespace"];</code>
   * @return The namespace.
   */
  java.lang.String getNamespace();
  /**
   * <code>string namespace = 3 [json_name = "namespace"];</code>
   * @return The bytes for namespace.
   */
  com.google.protobuf.ByteString
      getNamespaceBytes();

  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 2 [json_name = "expr"];</code>
   * @return Whether the expr field is set.
   */
  boolean hasExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 2 [json_name = "expr"];</code>
   * @return The expr.
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNode getExpr();
  /**
   * <code>.chalk.expression.v1.LogicalExprNode expr = 2 [json_name = "expr"];</code>
   */
  ai.chalk.protos.chalk.expression.v1.LogicalExprNodeOrBuilder getExprOrBuilder();
}
