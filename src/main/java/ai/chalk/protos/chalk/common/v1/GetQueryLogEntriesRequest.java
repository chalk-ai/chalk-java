// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/common/v1/query_log.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.common.v1;

/**
 * Protobuf type {@code chalk.common.v1.GetQueryLogEntriesRequest}
 */
@java.lang.Deprecated public final class GetQueryLogEntriesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chalk.common.v1.GetQueryLogEntriesRequest)
    GetQueryLogEntriesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetQueryLogEntriesRequest.newBuilder() to construct.
  private GetQueryLogEntriesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetQueryLogEntriesRequest() {
    pageToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetQueryLogEntriesRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.common.v1.QueryLogProto.internal_static_chalk_common_v1_GetQueryLogEntriesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.common.v1.QueryLogProto.internal_static_chalk_common_v1_GetQueryLogEntriesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.class, ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.Builder.class);
  }

  private int bitField0_;
  public static final int QUERY_TIMESTAMP_LOWER_BOUND_INCLUSIVE_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp queryTimestampLowerBoundInclusive_;
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   * @return Whether the queryTimestampLowerBoundInclusive field is set.
   */
  @java.lang.Override
  public boolean hasQueryTimestampLowerBoundInclusive() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   * @return The queryTimestampLowerBoundInclusive.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getQueryTimestampLowerBoundInclusive() {
    return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
  }
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getQueryTimestampLowerBoundInclusiveOrBuilder() {
    return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
  }

  public static final int QUERY_TIMESTAMP_UPPER_BOUND_EXCLUSIVE_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp queryTimestampUpperBoundExclusive_;
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   * @return Whether the queryTimestampUpperBoundExclusive field is set.
   */
  @java.lang.Override
  public boolean hasQueryTimestampUpperBoundExclusive() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   * @return The queryTimestampUpperBoundExclusive.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getQueryTimestampUpperBoundExclusive() {
    return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
  }
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getQueryTimestampUpperBoundExclusiveOrBuilder() {
    return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
  }

  public static final int FILTERS_FIELD_NUMBER = 3;
  private ai.chalk.protos.chalk.common.v1.QueryLogFilters filters_;
  /**
   * <pre>
   * Any filters for searching the query log. See the QueryLogFilters message above
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
   * @return Whether the filters field is set.
   */
  @java.lang.Override
  public boolean hasFilters() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Any filters for searching the query log. See the QueryLogFilters message above
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
   * @return The filters.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.common.v1.QueryLogFilters getFilters() {
    return filters_ == null ? ai.chalk.protos.chalk.common.v1.QueryLogFilters.getDefaultInstance() : filters_;
  }
  /**
   * <pre>
   * Any filters for searching the query log. See the QueryLogFilters message above
   * </pre>
   *
   * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder getFiltersOrBuilder() {
    return filters_ == null ? ai.chalk.protos.chalk.common.v1.QueryLogFilters.getDefaultInstance() : filters_;
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 4;
  private int pageSize_ = 0;
  /**
   * <pre>
   * The (maximum) page size. If zero, the server gets to choose.
   * </pre>
   *
   * <code>int32 page_size = 4 [json_name = "pageSize"];</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object pageToken_ = "";
  /**
   * <pre>
   * When dealing with paginated responses, the next token can be provided to get the next page of responses
   * The query parameters above must be exactly the same when using a next token
   * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
   * </pre>
   *
   * <code>string page_token = 5 [json_name = "pageToken"];</code>
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * When dealing with paginated responses, the next token can be provided to get the next page of responses
   * The query parameters above must be exactly the same when using a next token
   * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
   * </pre>
   *
   * <code>string page_token = 5 [json_name = "pageToken"];</code>
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getQueryTimestampLowerBoundInclusive());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getQueryTimestampUpperBoundExclusive());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getFilters());
    }
    if (pageSize_ != 0) {
      output.writeInt32(4, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, pageToken_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getQueryTimestampLowerBoundInclusive());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getQueryTimestampUpperBoundExclusive());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFilters());
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, pageToken_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest other = (ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest) obj;

    if (hasQueryTimestampLowerBoundInclusive() != other.hasQueryTimestampLowerBoundInclusive()) return false;
    if (hasQueryTimestampLowerBoundInclusive()) {
      if (!getQueryTimestampLowerBoundInclusive()
          .equals(other.getQueryTimestampLowerBoundInclusive())) return false;
    }
    if (hasQueryTimestampUpperBoundExclusive() != other.hasQueryTimestampUpperBoundExclusive()) return false;
    if (hasQueryTimestampUpperBoundExclusive()) {
      if (!getQueryTimestampUpperBoundExclusive()
          .equals(other.getQueryTimestampUpperBoundExclusive())) return false;
    }
    if (hasFilters() != other.hasFilters()) return false;
    if (hasFilters()) {
      if (!getFilters()
          .equals(other.getFilters())) return false;
    }
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getPageToken()
        .equals(other.getPageToken())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasQueryTimestampLowerBoundInclusive()) {
      hash = (37 * hash) + QUERY_TIMESTAMP_LOWER_BOUND_INCLUSIVE_FIELD_NUMBER;
      hash = (53 * hash) + getQueryTimestampLowerBoundInclusive().hashCode();
    }
    if (hasQueryTimestampUpperBoundExclusive()) {
      hash = (37 * hash) + QUERY_TIMESTAMP_UPPER_BOUND_EXCLUSIVE_FIELD_NUMBER;
      hash = (53 * hash) + getQueryTimestampUpperBoundExclusive().hashCode();
    }
    if (hasFilters()) {
      hash = (37 * hash) + FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getFilters().hashCode();
    }
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.common.v1.GetQueryLogEntriesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.common.v1.GetQueryLogEntriesRequest)
      ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.common.v1.QueryLogProto.internal_static_chalk_common_v1_GetQueryLogEntriesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.common.v1.QueryLogProto.internal_static_chalk_common_v1_GetQueryLogEntriesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.class, ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getQueryTimestampLowerBoundInclusiveFieldBuilder();
        getQueryTimestampUpperBoundExclusiveFieldBuilder();
        getFiltersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      queryTimestampLowerBoundInclusive_ = null;
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        queryTimestampLowerBoundInclusiveBuilder_.dispose();
        queryTimestampLowerBoundInclusiveBuilder_ = null;
      }
      queryTimestampUpperBoundExclusive_ = null;
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        queryTimestampUpperBoundExclusiveBuilder_.dispose();
        queryTimestampUpperBoundExclusiveBuilder_ = null;
      }
      filters_ = null;
      if (filtersBuilder_ != null) {
        filtersBuilder_.dispose();
        filtersBuilder_ = null;
      }
      pageSize_ = 0;
      pageToken_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.common.v1.QueryLogProto.internal_static_chalk_common_v1_GetQueryLogEntriesRequest_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest build() {
      ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest buildPartial() {
      ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest result = new ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.queryTimestampLowerBoundInclusive_ = queryTimestampLowerBoundInclusiveBuilder_ == null
            ? queryTimestampLowerBoundInclusive_
            : queryTimestampLowerBoundInclusiveBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.queryTimestampUpperBoundExclusive_ = queryTimestampUpperBoundExclusiveBuilder_ == null
            ? queryTimestampUpperBoundExclusive_
            : queryTimestampUpperBoundExclusiveBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.filters_ = filtersBuilder_ == null
            ? filters_
            : filtersBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pageSize_ = pageSize_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.pageToken_ = pageToken_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest) {
        return mergeFrom((ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest other) {
      if (other == ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest.getDefaultInstance()) return this;
      if (other.hasQueryTimestampLowerBoundInclusive()) {
        mergeQueryTimestampLowerBoundInclusive(other.getQueryTimestampLowerBoundInclusive());
      }
      if (other.hasQueryTimestampUpperBoundExclusive()) {
        mergeQueryTimestampUpperBoundExclusive(other.getQueryTimestampUpperBoundExclusive());
      }
      if (other.hasFilters()) {
        mergeFilters(other.getFilters());
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getQueryTimestampLowerBoundInclusiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getQueryTimestampUpperBoundExclusiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getFiltersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              pageSize_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              pageToken_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Timestamp queryTimestampLowerBoundInclusive_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> queryTimestampLowerBoundInclusiveBuilder_;
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     * @return Whether the queryTimestampLowerBoundInclusive field is set.
     */
    public boolean hasQueryTimestampLowerBoundInclusive() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     * @return The queryTimestampLowerBoundInclusive.
     */
    public com.google.protobuf.Timestamp getQueryTimestampLowerBoundInclusive() {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
      } else {
        return queryTimestampLowerBoundInclusiveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder setQueryTimestampLowerBoundInclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryTimestampLowerBoundInclusive_ = value;
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder setQueryTimestampLowerBoundInclusive(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        queryTimestampLowerBoundInclusive_ = builderForValue.build();
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder mergeQueryTimestampLowerBoundInclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          queryTimestampLowerBoundInclusive_ != null &&
          queryTimestampLowerBoundInclusive_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getQueryTimestampLowerBoundInclusiveBuilder().mergeFrom(value);
        } else {
          queryTimestampLowerBoundInclusive_ = value;
        }
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.mergeFrom(value);
      }
      if (queryTimestampLowerBoundInclusive_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder clearQueryTimestampLowerBoundInclusive() {
      bitField0_ = (bitField0_ & ~0x00000001);
      queryTimestampLowerBoundInclusive_ = null;
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        queryTimestampLowerBoundInclusiveBuilder_.dispose();
        queryTimestampLowerBoundInclusiveBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getQueryTimestampLowerBoundInclusiveBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getQueryTimestampLowerBoundInclusiveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getQueryTimestampLowerBoundInclusiveOrBuilder() {
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        return queryTimestampLowerBoundInclusiveBuilder_.getMessageOrBuilder();
      } else {
        return queryTimestampLowerBoundInclusive_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
      }
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 1 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getQueryTimestampLowerBoundInclusiveFieldBuilder() {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        queryTimestampLowerBoundInclusiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getQueryTimestampLowerBoundInclusive(),
                getParentForChildren(),
                isClean());
        queryTimestampLowerBoundInclusive_ = null;
      }
      return queryTimestampLowerBoundInclusiveBuilder_;
    }

    private com.google.protobuf.Timestamp queryTimestampUpperBoundExclusive_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> queryTimestampUpperBoundExclusiveBuilder_;
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     * @return Whether the queryTimestampUpperBoundExclusive field is set.
     */
    public boolean hasQueryTimestampUpperBoundExclusive() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     * @return The queryTimestampUpperBoundExclusive.
     */
    public com.google.protobuf.Timestamp getQueryTimestampUpperBoundExclusive() {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
      } else {
        return queryTimestampUpperBoundExclusiveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder setQueryTimestampUpperBoundExclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryTimestampUpperBoundExclusive_ = value;
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder setQueryTimestampUpperBoundExclusive(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        queryTimestampUpperBoundExclusive_ = builderForValue.build();
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder mergeQueryTimestampUpperBoundExclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          queryTimestampUpperBoundExclusive_ != null &&
          queryTimestampUpperBoundExclusive_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getQueryTimestampUpperBoundExclusiveBuilder().mergeFrom(value);
        } else {
          queryTimestampUpperBoundExclusive_ = value;
        }
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.mergeFrom(value);
      }
      if (queryTimestampUpperBoundExclusive_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder clearQueryTimestampUpperBoundExclusive() {
      bitField0_ = (bitField0_ & ~0x00000002);
      queryTimestampUpperBoundExclusive_ = null;
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        queryTimestampUpperBoundExclusiveBuilder_.dispose();
        queryTimestampUpperBoundExclusiveBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getQueryTimestampUpperBoundExclusiveBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getQueryTimestampUpperBoundExclusiveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getQueryTimestampUpperBoundExclusiveOrBuilder() {
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        return queryTimestampUpperBoundExclusiveBuilder_.getMessageOrBuilder();
      } else {
        return queryTimestampUpperBoundExclusive_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
      }
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an "equality" filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 2 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getQueryTimestampUpperBoundExclusiveFieldBuilder() {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        queryTimestampUpperBoundExclusiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getQueryTimestampUpperBoundExclusive(),
                getParentForChildren(),
                isClean());
        queryTimestampUpperBoundExclusive_ = null;
      }
      return queryTimestampUpperBoundExclusiveBuilder_;
    }

    private ai.chalk.protos.chalk.common.v1.QueryLogFilters filters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.common.v1.QueryLogFilters, ai.chalk.protos.chalk.common.v1.QueryLogFilters.Builder, ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder> filtersBuilder_;
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     * @return Whether the filters field is set.
     */
    public boolean hasFilters() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     * @return The filters.
     */
    public ai.chalk.protos.chalk.common.v1.QueryLogFilters getFilters() {
      if (filtersBuilder_ == null) {
        return filters_ == null ? ai.chalk.protos.chalk.common.v1.QueryLogFilters.getDefaultInstance() : filters_;
      } else {
        return filtersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public Builder setFilters(ai.chalk.protos.chalk.common.v1.QueryLogFilters value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filters_ = value;
      } else {
        filtersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public Builder setFilters(
        ai.chalk.protos.chalk.common.v1.QueryLogFilters.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        filters_ = builderForValue.build();
      } else {
        filtersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public Builder mergeFilters(ai.chalk.protos.chalk.common.v1.QueryLogFilters value) {
      if (filtersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          filters_ != null &&
          filters_ != ai.chalk.protos.chalk.common.v1.QueryLogFilters.getDefaultInstance()) {
          getFiltersBuilder().mergeFrom(value);
        } else {
          filters_ = value;
        }
      } else {
        filtersBuilder_.mergeFrom(value);
      }
      if (filters_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public Builder clearFilters() {
      bitField0_ = (bitField0_ & ~0x00000004);
      filters_ = null;
      if (filtersBuilder_ != null) {
        filtersBuilder_.dispose();
        filtersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public ai.chalk.protos.chalk.common.v1.QueryLogFilters.Builder getFiltersBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getFiltersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    public ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder getFiltersOrBuilder() {
      if (filtersBuilder_ != null) {
        return filtersBuilder_.getMessageOrBuilder();
      } else {
        return filters_ == null ?
            ai.chalk.protos.chalk.common.v1.QueryLogFilters.getDefaultInstance() : filters_;
      }
    }
    /**
     * <pre>
     * Any filters for searching the query log. See the QueryLogFilters message above
     * </pre>
     *
     * <code>.chalk.common.v1.QueryLogFilters filters = 3 [json_name = "filters"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.common.v1.QueryLogFilters, ai.chalk.protos.chalk.common.v1.QueryLogFilters.Builder, ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder> 
        getFiltersFieldBuilder() {
      if (filtersBuilder_ == null) {
        filtersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.common.v1.QueryLogFilters, ai.chalk.protos.chalk.common.v1.QueryLogFilters.Builder, ai.chalk.protos.chalk.common.v1.QueryLogFiltersOrBuilder>(
                getFilters(),
                getParentForChildren(),
                isClean());
        filters_ = null;
      }
      return filtersBuilder_;
    }

    private int pageSize_ ;
    /**
     * <pre>
     * The (maximum) page size. If zero, the server gets to choose.
     * </pre>
     *
     * <code>int32 page_size = 4 [json_name = "pageSize"];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * The (maximum) page size. If zero, the server gets to choose.
     * </pre>
     *
     * <code>int32 page_size = 4 [json_name = "pageSize"];</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {

      pageSize_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The (maximum) page size. If zero, the server gets to choose.
     * </pre>
     *
     * <code>int32 page_size = 4 [json_name = "pageSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000008);
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * When dealing with paginated responses, the next token can be provided to get the next page of responses
     * The query parameters above must be exactly the same when using a next token
     * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
     * </pre>
     *
     * <code>string page_token = 5 [json_name = "pageToken"];</code>
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * When dealing with paginated responses, the next token can be provided to get the next page of responses
     * The query parameters above must be exactly the same when using a next token
     * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
     * </pre>
     *
     * <code>string page_token = 5 [json_name = "pageToken"];</code>
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * When dealing with paginated responses, the next token can be provided to get the next page of responses
     * The query parameters above must be exactly the same when using a next token
     * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
     * </pre>
     *
     * <code>string page_token = 5 [json_name = "pageToken"];</code>
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      pageToken_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When dealing with paginated responses, the next token can be provided to get the next page of responses
     * The query parameters above must be exactly the same when using a next token
     * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
     * </pre>
     *
     * <code>string page_token = 5 [json_name = "pageToken"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      pageToken_ = getDefaultInstance().getPageToken();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When dealing with paginated responses, the next token can be provided to get the next page of responses
     * The query parameters above must be exactly the same when using a next token
     * This is opaque to the clients, but in practice, it is an encoding of the GetQueryLogEntriesPageToken
     * </pre>
     *
     * <code>string page_token = 5 [json_name = "pageToken"];</code>
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      pageToken_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:chalk.common.v1.GetQueryLogEntriesRequest)
  }

  // @@protoc_insertion_point(class_scope:chalk.common.v1.GetQueryLogEntriesRequest)
  private static final ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest();
  }

  public static ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetQueryLogEntriesRequest>
      PARSER = new com.google.protobuf.AbstractParser<GetQueryLogEntriesRequest>() {
    @java.lang.Override
    public GetQueryLogEntriesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetQueryLogEntriesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetQueryLogEntriesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.common.v1.GetQueryLogEntriesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

