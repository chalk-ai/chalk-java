// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/arrow/v1/arrow.proto

// Protobuf Java Version: 3.25.3
package ai.chalk.protos.chalk.arrow.v1;

public interface ScalarValueOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.arrow.v1.ScalarValue)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ArrowType null_value = 1 [json_name = "nullValue"];</code>
   * @return Whether the nullValue field is set.
   */
  boolean hasNullValue();
  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ArrowType null_value = 1 [json_name = "nullValue"];</code>
   * @return The nullValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ArrowType getNullValue();
  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ArrowType null_value = 1 [json_name = "nullValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ArrowTypeOrBuilder getNullValueOrBuilder();

  /**
   * <code>bool bool_value = 2 [json_name = "boolValue"];</code>
   * @return Whether the boolValue field is set.
   */
  boolean hasBoolValue();
  /**
   * <code>bool bool_value = 2 [json_name = "boolValue"];</code>
   * @return The boolValue.
   */
  boolean getBoolValue();

  /**
   * <code>double float64_value = 3 [json_name = "float64Value"];</code>
   * @return Whether the float64Value field is set.
   */
  boolean hasFloat64Value();
  /**
   * <code>double float64_value = 3 [json_name = "float64Value"];</code>
   * @return The float64Value.
   */
  double getFloat64Value();

  /**
   * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
   * @return Whether the int64Value field is set.
   */
  boolean hasInt64Value();
  /**
   * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
   * @return The int64Value.
   */
  long getInt64Value();

  /**
   * <code>string large_utf8_value = 5 [json_name = "largeUtf8Value"];</code>
   * @return Whether the largeUtf8Value field is set.
   */
  boolean hasLargeUtf8Value();
  /**
   * <code>string large_utf8_value = 5 [json_name = "largeUtf8Value"];</code>
   * @return The largeUtf8Value.
   */
  java.lang.String getLargeUtf8Value();
  /**
   * <code>string large_utf8_value = 5 [json_name = "largeUtf8Value"];</code>
   * @return The bytes for largeUtf8Value.
   */
  com.google.protobuf.ByteString
      getLargeUtf8ValueBytes();

  /**
   * <code>.chalk.arrow.v1.ScalarTimestampValue timestamp_value = 6 [json_name = "timestampValue"];</code>
   * @return Whether the timestampValue field is set.
   */
  boolean hasTimestampValue();
  /**
   * <code>.chalk.arrow.v1.ScalarTimestampValue timestamp_value = 6 [json_name = "timestampValue"];</code>
   * @return The timestampValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTimestampValue getTimestampValue();
  /**
   * <code>.chalk.arrow.v1.ScalarTimestampValue timestamp_value = 6 [json_name = "timestampValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTimestampValueOrBuilder getTimestampValueOrBuilder();

  /**
   * <code>int64 date_64_value = 7 [json_name = "date64Value"];</code>
   * @return Whether the date64Value field is set.
   */
  boolean hasDate64Value();
  /**
   * <code>int64 date_64_value = 7 [json_name = "date64Value"];</code>
   * @return The date64Value.
   */
  long getDate64Value();

  /**
   * <code>.chalk.arrow.v1.StructValue struct_value = 8 [json_name = "structValue"];</code>
   * @return Whether the structValue field is set.
   */
  boolean hasStructValue();
  /**
   * <code>.chalk.arrow.v1.StructValue struct_value = 8 [json_name = "structValue"];</code>
   * @return The structValue.
   */
  ai.chalk.protos.chalk.arrow.v1.StructValue getStructValue();
  /**
   * <code>.chalk.arrow.v1.StructValue struct_value = 8 [json_name = "structValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.StructValueOrBuilder getStructValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.ScalarListValue large_list_value = 9 [json_name = "largeListValue"];</code>
   * @return Whether the largeListValue field is set.
   */
  boolean hasLargeListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue large_list_value = 9 [json_name = "largeListValue"];</code>
   * @return The largeListValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValue getLargeListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue large_list_value = 9 [json_name = "largeListValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValueOrBuilder getLargeListValueOrBuilder();

  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ScalarTime64Value time64_value = 10 [json_name = "time64Value"];</code>
   * @return Whether the time64Value field is set.
   */
  boolean hasTime64Value();
  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ScalarTime64Value time64_value = 10 [json_name = "time64Value"];</code>
   * @return The time64Value.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTime64Value getTime64Value();
  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.ScalarTime64Value time64_value = 10 [json_name = "time64Value"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTime64ValueOrBuilder getTime64ValueOrBuilder();

  /**
   * <code>int64 duration_second_value = 16 [json_name = "durationSecondValue"];</code>
   * @return Whether the durationSecondValue field is set.
   */
  boolean hasDurationSecondValue();
  /**
   * <code>int64 duration_second_value = 16 [json_name = "durationSecondValue"];</code>
   * @return The durationSecondValue.
   */
  long getDurationSecondValue();

  /**
   * <code>int64 duration_millisecond_value = 17 [json_name = "durationMillisecondValue"];</code>
   * @return Whether the durationMillisecondValue field is set.
   */
  boolean hasDurationMillisecondValue();
  /**
   * <code>int64 duration_millisecond_value = 17 [json_name = "durationMillisecondValue"];</code>
   * @return The durationMillisecondValue.
   */
  long getDurationMillisecondValue();

  /**
   * <code>int64 duration_microsecond_value = 18 [json_name = "durationMicrosecondValue"];</code>
   * @return Whether the durationMicrosecondValue field is set.
   */
  boolean hasDurationMicrosecondValue();
  /**
   * <code>int64 duration_microsecond_value = 18 [json_name = "durationMicrosecondValue"];</code>
   * @return The durationMicrosecondValue.
   */
  long getDurationMicrosecondValue();

  /**
   * <code>int64 duration_nanosecond_value = 19 [json_name = "durationNanosecondValue"];</code>
   * @return Whether the durationNanosecondValue field is set.
   */
  boolean hasDurationNanosecondValue();
  /**
   * <code>int64 duration_nanosecond_value = 19 [json_name = "durationNanosecondValue"];</code>
   * @return The durationNanosecondValue.
   */
  long getDurationNanosecondValue();

  /**
   * <code>string utf8_value = 20 [json_name = "utf8Value"];</code>
   * @return Whether the utf8Value field is set.
   */
  boolean hasUtf8Value();
  /**
   * <code>string utf8_value = 20 [json_name = "utf8Value"];</code>
   * @return The utf8Value.
   */
  java.lang.String getUtf8Value();
  /**
   * <code>string utf8_value = 20 [json_name = "utf8Value"];</code>
   * @return The bytes for utf8Value.
   */
  com.google.protobuf.ByteString
      getUtf8ValueBytes();

  /**
   * <code>int32 int8_value = 21 [json_name = "int8Value"];</code>
   * @return Whether the int8Value field is set.
   */
  boolean hasInt8Value();
  /**
   * <code>int32 int8_value = 21 [json_name = "int8Value"];</code>
   * @return The int8Value.
   */
  int getInt8Value();

  /**
   * <code>int32 int16_value = 22 [json_name = "int16Value"];</code>
   * @return Whether the int16Value field is set.
   */
  boolean hasInt16Value();
  /**
   * <code>int32 int16_value = 22 [json_name = "int16Value"];</code>
   * @return The int16Value.
   */
  int getInt16Value();

  /**
   * <code>int32 int32_value = 23 [json_name = "int32Value"];</code>
   * @return Whether the int32Value field is set.
   */
  boolean hasInt32Value();
  /**
   * <code>int32 int32_value = 23 [json_name = "int32Value"];</code>
   * @return The int32Value.
   */
  int getInt32Value();

  /**
   * <code>uint32 uint8_value = 24 [json_name = "uint8Value"];</code>
   * @return Whether the uint8Value field is set.
   */
  boolean hasUint8Value();
  /**
   * <code>uint32 uint8_value = 24 [json_name = "uint8Value"];</code>
   * @return The uint8Value.
   */
  int getUint8Value();

  /**
   * <code>uint32 uint16_value = 25 [json_name = "uint16Value"];</code>
   * @return Whether the uint16Value field is set.
   */
  boolean hasUint16Value();
  /**
   * <code>uint32 uint16_value = 25 [json_name = "uint16Value"];</code>
   * @return The uint16Value.
   */
  int getUint16Value();

  /**
   * <code>uint32 uint32_value = 26 [json_name = "uint32Value"];</code>
   * @return Whether the uint32Value field is set.
   */
  boolean hasUint32Value();
  /**
   * <code>uint32 uint32_value = 26 [json_name = "uint32Value"];</code>
   * @return The uint32Value.
   */
  int getUint32Value();

  /**
   * <code>uint64 uint64_value = 27 [json_name = "uint64Value"];</code>
   * @return Whether the uint64Value field is set.
   */
  boolean hasUint64Value();
  /**
   * <code>uint64 uint64_value = 27 [json_name = "uint64Value"];</code>
   * @return The uint64Value.
   */
  long getUint64Value();

  /**
   * <code>float float16_value = 28 [json_name = "float16Value"];</code>
   * @return Whether the float16Value field is set.
   */
  boolean hasFloat16Value();
  /**
   * <code>float float16_value = 28 [json_name = "float16Value"];</code>
   * @return The float16Value.
   */
  float getFloat16Value();

  /**
   * <code>float float32_value = 29 [json_name = "float32Value"];</code>
   * @return Whether the float32Value field is set.
   */
  boolean hasFloat32Value();
  /**
   * <code>float float32_value = 29 [json_name = "float32Value"];</code>
   * @return The float32Value.
   */
  float getFloat32Value();

  /**
   * <code>int32 date_32_value = 30 [json_name = "date32Value"];</code>
   * @return Whether the date32Value field is set.
   */
  boolean hasDate32Value();
  /**
   * <code>int32 date_32_value = 30 [json_name = "date32Value"];</code>
   * @return The date32Value.
   */
  int getDate32Value();

  /**
   * <code>.chalk.arrow.v1.ScalarTime32Value time32_value = 31 [json_name = "time32Value"];</code>
   * @return Whether the time32Value field is set.
   */
  boolean hasTime32Value();
  /**
   * <code>.chalk.arrow.v1.ScalarTime32Value time32_value = 31 [json_name = "time32Value"];</code>
   * @return The time32Value.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTime32Value getTime32Value();
  /**
   * <code>.chalk.arrow.v1.ScalarTime32Value time32_value = 31 [json_name = "time32Value"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarTime32ValueOrBuilder getTime32ValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.ScalarListValue list_value = 32 [json_name = "listValue"];</code>
   * @return Whether the listValue field is set.
   */
  boolean hasListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue list_value = 32 [json_name = "listValue"];</code>
   * @return The listValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValue getListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue list_value = 32 [json_name = "listValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValueOrBuilder getListValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.ScalarListValue fixed_size_list_value = 33 [json_name = "fixedSizeListValue"];</code>
   * @return Whether the fixedSizeListValue field is set.
   */
  boolean hasFixedSizeListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue fixed_size_list_value = 33 [json_name = "fixedSizeListValue"];</code>
   * @return The fixedSizeListValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValue getFixedSizeListValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue fixed_size_list_value = 33 [json_name = "fixedSizeListValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValueOrBuilder getFixedSizeListValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.ScalarListValue map_value = 34 [json_name = "mapValue"];</code>
   * @return Whether the mapValue field is set.
   */
  boolean hasMapValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue map_value = 34 [json_name = "mapValue"];</code>
   * @return The mapValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValue getMapValue();
  /**
   * <code>.chalk.arrow.v1.ScalarListValue map_value = 34 [json_name = "mapValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarListValueOrBuilder getMapValueOrBuilder();

  /**
   * <code>bytes binary_value = 35 [json_name = "binaryValue"];</code>
   * @return Whether the binaryValue field is set.
   */
  boolean hasBinaryValue();
  /**
   * <code>bytes binary_value = 35 [json_name = "binaryValue"];</code>
   * @return The binaryValue.
   */
  com.google.protobuf.ByteString getBinaryValue();

  /**
   * <code>bytes large_binary_value = 36 [json_name = "largeBinaryValue"];</code>
   * @return Whether the largeBinaryValue field is set.
   */
  boolean hasLargeBinaryValue();
  /**
   * <code>bytes large_binary_value = 36 [json_name = "largeBinaryValue"];</code>
   * @return The largeBinaryValue.
   */
  com.google.protobuf.ByteString getLargeBinaryValue();

  /**
   * <code>.chalk.arrow.v1.ScalarFixedSizeBinary fixed_size_binary_value = 37 [json_name = "fixedSizeBinaryValue"];</code>
   * @return Whether the fixedSizeBinaryValue field is set.
   */
  boolean hasFixedSizeBinaryValue();
  /**
   * <code>.chalk.arrow.v1.ScalarFixedSizeBinary fixed_size_binary_value = 37 [json_name = "fixedSizeBinaryValue"];</code>
   * @return The fixedSizeBinaryValue.
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarFixedSizeBinary getFixedSizeBinaryValue();
  /**
   * <code>.chalk.arrow.v1.ScalarFixedSizeBinary fixed_size_binary_value = 37 [json_name = "fixedSizeBinaryValue"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ScalarFixedSizeBinaryOrBuilder getFixedSizeBinaryValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal128_value = 38 [json_name = "decimal128Value"];</code>
   * @return Whether the decimal128Value field is set.
   */
  boolean hasDecimal128Value();
  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal128_value = 38 [json_name = "decimal128Value"];</code>
   * @return The decimal128Value.
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalValue getDecimal128Value();
  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal128_value = 38 [json_name = "decimal128Value"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalValueOrBuilder getDecimal128ValueOrBuilder();

  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal256_value = 39 [json_name = "decimal256Value"];</code>
   * @return Whether the decimal256Value field is set.
   */
  boolean hasDecimal256Value();
  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal256_value = 39 [json_name = "decimal256Value"];</code>
   * @return The decimal256Value.
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalValue getDecimal256Value();
  /**
   * <code>.chalk.arrow.v1.DecimalValue decimal256_value = 39 [json_name = "decimal256Value"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalValueOrBuilder getDecimal256ValueOrBuilder();

  ai.chalk.protos.chalk.arrow.v1.ScalarValue.ValueCase getValueCase();
}
