// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/arrow/v1/arrow.proto

// Protobuf Java Version: 3.25.3
package ai.chalk.protos.chalk.arrow.v1;

public interface ArrowTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.arrow.v1.ArrowType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.EmptyMessage none = 1 [json_name = "none"];</code>
   * @return Whether the none field is set.
   */
  boolean hasNone();
  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.EmptyMessage none = 1 [json_name = "none"];</code>
   * @return The none.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getNone();
  /**
   * <pre>
   * Group popular types at the top
   * to save space in the serialized
   * message.
   * </pre>
   *
   * <code>.chalk.arrow.v1.EmptyMessage none = 1 [json_name = "none"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getNoneOrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage bool = 2 [json_name = "bool"];</code>
   * @return Whether the bool field is set.
   */
  boolean hasBool();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage bool = 2 [json_name = "bool"];</code>
   * @return The bool.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getBool();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage bool = 2 [json_name = "bool"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getBoolOrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage float64 = 3 [json_name = "float64"];</code>
   * @return Whether the float64 field is set.
   */
  boolean hasFloat64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float64 = 3 [json_name = "float64"];</code>
   * @return The float64.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getFloat64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float64 = 3 [json_name = "float64"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getFloat64OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage int64 = 4 [json_name = "int64"];</code>
   * @return Whether the int64 field is set.
   */
  boolean hasInt64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int64 = 4 [json_name = "int64"];</code>
   * @return The int64.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getInt64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int64 = 4 [json_name = "int64"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getInt64OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_utf8 = 5 [json_name = "largeUtf8"];</code>
   * @return Whether the largeUtf8 field is set.
   */
  boolean hasLargeUtf8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_utf8 = 5 [json_name = "largeUtf8"];</code>
   * @return The largeUtf8.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getLargeUtf8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_utf8 = 5 [json_name = "largeUtf8"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getLargeUtf8OrBuilder();

  /**
   * <code>.chalk.arrow.v1.Timestamp timestamp = 6 [json_name = "timestamp"];</code>
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <code>.chalk.arrow.v1.Timestamp timestamp = 6 [json_name = "timestamp"];</code>
   * @return The timestamp.
   */
  ai.chalk.protos.chalk.arrow.v1.Timestamp getTimestamp();
  /**
   * <code>.chalk.arrow.v1.Timestamp timestamp = 6 [json_name = "timestamp"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.TimestampOrBuilder getTimestampOrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage date64 = 7 [json_name = "date64"];</code>
   * @return Whether the date64 field is set.
   */
  boolean hasDate64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage date64 = 7 [json_name = "date64"];</code>
   * @return The date64.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getDate64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage date64 = 7 [json_name = "date64"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getDate64OrBuilder();

  /**
   * <code>.chalk.arrow.v1.Struct struct = 8 [json_name = "struct"];</code>
   * @return Whether the struct field is set.
   */
  boolean hasStruct();
  /**
   * <code>.chalk.arrow.v1.Struct struct = 8 [json_name = "struct"];</code>
   * @return The struct.
   */
  ai.chalk.protos.chalk.arrow.v1.Struct getStruct();
  /**
   * <code>.chalk.arrow.v1.Struct struct = 8 [json_name = "struct"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.StructOrBuilder getStructOrBuilder();

  /**
   * <code>.chalk.arrow.v1.List large_list = 9 [json_name = "largeList"];</code>
   * @return Whether the largeList field is set.
   */
  boolean hasLargeList();
  /**
   * <code>.chalk.arrow.v1.List large_list = 9 [json_name = "largeList"];</code>
   * @return The largeList.
   */
  ai.chalk.protos.chalk.arrow.v1.List getLargeList();
  /**
   * <code>.chalk.arrow.v1.List large_list = 9 [json_name = "largeList"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ListOrBuilder getLargeListOrBuilder();

  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.TimeUnit time64 = 10 [json_name = "time64"];</code>
   * @return Whether the time64 field is set.
   */
  boolean hasTime64();
  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.TimeUnit time64 = 10 [json_name = "time64"];</code>
   * @return The enum numeric value on the wire for time64.
   */
  int getTime64Value();
  /**
   * <pre>
   * Leave placeholders for 11-15 in case
   * we get the most popular types wrong.
   * </pre>
   *
   * <code>.chalk.arrow.v1.TimeUnit time64 = 10 [json_name = "time64"];</code>
   * @return The time64.
   */
  ai.chalk.protos.chalk.arrow.v1.TimeUnit getTime64();

  /**
   * <code>.chalk.arrow.v1.TimeUnit duration = 16 [json_name = "duration"];</code>
   * @return Whether the duration field is set.
   */
  boolean hasDuration();
  /**
   * <code>.chalk.arrow.v1.TimeUnit duration = 16 [json_name = "duration"];</code>
   * @return The enum numeric value on the wire for duration.
   */
  int getDurationValue();
  /**
   * <code>.chalk.arrow.v1.TimeUnit duration = 16 [json_name = "duration"];</code>
   * @return The duration.
   */
  ai.chalk.protos.chalk.arrow.v1.TimeUnit getDuration();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage utf8 = 17 [json_name = "utf8"];</code>
   * @return Whether the utf8 field is set.
   */
  boolean hasUtf8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage utf8 = 17 [json_name = "utf8"];</code>
   * @return The utf8.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getUtf8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage utf8 = 17 [json_name = "utf8"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getUtf8OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage int8 = 18 [json_name = "int8"];</code>
   * @return Whether the int8 field is set.
   */
  boolean hasInt8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int8 = 18 [json_name = "int8"];</code>
   * @return The int8.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getInt8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int8 = 18 [json_name = "int8"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getInt8OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage int16 = 19 [json_name = "int16"];</code>
   * @return Whether the int16 field is set.
   */
  boolean hasInt16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int16 = 19 [json_name = "int16"];</code>
   * @return The int16.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getInt16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int16 = 19 [json_name = "int16"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getInt16OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage int32 = 20 [json_name = "int32"];</code>
   * @return Whether the int32 field is set.
   */
  boolean hasInt32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int32 = 20 [json_name = "int32"];</code>
   * @return The int32.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getInt32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage int32 = 20 [json_name = "int32"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getInt32OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint8 = 21 [json_name = "uint8"];</code>
   * @return Whether the uint8 field is set.
   */
  boolean hasUint8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint8 = 21 [json_name = "uint8"];</code>
   * @return The uint8.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getUint8();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint8 = 21 [json_name = "uint8"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getUint8OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint16 = 22 [json_name = "uint16"];</code>
   * @return Whether the uint16 field is set.
   */
  boolean hasUint16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint16 = 22 [json_name = "uint16"];</code>
   * @return The uint16.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getUint16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint16 = 22 [json_name = "uint16"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getUint16OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint32 = 23 [json_name = "uint32"];</code>
   * @return Whether the uint32 field is set.
   */
  boolean hasUint32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint32 = 23 [json_name = "uint32"];</code>
   * @return The uint32.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getUint32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint32 = 23 [json_name = "uint32"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getUint32OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint64 = 24 [json_name = "uint64"];</code>
   * @return Whether the uint64 field is set.
   */
  boolean hasUint64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint64 = 24 [json_name = "uint64"];</code>
   * @return The uint64.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getUint64();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage uint64 = 24 [json_name = "uint64"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getUint64OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage float16 = 25 [json_name = "float16"];</code>
   * @return Whether the float16 field is set.
   */
  boolean hasFloat16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float16 = 25 [json_name = "float16"];</code>
   * @return The float16.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getFloat16();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float16 = 25 [json_name = "float16"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getFloat16OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage float32 = 26 [json_name = "float32"];</code>
   * @return Whether the float32 field is set.
   */
  boolean hasFloat32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float32 = 26 [json_name = "float32"];</code>
   * @return The float32.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getFloat32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage float32 = 26 [json_name = "float32"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getFloat32OrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage date32 = 27 [json_name = "date32"];</code>
   * @return Whether the date32 field is set.
   */
  boolean hasDate32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage date32 = 27 [json_name = "date32"];</code>
   * @return The date32.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getDate32();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage date32 = 27 [json_name = "date32"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getDate32OrBuilder();

  /**
   * <code>.chalk.arrow.v1.TimeUnit time32 = 28 [json_name = "time32"];</code>
   * @return Whether the time32 field is set.
   */
  boolean hasTime32();
  /**
   * <code>.chalk.arrow.v1.TimeUnit time32 = 28 [json_name = "time32"];</code>
   * @return The enum numeric value on the wire for time32.
   */
  int getTime32Value();
  /**
   * <code>.chalk.arrow.v1.TimeUnit time32 = 28 [json_name = "time32"];</code>
   * @return The time32.
   */
  ai.chalk.protos.chalk.arrow.v1.TimeUnit getTime32();

  /**
   * <code>.chalk.arrow.v1.List list = 29 [json_name = "list"];</code>
   * @return Whether the list field is set.
   */
  boolean hasList();
  /**
   * <code>.chalk.arrow.v1.List list = 29 [json_name = "list"];</code>
   * @return The list.
   */
  ai.chalk.protos.chalk.arrow.v1.List getList();
  /**
   * <code>.chalk.arrow.v1.List list = 29 [json_name = "list"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.ListOrBuilder getListOrBuilder();

  /**
   * <code>.chalk.arrow.v1.FixedSizeList fixed_size_list = 30 [json_name = "fixedSizeList"];</code>
   * @return Whether the fixedSizeList field is set.
   */
  boolean hasFixedSizeList();
  /**
   * <code>.chalk.arrow.v1.FixedSizeList fixed_size_list = 30 [json_name = "fixedSizeList"];</code>
   * @return The fixedSizeList.
   */
  ai.chalk.protos.chalk.arrow.v1.FixedSizeList getFixedSizeList();
  /**
   * <code>.chalk.arrow.v1.FixedSizeList fixed_size_list = 30 [json_name = "fixedSizeList"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.FixedSizeListOrBuilder getFixedSizeListOrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage binary = 31 [json_name = "binary"];</code>
   * @return Whether the binary field is set.
   */
  boolean hasBinary();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage binary = 31 [json_name = "binary"];</code>
   * @return The binary.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getBinary();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage binary = 31 [json_name = "binary"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getBinaryOrBuilder();

  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_binary = 32 [json_name = "largeBinary"];</code>
   * @return Whether the largeBinary field is set.
   */
  boolean hasLargeBinary();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_binary = 32 [json_name = "largeBinary"];</code>
   * @return The largeBinary.
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessage getLargeBinary();
  /**
   * <code>.chalk.arrow.v1.EmptyMessage large_binary = 32 [json_name = "largeBinary"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.EmptyMessageOrBuilder getLargeBinaryOrBuilder();

  /**
   * <code>int32 fixed_size_binary = 33 [json_name = "fixedSizeBinary"];</code>
   * @return Whether the fixedSizeBinary field is set.
   */
  boolean hasFixedSizeBinary();
  /**
   * <code>int32 fixed_size_binary = 33 [json_name = "fixedSizeBinary"];</code>
   * @return The fixedSizeBinary.
   */
  int getFixedSizeBinary();

  /**
   * <code>.chalk.arrow.v1.Decimal decimal_128 = 34 [json_name = "decimal128"];</code>
   * @return Whether the decimal128 field is set.
   */
  boolean hasDecimal128();
  /**
   * <code>.chalk.arrow.v1.Decimal decimal_128 = 34 [json_name = "decimal128"];</code>
   * @return The decimal128.
   */
  ai.chalk.protos.chalk.arrow.v1.Decimal getDecimal128();
  /**
   * <code>.chalk.arrow.v1.Decimal decimal_128 = 34 [json_name = "decimal128"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalOrBuilder getDecimal128OrBuilder();

  /**
   * <code>.chalk.arrow.v1.Decimal decimal_256 = 35 [json_name = "decimal256"];</code>
   * @return Whether the decimal256 field is set.
   */
  boolean hasDecimal256();
  /**
   * <code>.chalk.arrow.v1.Decimal decimal_256 = 35 [json_name = "decimal256"];</code>
   * @return The decimal256.
   */
  ai.chalk.protos.chalk.arrow.v1.Decimal getDecimal256();
  /**
   * <code>.chalk.arrow.v1.Decimal decimal_256 = 35 [json_name = "decimal256"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.DecimalOrBuilder getDecimal256OrBuilder();

  /**
   * <code>.chalk.arrow.v1.Map map = 36 [json_name = "map"];</code>
   * @return Whether the map field is set.
   */
  boolean hasMap();
  /**
   * <code>.chalk.arrow.v1.Map map = 36 [json_name = "map"];</code>
   * @return The map.
   */
  ai.chalk.protos.chalk.arrow.v1.Map getMap();
  /**
   * <code>.chalk.arrow.v1.Map map = 36 [json_name = "map"];</code>
   */
  ai.chalk.protos.chalk.arrow.v1.MapOrBuilder getMapOrBuilder();

  ai.chalk.protos.chalk.arrow.v1.ArrowType.ArrowTypeEnumCase getArrowTypeEnumCase();
}
