// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/server/v1/pod_request.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.server.v1;

public interface GetPodRequestChartsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.server.v1.GetPodRequestChartsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Timestamp start_timestamp_inclusive = 1 [json_name = "startTimestampInclusive"];</code>
   * @return Whether the startTimestampInclusive field is set.
   */
  boolean hasStartTimestampInclusive();
  /**
   * <code>.google.protobuf.Timestamp start_timestamp_inclusive = 1 [json_name = "startTimestampInclusive"];</code>
   * @return The startTimestampInclusive.
   */
  com.google.protobuf.Timestamp getStartTimestampInclusive();
  /**
   * <code>.google.protobuf.Timestamp start_timestamp_inclusive = 1 [json_name = "startTimestampInclusive"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getStartTimestampInclusiveOrBuilder();

  /**
   * <pre>
   * If not provided, will assume current time is the ending time
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_timestamp_exclusive = 2 [json_name = "endTimestampExclusive"];</code>
   * @return Whether the endTimestampExclusive field is set.
   */
  boolean hasEndTimestampExclusive();
  /**
   * <pre>
   * If not provided, will assume current time is the ending time
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_timestamp_exclusive = 2 [json_name = "endTimestampExclusive"];</code>
   * @return The endTimestampExclusive.
   */
  com.google.protobuf.Timestamp getEndTimestampExclusive();
  /**
   * <pre>
   * If not provided, will assume current time is the ending time
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_timestamp_exclusive = 2 [json_name = "endTimestampExclusive"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getEndTimestampExclusiveOrBuilder();

  /**
   * <pre>
   * The bucket width to use. Minimum 1 hour in current implementation.
   * </pre>
   *
   * <code>.google.protobuf.Duration window_period = 3 [json_name = "windowPeriod"];</code>
   * @return Whether the windowPeriod field is set.
   */
  boolean hasWindowPeriod();
  /**
   * <pre>
   * The bucket width to use. Minimum 1 hour in current implementation.
   * </pre>
   *
   * <code>.google.protobuf.Duration window_period = 3 [json_name = "windowPeriod"];</code>
   * @return The windowPeriod.
   */
  com.google.protobuf.Duration getWindowPeriod();
  /**
   * <pre>
   * The bucket width to use. Minimum 1 hour in current implementation.
   * </pre>
   *
   * <code>.google.protobuf.Duration window_period = 3 [json_name = "windowPeriod"];</code>
   */
  com.google.protobuf.DurationOrBuilder getWindowPeriodOrBuilder();

  /**
   * <pre>
   * If set, return one series per group member (one series per environment, for example)
   * </pre>
   *
   * <code>optional .chalk.server.v1.PodRequestGrouping grouping = 4 [json_name = "grouping"];</code>
   * @return Whether the grouping field is set.
   */
  boolean hasGrouping();
  /**
   * <pre>
   * If set, return one series per group member (one series per environment, for example)
   * </pre>
   *
   * <code>optional .chalk.server.v1.PodRequestGrouping grouping = 4 [json_name = "grouping"];</code>
   * @return The enum numeric value on the wire for grouping.
   */
  int getGroupingValue();
  /**
   * <pre>
   * If set, return one series per group member (one series per environment, for example)
   * </pre>
   *
   * <code>optional .chalk.server.v1.PodRequestGrouping grouping = 4 [json_name = "grouping"];</code>
   * @return The grouping.
   */
  ai.chalk.protos.chalk.server.v1.PodRequestGrouping getGrouping();

  /**
   * <pre>
   * The types of resources to fetch. If empty, fetches all types of resources
   * </pre>
   *
   * <code>repeated .chalk.server.v1.PodRequestResourceType resource_types = 5 [json_name = "resourceTypes"];</code>
   * @return A list containing the resourceTypes.
   */
  java.util.List<ai.chalk.protos.chalk.server.v1.PodRequestResourceType> getResourceTypesList();
  /**
   * <pre>
   * The types of resources to fetch. If empty, fetches all types of resources
   * </pre>
   *
   * <code>repeated .chalk.server.v1.PodRequestResourceType resource_types = 5 [json_name = "resourceTypes"];</code>
   * @return The count of resourceTypes.
   */
  int getResourceTypesCount();
  /**
   * <pre>
   * The types of resources to fetch. If empty, fetches all types of resources
   * </pre>
   *
   * <code>repeated .chalk.server.v1.PodRequestResourceType resource_types = 5 [json_name = "resourceTypes"];</code>
   * @param index The index of the element to return.
   * @return The resourceTypes at the given index.
   */
  ai.chalk.protos.chalk.server.v1.PodRequestResourceType getResourceTypes(int index);
  /**
   * <pre>
   * The types of resources to fetch. If empty, fetches all types of resources
   * </pre>
   *
   * <code>repeated .chalk.server.v1.PodRequestResourceType resource_types = 5 [json_name = "resourceTypes"];</code>
   * @return A list containing the enum numeric values on the wire for resourceTypes.
   */
  java.util.List<java.lang.Integer>
  getResourceTypesValueList();
  /**
   * <pre>
   * The types of resources to fetch. If empty, fetches all types of resources
   * </pre>
   *
   * <code>repeated .chalk.server.v1.PodRequestResourceType resource_types = 5 [json_name = "resourceTypes"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of resourceTypes at the given index.
   */
  int getResourceTypesValue(int index);
}
