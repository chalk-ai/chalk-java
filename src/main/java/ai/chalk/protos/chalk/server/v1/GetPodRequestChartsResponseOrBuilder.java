// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/server/v1/pod_request.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.server.v1;

public interface GetPodRequestChartsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.server.v1.GetPodRequestChartsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Return one chart per resource type, as it does not make sense to graph different resource types on the
   * same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
   * </pre>
   *
   * <code>repeated .chalk.chart.v1.DenseTimeSeriesChart charts = 1 [json_name = "charts"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.chart.v1.DenseTimeSeriesChart> 
      getChartsList();
  /**
   * <pre>
   * Return one chart per resource type, as it does not make sense to graph different resource types on the
   * same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
   * </pre>
   *
   * <code>repeated .chalk.chart.v1.DenseTimeSeriesChart charts = 1 [json_name = "charts"];</code>
   */
  ai.chalk.protos.chalk.chart.v1.DenseTimeSeriesChart getCharts(int index);
  /**
   * <pre>
   * Return one chart per resource type, as it does not make sense to graph different resource types on the
   * same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
   * </pre>
   *
   * <code>repeated .chalk.chart.v1.DenseTimeSeriesChart charts = 1 [json_name = "charts"];</code>
   */
  int getChartsCount();
  /**
   * <pre>
   * Return one chart per resource type, as it does not make sense to graph different resource types on the
   * same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
   * </pre>
   *
   * <code>repeated .chalk.chart.v1.DenseTimeSeriesChart charts = 1 [json_name = "charts"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.chart.v1.DenseTimeSeriesChartOrBuilder> 
      getChartsOrBuilderList();
  /**
   * <pre>
   * Return one chart per resource type, as it does not make sense to graph different resource types on the
   * same chart (even though our graph libraries do allow this, they have different units and orders of magnitude)
   * </pre>
   *
   * <code>repeated .chalk.chart.v1.DenseTimeSeriesChart charts = 1 [json_name = "charts"];</code>
   */
  ai.chalk.protos.chalk.chart.v1.DenseTimeSeriesChartOrBuilder getChartsOrBuilder(
      int index);
}
