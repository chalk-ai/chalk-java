// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/server/v1/graph.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.server.v1;

public interface UpdateGraphRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.server.v1.UpdateGraphRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string deployment_id = 1 [json_name = "deploymentId"];</code>
   * @return The deploymentId.
   */
  java.lang.String getDeploymentId();
  /**
   * <code>string deployment_id = 1 [json_name = "deploymentId"];</code>
   * @return The bytes for deploymentId.
   */
  com.google.protobuf.ByteString
      getDeploymentIdBytes();

  /**
   * <pre>
   * Use Export instead, which includes a graph + additional metadata
   * </pre>
   *
   * <code>.chalk.graph.v1.Graph graph = 2 [json_name = "graph", deprecated = true];</code>
   * @deprecated chalk.server.v1.UpdateGraphRequest.graph is deprecated.
   *     See chalk/server/v1/graph.proto;l=62
   * @return Whether the graph field is set.
   */
  @java.lang.Deprecated boolean hasGraph();
  /**
   * <pre>
   * Use Export instead, which includes a graph + additional metadata
   * </pre>
   *
   * <code>.chalk.graph.v1.Graph graph = 2 [json_name = "graph", deprecated = true];</code>
   * @deprecated chalk.server.v1.UpdateGraphRequest.graph is deprecated.
   *     See chalk/server/v1/graph.proto;l=62
   * @return The graph.
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.Graph getGraph();
  /**
   * <pre>
   * Use Export instead, which includes a graph + additional metadata
   * </pre>
   *
   * <code>.chalk.graph.v1.Graph graph = 2 [json_name = "graph", deprecated = true];</code>
   */
  @java.lang.Deprecated ai.chalk.protos.chalk.graph.v1.GraphOrBuilder getGraphOrBuilder();

  /**
   * <code>string chalkpy_version = 3 [json_name = "chalkpyVersion"];</code>
   * @return The chalkpyVersion.
   */
  java.lang.String getChalkpyVersion();
  /**
   * <code>string chalkpy_version = 3 [json_name = "chalkpyVersion"];</code>
   * @return The bytes for chalkpyVersion.
   */
  com.google.protobuf.ByteString
      getChalkpyVersionBytes();

  /**
   * <code>optional string tag = 4 [json_name = "tag"];</code>
   * @return Whether the tag field is set.
   */
  boolean hasTag();
  /**
   * <code>optional string tag = 4 [json_name = "tag"];</code>
   * @return The tag.
   */
  java.lang.String getTag();
  /**
   * <code>optional string tag = 4 [json_name = "tag"];</code>
   * @return The bytes for tag.
   */
  com.google.protobuf.ByteString
      getTagBytes();

  /**
   * <code>.chalk.artifacts.v1.Export export = 5 [json_name = "export"];</code>
   * @return Whether the export field is set.
   */
  boolean hasExport();
  /**
   * <code>.chalk.artifacts.v1.Export export = 5 [json_name = "export"];</code>
   * @return The export.
   */
  ai.chalk.protos.chalk.artifacts.v1.Export getExport();
  /**
   * <code>.chalk.artifacts.v1.Export export = 5 [json_name = "export"];</code>
   */
  ai.chalk.protos.chalk.artifacts.v1.ExportOrBuilder getExportOrBuilder();
}
