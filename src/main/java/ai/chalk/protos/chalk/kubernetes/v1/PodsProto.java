// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/kubernetes/v1/pods.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.kubernetes.v1;

public final class PodsProto {
  private PodsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Volume_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_Volume_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ClaimSource_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ClaimSource_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodResourceClaim_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodResourceClaim_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_NodeSelectorEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_NodeSelectorEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateRunning_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateRunning_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateTerminated_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateTerminated_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_EnvVar_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_EnvVar_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Container_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_Container_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateWaiting_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateWaiting_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStatus_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStatus_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Quantity_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_Quantity_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_LimitsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_LimitsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_RequestsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_RequestsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodCondition_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodCondition_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_HostIP_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_HostIP_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodStatus_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodStatus_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_LabelsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_chalk_kubernetes_v1_KubernetesPodData_AnnotationsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_chalk_kubernetes_v1_KubernetesPodData_AnnotationsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036chalk/kubernetes/v1/pods.proto\022\023chalk." +
      "kubernetes.v1\"\2025\n\021KubernetesPodData\022\022\n\004t" +
      "eam\030\001 \001(\tR\004team\022\020\n\003app\030\002 \001(\tR\003app\022\034\n\tcom" +
      "ponent\030\003 \001(\tR\tcomponent\022\'\n\017datadog_servi" +
      "ce\030\004 \001(\tR\016datadogService\022\'\n\017datadog_vers" +
      "ion\030\005 \001(\tR\016datadogVersion\022*\n\021pod_templat" +
      "e_hash\030\006 \001(\tR\017podTemplateHash\022H\n\006status\030" +
      "\007 \001(\01320.chalk.kubernetes.v1.KubernetesPo" +
      "dData.PodStatusR\006status\022B\n\004spec\030\010 \001(\0132.." +
      "chalk.kubernetes.v1.KubernetesPodData.Po" +
      "dSpecR\004spec\022-\n\022creation_timestamp\030\022 \001(\003R" +
      "\021creationTimestamp\022-\n\022deletion_timestamp" +
      "\030\023 \001(\003R\021deletionTimestamp\022-\n\022observed_ti" +
      "mestamp\030\024 \001(\003R\021observedTimestamp\022J\n\006labe" +
      "ls\030\025 \003(\01322.chalk.kubernetes.v1.Kubernete" +
      "sPodData.LabelsEntryR\006labels\022Y\n\013annotati" +
      "ons\030\026 \003(\01327.chalk.kubernetes.v1.Kubernet" +
      "esPodData.AnnotationsEntryR\013annotations\022" +
      "\030\n\007cluster\030\027 \001(\tR\007cluster\022\020\n\003uid\030\030 \001(\tR\003" +
      "uid\022\022\n\004name\030\031 \001(\tR\004name\022\034\n\tnamespace\030\032 \001" +
      "(\tR\tnamespace\032\034\n\006Volume\022\022\n\004name\030\001 \001(\tR\004n" +
      "ame\032\301\001\n\013ClaimSource\0223\n\023resource_claim_na" +
      "me\030\001 \001(\tH\000R\021resourceClaimName\210\001\001\022D\n\034reso" +
      "urce_claim_template_name\030\002 \001(\tH\001R\031resour" +
      "ceClaimTemplateName\210\001\001B\026\n\024_resource_clai" +
      "m_nameB\037\n\035_resource_claim_template_name\032" +
      "\202\001\n\020PodResourceClaim\022\022\n\004name\030\001 \001(\tR\004name" +
      "\022O\n\006source\030\002 \001(\01322.chalk.kubernetes.v1.K" +
      "ubernetesPodData.ClaimSourceH\000R\006source\210\001" +
      "\001B\t\n\007_source\032\366\r\n\007PodSpec\022G\n\007volumes\030\001 \003(" +
      "\0132-.chalk.kubernetes.v1.KubernetesPodDat" +
      "a.VolumeR\007volumes\022Y\n\017init_containers\030\024 \003" +
      "(\01320.chalk.kubernetes.v1.KubernetesPodDa" +
      "ta.ContainerR\016initContainers\022P\n\ncontaine" +
      "rs\030\002 \003(\01320.chalk.kubernetes.v1.Kubernete" +
      "sPodData.ContainerR\ncontainers\022*\n\016restar" +
      "t_policy\030\003 \001(\tH\000R\rrestartPolicy\210\001\001\022L\n te" +
      "rmination_grace_period_seconds\030\004 \001(\003H\001R\035" +
      "terminationGracePeriodSeconds\210\001\001\022;\n\027acti" +
      "ve_deadline_seconds\030\005 \001(\003H\002R\025activeDeadl" +
      "ineSeconds\210\001\001\022\"\n\ndns_policy\030\006 \001(\tH\003R\tdns" +
      "Policy\210\001\001\022e\n\rnode_selector\030\007 \003(\0132@.chalk" +
      ".kubernetes.v1.KubernetesPodData.PodSpec" +
      ".NodeSelectorEntryR\014nodeSelector\0225\n\024serv" +
      "ice_account_name\030\010 \001(\tH\004R\022serviceAccount" +
      "Name\210\001\001\022J\n\037automount_service_account_tok" +
      "en\030\025 \001(\010H\005R\034automountServiceAccountToken" +
      "\210\001\001\022 \n\tnode_name\030\n \001(\tH\006R\010nodeName\210\001\001\022!\n" +
      "\014host_network\030\013 \001(\010R\013hostNetwork\022\031\n\010host" +
      "_pid\030\014 \001(\010R\007hostPid\022\031\n\010host_ipc\030\r \001(\010R\007h" +
      "ostIpc\0226\n\027share_process_namespace\030\033 \001(\010R" +
      "\025shareProcessNamespace\022\037\n\010hostname\030\020 \001(\t" +
      "H\007R\010hostname\210\001\001\022!\n\tsubdomain\030\021 \001(\tH\010R\tsu" +
      "bdomain\210\001\001\022*\n\016scheduler_name\030\023 \001(\tH\tR\rsc" +
      "hedulerName\210\001\001\0223\n\023priority_class_name\030\030 " +
      "\001(\tH\nR\021priorityClassName\210\001\001\022\037\n\010priority\030" +
      "\031 \001(\005H\013R\010priority\210\001\001\0221\n\022runtime_class_na" +
      "me\030\035 \001(\tH\014R\020runtimeClassName\210\001\001\0225\n\024enabl" +
      "e_service_links\030\036 \001(\010H\rR\022enableServiceLi" +
      "nks\210\001\001\0220\n\021preemption_policy\030\037 \001(\tH\016R\020pre" +
      "emptionPolicy\210\001\001\022\"\n\nhost_users\030% \001(\010H\017R\t" +
      "hostUsers\210\001\001\022`\n\017resource_claims\030\' \003(\01327." +
      "chalk.kubernetes.v1.KubernetesPodData.Po" +
      "dResourceClaimR\016resourceClaims\032?\n\021NodeSe" +
      "lectorEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002" +
      " \001(\tR\005value:\0028\001B\021\n\017_restart_policyB#\n!_t" +
      "ermination_grace_period_secondsB\032\n\030_acti" +
      "ve_deadline_secondsB\r\n\013_dns_policyB\027\n\025_s" +
      "ervice_account_nameB\"\n _automount_servic" +
      "e_account_tokenB\014\n\n_node_nameB\013\n\t_hostna" +
      "meB\014\n\n_subdomainB\021\n\017_scheduler_nameB\026\n\024_" +
      "priority_class_nameB\013\n\t_priorityB\025\n\023_run" +
      "time_class_nameB\027\n\025_enable_service_links" +
      "B\024\n\022_preemption_policyB\r\n\013_host_users\032\327\002" +
      "\n\016ContainerState\022[\n\007waiting\030\001 \001(\0132<.chal" +
      "k.kubernetes.v1.KubernetesPodData.Contai" +
      "nerStateWaitingH\000R\007waiting\210\001\001\022[\n\007running" +
      "\030\002 \001(\0132<.chalk.kubernetes.v1.KubernetesP" +
      "odData.ContainerStateRunningH\001R\007running\210" +
      "\001\001\022d\n\nterminated\030\003 \001(\0132?.chalk.kubernete" +
      "s.v1.KubernetesPodData.ContainerStateTer" +
      "minatedH\002R\nterminated\210\001\001B\n\n\010_waitingB\n\n\010" +
      "_runningB\r\n\013_terminated\0326\n\025ContainerStat" +
      "eRunning\022\035\n\nstarted_at\030\001 \001(\003R\tstartedAt\032" +
      "\324\002\n\030ContainerStateTerminated\022\033\n\texit_cod" +
      "e\030\001 \001(\005R\010exitCode\022\033\n\006signal\030\002 \001(\005H\000R\006sig" +
      "nal\210\001\001\022\033\n\006reason\030\003 \001(\tH\001R\006reason\210\001\001\022\035\n\007m" +
      "essage\030\004 \001(\tH\002R\007message\210\001\001\022\"\n\nstarted_at" +
      "\030\005 \001(\003H\003R\tstartedAt\210\001\001\022$\n\013finished_at\030\006 " +
      "\001(\003H\004R\nfinishedAt\210\001\001\022&\n\014container_id\030\007 \001" +
      "(\tH\005R\013containerId\210\001\001B\t\n\007_signalB\t\n\007_reas" +
      "onB\n\n\010_messageB\r\n\013_started_atB\016\n\014_finish" +
      "ed_atB\017\n\r_container_id\0322\n\006EnvVar\022\022\n\004name" +
      "\030\001 \001(\tR\004name\022\024\n\005value\030\002 \001(\tR\005value\032\342\005\n\tC" +
      "ontainer\022\022\n\004name\030\001 \001(\tR\004name\022\031\n\005image\030\002 " +
      "\001(\tH\000R\005image\210\001\001\022\030\n\007command\030\003 \003(\tR\007comman" +
      "d\022\022\n\004args\030\004 \003(\tR\004args\022$\n\013working_dir\030\005 \001" +
      "(\tH\001R\nworkingDir\210\001\001\022?\n\003env\030\007 \003(\0132-.chalk" +
      ".kubernetes.v1.KubernetesPodData.EnvVarR" +
      "\003env\022^\n\tresources\030\010 \001(\0132;.chalk.kubernet" +
      "es.v1.KubernetesPodData.ResourceRequirem" +
      "entsH\002R\tresources\210\001\001\022*\n\016restart_policy\030\030" +
      " \001(\tH\003R\rrestartPolicy\210\001\001\022=\n\030termination_" +
      "message_path\030\r \001(\tH\004R\026terminationMessage" +
      "Path\210\001\001\022A\n\032termination_message_policy\030\024 " +
      "\001(\tH\005R\030terminationMessagePolicy\210\001\001\022/\n\021im" +
      "age_pull_policy\030\016 \001(\tH\006R\017imagePullPolicy" +
      "\210\001\001\022\024\n\005stdin\030\020 \001(\010R\005stdin\022\035\n\nstdin_once\030" +
      "\021 \001(\010R\tstdinOnce\022\020\n\003tty\030\022 \001(\010R\003ttyB\010\n\006_i" +
      "mageB\016\n\014_working_dirB\014\n\n_resourcesB\021\n\017_r" +
      "estart_policyB\033\n\031_termination_message_pa" +
      "thB\035\n\033_termination_message_policyB\024\n\022_im" +
      "age_pull_policy\032j\n\025ContainerStateWaiting" +
      "\022\033\n\006reason\030\001 \001(\tH\000R\006reason\210\001\001\022\035\n\007message" +
      "\030\002 \001(\tH\001R\007message\210\001\001B\t\n\007_reasonB\n\n\010_mess" +
      "age\032\243\003\n\017ContainerStatus\022\022\n\004name\030\001 \001(\tR\004n" +
      "ame\022P\n\005state\030\002 \001(\01325.chalk.kubernetes.v1" +
      ".KubernetesPodData.ContainerStateH\000R\005sta" +
      "te\210\001\001\022Y\n\nlast_state\030\003 \001(\01325.chalk.kubern" +
      "etes.v1.KubernetesPodData.ContainerState" +
      "H\001R\tlastState\210\001\001\022\031\n\005ready\030\004 \001(\010H\002R\005ready" +
      "\210\001\001\022#\n\rrestart_count\030\005 \001(\005R\014restartCount" +
      "\022\024\n\005image\030\006 \001(\tR\005image\022\031\n\010image_id\030\007 \001(\t" +
      "R\007imageId\022!\n\014container_id\030\010 \001(\tR\013contain" +
      "erId\022\030\n\007started\030\t \001(\010R\007startedB\010\n\006_state" +
      "B\r\n\013_last_stateB\010\n\006_ready\0322\n\010Quantity\022\033\n" +
      "\006string\030\001 \001(\tH\000R\006string\210\001\001B\t\n\007_string\032\270\003" +
      "\n\024ResourceRequirements\022_\n\006limits\030\001 \003(\0132G" +
      ".chalk.kubernetes.v1.KubernetesPodData.R" +
      "esourceRequirements.LimitsEntryR\006limits\022" +
      "e\n\010requests\030\002 \003(\0132I.chalk.kubernetes.v1." +
      "KubernetesPodData.ResourceRequirements.R" +
      "equestsEntryR\010requests\032j\n\013LimitsEntry\022\020\n" +
      "\003key\030\001 \001(\tR\003key\022E\n\005value\030\002 \001(\0132/.chalk.k" +
      "ubernetes.v1.KubernetesPodData.QuantityR" +
      "\005value:\0028\001\032l\n\rRequestsEntry\022\020\n\003key\030\001 \001(\t" +
      "R\003key\022E\n\005value\030\002 \001(\0132/.chalk.kubernetes." +
      "v1.KubernetesPodData.QuantityR\005value:\0028\001" +
      "\032\347\001\n\014PodCondition\022\022\n\004type\030\001 \001(\tR\004type\022\026\n" +
      "\006status\030\002 \001(\tR\006status\022&\n\017last_probe_time" +
      "\030\003 \001(\003R\rlastProbeTime\0220\n\024last_transition" +
      "_time\030\004 \001(\003R\022lastTransitionTime\022\033\n\006reaso" +
      "n\030\005 \001(\tH\000R\006reason\210\001\001\022\035\n\007message\030\006 \001(\tH\001R" +
      "\007message\210\001\001B\t\n\007_reasonB\n\n\010_message\032$\n\006Ho" +
      "stIP\022\023\n\002ip\030\001 \001(\tH\000R\002ip\210\001\001B\005\n\003_ip\032\234\007\n\tPod" +
      "Status\022\031\n\005phase\030\001 \001(\tH\000R\005phase\210\001\001\022S\n\ncon" +
      "ditions\030\002 \003(\01323.chalk.kubernetes.v1.Kube" +
      "rnetesPodData.PodConditionR\nconditions\022\035" +
      "\n\007message\030\003 \001(\tH\001R\007message\210\001\001\022\033\n\006reason\030" +
      "\004 \001(\tH\002R\006reason\210\001\001\0223\n\023nominated_node_nam" +
      "e\030\013 \001(\tH\003R\021nominatedNodeName\210\001\001\022\034\n\007host_" +
      "ip\030\005 \001(\tH\004R\006hostIp\210\001\001\022H\n\010host_ips\030\020 \003(\0132" +
      "-.chalk.kubernetes.v1.KubernetesPodData." +
      "HostIPR\007hostIps\022\032\n\006pod_ip\030\006 \001(\tH\005R\005podIp" +
      "\210\001\001\022\"\n\nstart_time\030\007 \001(\003H\006R\tstartTime\210\001\001\022" +
      "n\n\027init_container_statuses\030\n \003(\01326.chalk" +
      ".kubernetes.v1.KubernetesPodData.Contain" +
      "erStatusR\025initContainerStatuses\022e\n\022conta" +
      "iner_statuses\030\010 \003(\01326.chalk.kubernetes.v" +
      "1.KubernetesPodData.ContainerStatusR\021con" +
      "tainerStatuses\022 \n\tqos_class\030\t \001(\tH\007R\010qos" +
      "Class\210\001\001\022x\n\034ephemeral_container_statuses" +
      "\030\r \003(\01326.chalk.kubernetes.v1.KubernetesP" +
      "odData.ContainerStatusR\032ephemeralContain" +
      "erStatuses\022\033\n\006resize\030\016 \001(\tH\010R\006resize\210\001\001B" +
      "\010\n\006_phaseB\n\n\010_messageB\t\n\007_reasonB\026\n\024_nom" +
      "inated_node_nameB\n\n\010_host_ipB\t\n\007_pod_ipB" +
      "\r\n\013_start_timeB\014\n\n_qos_classB\t\n\007_resize\032" +
      "9\n\013LabelsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu" +
      "e\030\002 \001(\tR\005value:\0028\001\032>\n\020AnnotationsEntry\022\020" +
      "\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\002" +
      "8\001B\272\001\n#ai.chalk.protos.chalk.kubernetes." +
      "v1B\tPodsProtoP\001Z\032kubernetes/v1;kubernete" +
      "sv1\242\002\003CKX\252\002\023Chalk.Kubernetes.V1\312\002\023Chalk\\" +
      "Kubernetes\\V1\342\002\037Chalk\\Kubernetes\\V1\\GPBM" +
      "etadata\352\002\025Chalk::Kubernetes::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor,
        new java.lang.String[] { "Team", "App", "Component", "DatadogService", "DatadogVersion", "PodTemplateHash", "Status", "Spec", "CreationTimestamp", "DeletionTimestamp", "ObservedTimestamp", "Labels", "Annotations", "Cluster", "Uid", "Name", "Namespace", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Volume_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(0);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Volume_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_Volume_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ClaimSource_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(1);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ClaimSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ClaimSource_descriptor,
        new java.lang.String[] { "ResourceClaimName", "ResourceClaimTemplateName", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodResourceClaim_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(2);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodResourceClaim_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_PodResourceClaim_descriptor,
        new java.lang.String[] { "Name", "Source", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(3);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_descriptor,
        new java.lang.String[] { "Volumes", "InitContainers", "Containers", "RestartPolicy", "TerminationGracePeriodSeconds", "ActiveDeadlineSeconds", "DnsPolicy", "NodeSelector", "ServiceAccountName", "AutomountServiceAccountToken", "NodeName", "HostNetwork", "HostPid", "HostIpc", "ShareProcessNamespace", "Hostname", "Subdomain", "SchedulerName", "PriorityClassName", "Priority", "RuntimeClassName", "EnableServiceLinks", "PreemptionPolicy", "HostUsers", "ResourceClaims", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_NodeSelectorEntry_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_descriptor.getNestedTypes().get(0);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_NodeSelectorEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_PodSpec_NodeSelectorEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerState_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(4);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerState_descriptor,
        new java.lang.String[] { "Waiting", "Running", "Terminated", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateRunning_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(5);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateRunning_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateRunning_descriptor,
        new java.lang.String[] { "StartedAt", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateTerminated_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(6);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateTerminated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateTerminated_descriptor,
        new java.lang.String[] { "ExitCode", "Signal", "Reason", "Message", "StartedAt", "FinishedAt", "ContainerId", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_EnvVar_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(7);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_EnvVar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_EnvVar_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Container_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(8);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Container_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_Container_descriptor,
        new java.lang.String[] { "Name", "Image", "Command", "Args", "WorkingDir", "Env", "Resources", "RestartPolicy", "TerminationMessagePath", "TerminationMessagePolicy", "ImagePullPolicy", "Stdin", "StdinOnce", "Tty", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateWaiting_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(9);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateWaiting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStateWaiting_descriptor,
        new java.lang.String[] { "Reason", "Message", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStatus_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(10);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ContainerStatus_descriptor,
        new java.lang.String[] { "Name", "State", "LastState", "Ready", "RestartCount", "Image", "ImageId", "ContainerId", "Started", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Quantity_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(11);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_Quantity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_Quantity_descriptor,
        new java.lang.String[] { "String", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(12);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_descriptor,
        new java.lang.String[] { "Limits", "Requests", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_LimitsEntry_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_descriptor.getNestedTypes().get(0);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_LimitsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_LimitsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_RequestsEntry_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_descriptor.getNestedTypes().get(1);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_RequestsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_ResourceRequirements_RequestsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodCondition_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(13);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodCondition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_PodCondition_descriptor,
        new java.lang.String[] { "Type", "Status", "LastProbeTime", "LastTransitionTime", "Reason", "Message", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_HostIP_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(14);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_HostIP_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_HostIP_descriptor,
        new java.lang.String[] { "Ip", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodStatus_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(15);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_PodStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_PodStatus_descriptor,
        new java.lang.String[] { "Phase", "Conditions", "Message", "Reason", "NominatedNodeName", "HostIp", "HostIps", "PodIp", "StartTime", "InitContainerStatuses", "ContainerStatuses", "QosClass", "EphemeralContainerStatuses", "Resize", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_LabelsEntry_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(16);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_chalk_kubernetes_v1_KubernetesPodData_AnnotationsEntry_descriptor =
      internal_static_chalk_kubernetes_v1_KubernetesPodData_descriptor.getNestedTypes().get(17);
    internal_static_chalk_kubernetes_v1_KubernetesPodData_AnnotationsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_chalk_kubernetes_v1_KubernetesPodData_AnnotationsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
