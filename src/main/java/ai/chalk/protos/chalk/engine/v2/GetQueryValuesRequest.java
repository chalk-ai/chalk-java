// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v2/query_values.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.engine.v2;

/**
 * Protobuf type {@code chalk.engine.v2.GetQueryValuesRequest}
 */
public final class GetQueryValuesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:chalk.engine.v2.GetQueryValuesRequest)
    GetQueryValuesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetQueryValuesRequest.newBuilder() to construct.
  private GetQueryValuesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetQueryValuesRequest() {
    features_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    pageToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetQueryValuesRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.engine.v2.QueryValuesProto.internal_static_chalk_engine_v2_GetQueryValuesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.engine.v2.QueryValuesProto.internal_static_chalk_engine_v2_GetQueryValuesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.class, ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.Builder.class);
  }

  private int bitField0_;
  private int tableIdentifierCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object tableIdentifier_;
  public enum TableIdentifierCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    OPERATION_ID_IDENTIFIER(1),
    TABLE_NAME_IDENTIFIER(2),
    TABLEIDENTIFIER_NOT_SET(0);
    private final int value;
    private TableIdentifierCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TableIdentifierCase valueOf(int value) {
      return forNumber(value);
    }

    public static TableIdentifierCase forNumber(int value) {
      switch (value) {
        case 1: return OPERATION_ID_IDENTIFIER;
        case 2: return TABLE_NAME_IDENTIFIER;
        case 0: return TABLEIDENTIFIER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TableIdentifierCase
  getTableIdentifierCase() {
    return TableIdentifierCase.forNumber(
        tableIdentifierCase_);
  }

  public static final int OPERATION_ID_IDENTIFIER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
   * and the engine can figure out what table to query.
   * </pre>
   *
   * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
   * @return Whether the operationIdIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasOperationIdIdentifier() {
    return tableIdentifierCase_ == 1;
  }
  /**
   * <pre>
   * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
   * and the engine can figure out what table to query.
   * </pre>
   *
   * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
   * @return The operationIdIdentifier.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier getOperationIdIdentifier() {
    if (tableIdentifierCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_;
    }
    return ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
  }
  /**
   * <pre>
   * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
   * and the engine can figure out what table to query.
   * </pre>
   *
   * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifierOrBuilder getOperationIdIdentifierOrBuilder() {
    if (tableIdentifierCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_;
    }
    return ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
  }

  public static final int TABLE_NAME_IDENTIFIER_FIELD_NUMBER = 2;
  /**
   * <pre>
   * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
   * </pre>
   *
   * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
   * @return Whether the tableNameIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasTableNameIdentifier() {
    return tableIdentifierCase_ == 2;
  }
  /**
   * <pre>
   * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
   * </pre>
   *
   * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
   * @return The tableNameIdentifier.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier getTableNameIdentifier() {
    if (tableIdentifierCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_;
    }
    return ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
  }
  /**
   * <pre>
   * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
   * </pre>
   *
   * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifierOrBuilder getTableNameIdentifierOrBuilder() {
    if (tableIdentifierCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_;
    }
    return ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
  }

  public static final int QUERY_TIMESTAMP_LOWER_BOUND_INCLUSIVE_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp queryTimestampLowerBoundInclusive_;
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * This is always required.
   * If you know the operation id, then its feasible that you know the exact query timestamp, too.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   * @return Whether the queryTimestampLowerBoundInclusive field is set.
   */
  @java.lang.Override
  public boolean hasQueryTimestampLowerBoundInclusive() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * This is always required.
   * If you know the operation id, then its feasible that you know the exact query timestamp, too.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   * @return The queryTimestampLowerBoundInclusive.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getQueryTimestampLowerBoundInclusive() {
    return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
  }
  /**
   * <pre>
   * The query log table is partitioned / sorted by timestamp, so we must provide these
   * for the queries to be efficient, even if we are querying for a single operation id
   * This is always required.
   * If you know the operation id, then its feasible that you know the exact query timestamp, too.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getQueryTimestampLowerBoundInclusiveOrBuilder() {
    return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
  }

  public static final int QUERY_TIMESTAMP_UPPER_BOUND_EXCLUSIVE_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp queryTimestampUpperBoundExclusive_;
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   * @return Whether the queryTimestampUpperBoundExclusive field is set.
   */
  @java.lang.Override
  public boolean hasQueryTimestampUpperBoundExclusive() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   * @return The queryTimestampUpperBoundExclusive.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getQueryTimestampUpperBoundExclusive() {
    return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
  }
  /**
   * <pre>
   * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getQueryTimestampUpperBoundExclusiveOrBuilder() {
    return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
  }

  public static final int FEATURES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList features_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
   * If empty, all features will be returned
   * </pre>
   *
   * <code>repeated string features = 5 [json_name = "features"];</code>
   * @return A list containing the features.
   */
  public com.google.protobuf.ProtocolStringList
      getFeaturesList() {
    return features_;
  }
  /**
   * <pre>
   * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
   * If empty, all features will be returned
   * </pre>
   *
   * <code>repeated string features = 5 [json_name = "features"];</code>
   * @return The count of features.
   */
  public int getFeaturesCount() {
    return features_.size();
  }
  /**
   * <pre>
   * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
   * If empty, all features will be returned
   * </pre>
   *
   * <code>repeated string features = 5 [json_name = "features"];</code>
   * @param index The index of the element to return.
   * @return The features at the given index.
   */
  public java.lang.String getFeatures(int index) {
    return features_.get(index);
  }
  /**
   * <pre>
   * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
   * If empty, all features will be returned
   * </pre>
   *
   * <code>repeated string features = 5 [json_name = "features"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the features at the given index.
   */
  public com.google.protobuf.ByteString
      getFeaturesBytes(int index) {
    return features_.getByteString(index);
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 7;
  private int pageSize_ = 0;
  /**
   * <pre>
   * The (maximum) page size for results. If zero, then the server picks.
   * </pre>
   *
   * <code>int32 page_size = 7 [json_name = "pageSize"];</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object pageToken_ = "";
  /**
   * <pre>
   * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
   * Leave empty if querying for the zeroth page.
   * </pre>
   *
   * <code>string page_token = 8 [json_name = "pageToken"];</code>
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
   * Leave empty if querying for the zeroth page.
   * </pre>
   *
   * <code>string page_token = 8 [json_name = "pageToken"];</code>
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tableIdentifierCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_);
    }
    if (tableIdentifierCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getQueryTimestampLowerBoundInclusive());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getQueryTimestampUpperBoundExclusive());
    }
    for (int i = 0; i < features_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, features_.getRaw(i));
    }
    if (pageSize_ != 0) {
      output.writeInt32(7, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, pageToken_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tableIdentifierCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_);
    }
    if (tableIdentifierCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getQueryTimestampLowerBoundInclusive());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getQueryTimestampUpperBoundExclusive());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < features_.size(); i++) {
        dataSize += computeStringSizeNoTag(features_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFeaturesList().size();
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, pageToken_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest other = (ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest) obj;

    if (hasQueryTimestampLowerBoundInclusive() != other.hasQueryTimestampLowerBoundInclusive()) return false;
    if (hasQueryTimestampLowerBoundInclusive()) {
      if (!getQueryTimestampLowerBoundInclusive()
          .equals(other.getQueryTimestampLowerBoundInclusive())) return false;
    }
    if (hasQueryTimestampUpperBoundExclusive() != other.hasQueryTimestampUpperBoundExclusive()) return false;
    if (hasQueryTimestampUpperBoundExclusive()) {
      if (!getQueryTimestampUpperBoundExclusive()
          .equals(other.getQueryTimestampUpperBoundExclusive())) return false;
    }
    if (!getFeaturesList()
        .equals(other.getFeaturesList())) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getPageToken()
        .equals(other.getPageToken())) return false;
    if (!getTableIdentifierCase().equals(other.getTableIdentifierCase())) return false;
    switch (tableIdentifierCase_) {
      case 1:
        if (!getOperationIdIdentifier()
            .equals(other.getOperationIdIdentifier())) return false;
        break;
      case 2:
        if (!getTableNameIdentifier()
            .equals(other.getTableNameIdentifier())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasQueryTimestampLowerBoundInclusive()) {
      hash = (37 * hash) + QUERY_TIMESTAMP_LOWER_BOUND_INCLUSIVE_FIELD_NUMBER;
      hash = (53 * hash) + getQueryTimestampLowerBoundInclusive().hashCode();
    }
    if (hasQueryTimestampUpperBoundExclusive()) {
      hash = (37 * hash) + QUERY_TIMESTAMP_UPPER_BOUND_EXCLUSIVE_FIELD_NUMBER;
      hash = (53 * hash) + getQueryTimestampUpperBoundExclusive().hashCode();
    }
    if (getFeaturesCount() > 0) {
      hash = (37 * hash) + FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getFeaturesList().hashCode();
    }
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    switch (tableIdentifierCase_) {
      case 1:
        hash = (37 * hash) + OPERATION_ID_IDENTIFIER_FIELD_NUMBER;
        hash = (53 * hash) + getOperationIdIdentifier().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TABLE_NAME_IDENTIFIER_FIELD_NUMBER;
        hash = (53 * hash) + getTableNameIdentifier().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.engine.v2.GetQueryValuesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.engine.v2.GetQueryValuesRequest)
      ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.engine.v2.QueryValuesProto.internal_static_chalk_engine_v2_GetQueryValuesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.engine.v2.QueryValuesProto.internal_static_chalk_engine_v2_GetQueryValuesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.class, ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getQueryTimestampLowerBoundInclusiveFieldBuilder();
        getQueryTimestampUpperBoundExclusiveFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (operationIdIdentifierBuilder_ != null) {
        operationIdIdentifierBuilder_.clear();
      }
      if (tableNameIdentifierBuilder_ != null) {
        tableNameIdentifierBuilder_.clear();
      }
      queryTimestampLowerBoundInclusive_ = null;
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        queryTimestampLowerBoundInclusiveBuilder_.dispose();
        queryTimestampLowerBoundInclusiveBuilder_ = null;
      }
      queryTimestampUpperBoundExclusive_ = null;
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        queryTimestampUpperBoundExclusiveBuilder_.dispose();
        queryTimestampUpperBoundExclusiveBuilder_ = null;
      }
      features_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      pageSize_ = 0;
      pageToken_ = "";
      tableIdentifierCase_ = 0;
      tableIdentifier_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.engine.v2.QueryValuesProto.internal_static_chalk_engine_v2_GetQueryValuesRequest_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest build() {
      ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest buildPartial() {
      ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest result = new ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.queryTimestampLowerBoundInclusive_ = queryTimestampLowerBoundInclusiveBuilder_ == null
            ? queryTimestampLowerBoundInclusive_
            : queryTimestampLowerBoundInclusiveBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.queryTimestampUpperBoundExclusive_ = queryTimestampUpperBoundExclusiveBuilder_ == null
            ? queryTimestampUpperBoundExclusive_
            : queryTimestampUpperBoundExclusiveBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        features_.makeImmutable();
        result.features_ = features_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.pageSize_ = pageSize_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.pageToken_ = pageToken_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest result) {
      result.tableIdentifierCase_ = tableIdentifierCase_;
      result.tableIdentifier_ = this.tableIdentifier_;
      if (tableIdentifierCase_ == 1 &&
          operationIdIdentifierBuilder_ != null) {
        result.tableIdentifier_ = operationIdIdentifierBuilder_.build();
      }
      if (tableIdentifierCase_ == 2 &&
          tableNameIdentifierBuilder_ != null) {
        result.tableIdentifier_ = tableNameIdentifierBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest) {
        return mergeFrom((ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest other) {
      if (other == ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest.getDefaultInstance()) return this;
      if (other.hasQueryTimestampLowerBoundInclusive()) {
        mergeQueryTimestampLowerBoundInclusive(other.getQueryTimestampLowerBoundInclusive());
      }
      if (other.hasQueryTimestampUpperBoundExclusive()) {
        mergeQueryTimestampUpperBoundExclusive(other.getQueryTimestampUpperBoundExclusive());
      }
      if (!other.features_.isEmpty()) {
        if (features_.isEmpty()) {
          features_ = other.features_;
          bitField0_ |= 0x00000010;
        } else {
          ensureFeaturesIsMutable();
          features_.addAll(other.features_);
        }
        onChanged();
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      switch (other.getTableIdentifierCase()) {
        case OPERATION_ID_IDENTIFIER: {
          mergeOperationIdIdentifier(other.getOperationIdIdentifier());
          break;
        }
        case TABLE_NAME_IDENTIFIER: {
          mergeTableNameIdentifier(other.getTableNameIdentifier());
          break;
        }
        case TABLEIDENTIFIER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getOperationIdIdentifierFieldBuilder().getBuilder(),
                  extensionRegistry);
              tableIdentifierCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTableNameIdentifierFieldBuilder().getBuilder(),
                  extensionRegistry);
              tableIdentifierCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getQueryTimestampLowerBoundInclusiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getQueryTimestampUpperBoundExclusiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureFeaturesIsMutable();
              features_.add(s);
              break;
            } // case 42
            case 56: {
              pageSize_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 56
            case 66: {
              pageToken_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int tableIdentifierCase_ = 0;
    private java.lang.Object tableIdentifier_;
    public TableIdentifierCase
        getTableIdentifierCase() {
      return TableIdentifierCase.forNumber(
          tableIdentifierCase_);
    }

    public Builder clearTableIdentifier() {
      tableIdentifierCase_ = 0;
      tableIdentifier_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifierOrBuilder> operationIdIdentifierBuilder_;
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     * @return Whether the operationIdIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasOperationIdIdentifier() {
      return tableIdentifierCase_ == 1;
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     * @return The operationIdIdentifier.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier getOperationIdIdentifier() {
      if (operationIdIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_;
        }
        return ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
      } else {
        if (tableIdentifierCase_ == 1) {
          return operationIdIdentifierBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    public Builder setOperationIdIdentifier(ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier value) {
      if (operationIdIdentifierBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tableIdentifier_ = value;
        onChanged();
      } else {
        operationIdIdentifierBuilder_.setMessage(value);
      }
      tableIdentifierCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    public Builder setOperationIdIdentifier(
        ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.Builder builderForValue) {
      if (operationIdIdentifierBuilder_ == null) {
        tableIdentifier_ = builderForValue.build();
        onChanged();
      } else {
        operationIdIdentifierBuilder_.setMessage(builderForValue.build());
      }
      tableIdentifierCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    public Builder mergeOperationIdIdentifier(ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier value) {
      if (operationIdIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 1 &&
            tableIdentifier_ != ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance()) {
          tableIdentifier_ = ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.newBuilder((ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_)
              .mergeFrom(value).buildPartial();
        } else {
          tableIdentifier_ = value;
        }
        onChanged();
      } else {
        if (tableIdentifierCase_ == 1) {
          operationIdIdentifierBuilder_.mergeFrom(value);
        } else {
          operationIdIdentifierBuilder_.setMessage(value);
        }
      }
      tableIdentifierCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    public Builder clearOperationIdIdentifier() {
      if (operationIdIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 1) {
          tableIdentifierCase_ = 0;
          tableIdentifier_ = null;
          onChanged();
        }
      } else {
        if (tableIdentifierCase_ == 1) {
          tableIdentifierCase_ = 0;
          tableIdentifier_ = null;
        }
        operationIdIdentifierBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    public ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.Builder getOperationIdIdentifierBuilder() {
      return getOperationIdIdentifierFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifierOrBuilder getOperationIdIdentifierOrBuilder() {
      if ((tableIdentifierCase_ == 1) && (operationIdIdentifierBuilder_ != null)) {
        return operationIdIdentifierBuilder_.getMessageOrBuilder();
      } else {
        if (tableIdentifierCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_;
        }
        return ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Forcing the client to specify the table name can be a bit gnarly. Instead, for use case 1), it can be easier to allow the client to specify the operation id,
     * and the engine can figure out what table to query.
     * </pre>
     *
     * <code>.chalk.engine.v2.OperationIdTableIdentifier operation_id_identifier = 1 [json_name = "operationIdIdentifier"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifierOrBuilder> 
        getOperationIdIdentifierFieldBuilder() {
      if (operationIdIdentifierBuilder_ == null) {
        if (!(tableIdentifierCase_ == 1)) {
          tableIdentifier_ = ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.getDefaultInstance();
        }
        operationIdIdentifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifierOrBuilder>(
                (ai.chalk.protos.chalk.engine.v2.OperationIdTableIdentifier) tableIdentifier_,
                getParentForChildren(),
                isClean());
        tableIdentifier_ = null;
      }
      tableIdentifierCase_ = 1;
      onChanged();
      return operationIdIdentifierBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifierOrBuilder> tableNameIdentifierBuilder_;
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     * @return Whether the tableNameIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasTableNameIdentifier() {
      return tableIdentifierCase_ == 2;
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     * @return The tableNameIdentifier.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier getTableNameIdentifier() {
      if (tableNameIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_;
        }
        return ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
      } else {
        if (tableIdentifierCase_ == 2) {
          return tableNameIdentifierBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    public Builder setTableNameIdentifier(ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier value) {
      if (tableNameIdentifierBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tableIdentifier_ = value;
        onChanged();
      } else {
        tableNameIdentifierBuilder_.setMessage(value);
      }
      tableIdentifierCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    public Builder setTableNameIdentifier(
        ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.Builder builderForValue) {
      if (tableNameIdentifierBuilder_ == null) {
        tableIdentifier_ = builderForValue.build();
        onChanged();
      } else {
        tableNameIdentifierBuilder_.setMessage(builderForValue.build());
      }
      tableIdentifierCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    public Builder mergeTableNameIdentifier(ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier value) {
      if (tableNameIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 2 &&
            tableIdentifier_ != ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance()) {
          tableIdentifier_ = ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.newBuilder((ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_)
              .mergeFrom(value).buildPartial();
        } else {
          tableIdentifier_ = value;
        }
        onChanged();
      } else {
        if (tableIdentifierCase_ == 2) {
          tableNameIdentifierBuilder_.mergeFrom(value);
        } else {
          tableNameIdentifierBuilder_.setMessage(value);
        }
      }
      tableIdentifierCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    public Builder clearTableNameIdentifier() {
      if (tableNameIdentifierBuilder_ == null) {
        if (tableIdentifierCase_ == 2) {
          tableIdentifierCase_ = 0;
          tableIdentifier_ = null;
          onChanged();
        }
      } else {
        if (tableIdentifierCase_ == 2) {
          tableIdentifierCase_ = 0;
          tableIdentifier_ = null;
        }
        tableNameIdentifierBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    public ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.Builder getTableNameIdentifierBuilder() {
      return getTableNameIdentifierFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifierOrBuilder getTableNameIdentifierOrBuilder() {
      if ((tableIdentifierCase_ == 2) && (tableNameIdentifierBuilder_ != null)) {
        return tableNameIdentifierBuilder_.getMessageOrBuilder();
      } else {
        if (tableIdentifierCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_;
        }
        return ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * For use case 2, you have to specify which table name to look up, if you want to query across multiple queries
     * </pre>
     *
     * <code>.chalk.engine.v2.TableNameTableIdentifier table_name_identifier = 2 [json_name = "tableNameIdentifier"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifierOrBuilder> 
        getTableNameIdentifierFieldBuilder() {
      if (tableNameIdentifierBuilder_ == null) {
        if (!(tableIdentifierCase_ == 2)) {
          tableIdentifier_ = ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.getDefaultInstance();
        }
        tableNameIdentifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier.Builder, ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifierOrBuilder>(
                (ai.chalk.protos.chalk.engine.v2.TableNameTableIdentifier) tableIdentifier_,
                getParentForChildren(),
                isClean());
        tableIdentifier_ = null;
      }
      tableIdentifierCase_ = 2;
      onChanged();
      return tableNameIdentifierBuilder_;
    }

    private com.google.protobuf.Timestamp queryTimestampLowerBoundInclusive_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> queryTimestampLowerBoundInclusiveBuilder_;
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     * @return Whether the queryTimestampLowerBoundInclusive field is set.
     */
    public boolean hasQueryTimestampLowerBoundInclusive() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     * @return The queryTimestampLowerBoundInclusive.
     */
    public com.google.protobuf.Timestamp getQueryTimestampLowerBoundInclusive() {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        return queryTimestampLowerBoundInclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
      } else {
        return queryTimestampLowerBoundInclusiveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder setQueryTimestampLowerBoundInclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryTimestampLowerBoundInclusive_ = value;
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder setQueryTimestampLowerBoundInclusive(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        queryTimestampLowerBoundInclusive_ = builderForValue.build();
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder mergeQueryTimestampLowerBoundInclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          queryTimestampLowerBoundInclusive_ != null &&
          queryTimestampLowerBoundInclusive_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getQueryTimestampLowerBoundInclusiveBuilder().mergeFrom(value);
        } else {
          queryTimestampLowerBoundInclusive_ = value;
        }
      } else {
        queryTimestampLowerBoundInclusiveBuilder_.mergeFrom(value);
      }
      if (queryTimestampLowerBoundInclusive_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public Builder clearQueryTimestampLowerBoundInclusive() {
      bitField0_ = (bitField0_ & ~0x00000004);
      queryTimestampLowerBoundInclusive_ = null;
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        queryTimestampLowerBoundInclusiveBuilder_.dispose();
        queryTimestampLowerBoundInclusiveBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getQueryTimestampLowerBoundInclusiveBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getQueryTimestampLowerBoundInclusiveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getQueryTimestampLowerBoundInclusiveOrBuilder() {
      if (queryTimestampLowerBoundInclusiveBuilder_ != null) {
        return queryTimestampLowerBoundInclusiveBuilder_.getMessageOrBuilder();
      } else {
        return queryTimestampLowerBoundInclusive_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampLowerBoundInclusive_;
      }
    }
    /**
     * <pre>
     * The query log table is partitioned / sorted by timestamp, so we must provide these
     * for the queries to be efficient, even if we are querying for a single operation id
     * This is always required.
     * If you know the operation id, then its feasible that you know the exact query timestamp, too.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp query_timestamp_lower_bound_inclusive = 3 [json_name = "queryTimestampLowerBoundInclusive"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getQueryTimestampLowerBoundInclusiveFieldBuilder() {
      if (queryTimestampLowerBoundInclusiveBuilder_ == null) {
        queryTimestampLowerBoundInclusiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getQueryTimestampLowerBoundInclusive(),
                getParentForChildren(),
                isClean());
        queryTimestampLowerBoundInclusive_ = null;
      }
      return queryTimestampLowerBoundInclusiveBuilder_;
    }

    private com.google.protobuf.Timestamp queryTimestampUpperBoundExclusive_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> queryTimestampUpperBoundExclusiveBuilder_;
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     * @return Whether the queryTimestampUpperBoundExclusive field is set.
     */
    public boolean hasQueryTimestampUpperBoundExclusive() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     * @return The queryTimestampUpperBoundExclusive.
     */
    public com.google.protobuf.Timestamp getQueryTimestampUpperBoundExclusive() {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        return queryTimestampUpperBoundExclusive_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
      } else {
        return queryTimestampUpperBoundExclusiveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder setQueryTimestampUpperBoundExclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryTimestampUpperBoundExclusive_ = value;
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder setQueryTimestampUpperBoundExclusive(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        queryTimestampUpperBoundExclusive_ = builderForValue.build();
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder mergeQueryTimestampUpperBoundExclusive(com.google.protobuf.Timestamp value) {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          queryTimestampUpperBoundExclusive_ != null &&
          queryTimestampUpperBoundExclusive_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getQueryTimestampUpperBoundExclusiveBuilder().mergeFrom(value);
        } else {
          queryTimestampUpperBoundExclusive_ = value;
        }
      } else {
        queryTimestampUpperBoundExclusiveBuilder_.mergeFrom(value);
      }
      if (queryTimestampUpperBoundExclusive_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public Builder clearQueryTimestampUpperBoundExclusive() {
      bitField0_ = (bitField0_ & ~0x00000008);
      queryTimestampUpperBoundExclusive_ = null;
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        queryTimestampUpperBoundExclusiveBuilder_.dispose();
        queryTimestampUpperBoundExclusiveBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public com.google.protobuf.Timestamp.Builder getQueryTimestampUpperBoundExclusiveBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getQueryTimestampUpperBoundExclusiveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    public com.google.protobuf.TimestampOrBuilder getQueryTimestampUpperBoundExclusiveOrBuilder() {
      if (queryTimestampUpperBoundExclusiveBuilder_ != null) {
        return queryTimestampUpperBoundExclusiveBuilder_.getMessageOrBuilder();
      } else {
        return queryTimestampUpperBoundExclusive_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : queryTimestampUpperBoundExclusive_;
      }
    }
    /**
     * <pre>
     * If the upper bound is omitted, then the lower bound will be used as an exact (equality) filter
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp query_timestamp_upper_bound_exclusive = 4 [json_name = "queryTimestampUpperBoundExclusive"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getQueryTimestampUpperBoundExclusiveFieldBuilder() {
      if (queryTimestampUpperBoundExclusiveBuilder_ == null) {
        queryTimestampUpperBoundExclusiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getQueryTimestampUpperBoundExclusive(),
                getParentForChildren(),
                isClean());
        queryTimestampUpperBoundExclusive_ = null;
      }
      return queryTimestampUpperBoundExclusiveBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList features_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureFeaturesIsMutable() {
      if (!features_.isModifiable()) {
        features_ = new com.google.protobuf.LazyStringArrayList(features_);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @return A list containing the features.
     */
    public com.google.protobuf.ProtocolStringList
        getFeaturesList() {
      features_.makeImmutable();
      return features_;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @return The count of features.
     */
    public int getFeaturesCount() {
      return features_.size();
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param index The index of the element to return.
     * @return The features at the given index.
     */
    public java.lang.String getFeatures(int index) {
      return features_.get(index);
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the features at the given index.
     */
    public com.google.protobuf.ByteString
        getFeaturesBytes(int index) {
      return features_.getByteString(index);
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param index The index to set the value at.
     * @param value The features to set.
     * @return This builder for chaining.
     */
    public Builder setFeatures(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFeaturesIsMutable();
      features_.set(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param value The features to add.
     * @return This builder for chaining.
     */
    public Builder addFeatures(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFeaturesIsMutable();
      features_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param values The features to add.
     * @return This builder for chaining.
     */
    public Builder addAllFeatures(
        java.lang.Iterable<java.lang.String> values) {
      ensureFeaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, features_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFeatures() {
      features_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If you're interested in a subset of features, specify those here. Other columns won't be selected from the database, which will help reduce query costs.
     * If empty, all features will be returned
     * </pre>
     *
     * <code>repeated string features = 5 [json_name = "features"];</code>
     * @param value The bytes of the features to add.
     * @return This builder for chaining.
     */
    public Builder addFeaturesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureFeaturesIsMutable();
      features_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     * The (maximum) page size for results. If zero, then the server picks.
     * </pre>
     *
     * <code>int32 page_size = 7 [json_name = "pageSize"];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * The (maximum) page size for results. If zero, then the server picks.
     * </pre>
     *
     * <code>int32 page_size = 7 [json_name = "pageSize"];</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {

      pageSize_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The (maximum) page size for results. If zero, then the server picks.
     * </pre>
     *
     * <code>int32 page_size = 7 [json_name = "pageSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000020);
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
     * Leave empty if querying for the zeroth page.
     * </pre>
     *
     * <code>string page_token = 8 [json_name = "pageToken"];</code>
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
     * Leave empty if querying for the zeroth page.
     * </pre>
     *
     * <code>string page_token = 8 [json_name = "pageToken"];</code>
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
     * Leave empty if querying for the zeroth page.
     * </pre>
     *
     * <code>string page_token = 8 [json_name = "pageToken"];</code>
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      pageToken_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
     * Leave empty if querying for the zeroth page.
     * </pre>
     *
     * <code>string page_token = 8 [json_name = "pageToken"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      pageToken_ = getDefaultInstance().getPageToken();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When dealing with paginated responses, specify the next token to resume where you left off. The subsequent request must be identical to the original (except for the value of the next_token)
     * Leave empty if querying for the zeroth page.
     * </pre>
     *
     * <code>string page_token = 8 [json_name = "pageToken"];</code>
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      pageToken_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:chalk.engine.v2.GetQueryValuesRequest)
  }

  // @@protoc_insertion_point(class_scope:chalk.engine.v2.GetQueryValuesRequest)
  private static final ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest();
  }

  public static ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetQueryValuesRequest>
      PARSER = new com.google.protobuf.AbstractParser<GetQueryValuesRequest>() {
    @java.lang.Override
    public GetQueryValuesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetQueryValuesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetQueryValuesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v2.GetQueryValuesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

