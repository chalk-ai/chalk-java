// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v1/plan.proto

// Protobuf Java Version: 3.25.3
package ai.chalk.protos.chalk.engine.v1;

public interface DataFrameOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.engine.v1.DataFrame)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey optional_columns = 1 [json_name = "optionalColumns"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.engine.v1.FeatureColumnKey> 
      getOptionalColumnsList();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey optional_columns = 1 [json_name = "optionalColumns"];</code>
   */
  ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getOptionalColumns(int index);
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey optional_columns = 1 [json_name = "optionalColumns"];</code>
   */
  int getOptionalColumnsCount();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey optional_columns = 1 [json_name = "optionalColumns"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> 
      getOptionalColumnsOrBuilderList();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey optional_columns = 1 [json_name = "optionalColumns"];</code>
   */
  ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getOptionalColumnsOrBuilder(
      int index);

  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey required_columns = 2 [json_name = "requiredColumns"];</code>
   */
  java.util.List<ai.chalk.protos.chalk.engine.v1.FeatureColumnKey> 
      getRequiredColumnsList();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey required_columns = 2 [json_name = "requiredColumns"];</code>
   */
  ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getRequiredColumns(int index);
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey required_columns = 2 [json_name = "requiredColumns"];</code>
   */
  int getRequiredColumnsCount();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey required_columns = 2 [json_name = "requiredColumns"];</code>
   */
  java.util.List<? extends ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> 
      getRequiredColumnsOrBuilderList();
  /**
   * <code>repeated .chalk.engine.v1.FeatureColumnKey required_columns = 2 [json_name = "requiredColumns"];</code>
   */
  ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getRequiredColumnsOrBuilder(
      int index);

  /**
   * <pre>
   * optional Filter filter = 4; // TODO, represents filters on dfs/has-manys like (transaction.amount &lt; 10)
   * </pre>
   *
   * <code>optional uint64 limit = 3 [json_name = "limit"];</code>
   * @return Whether the limit field is set.
   */
  boolean hasLimit();
  /**
   * <pre>
   * optional Filter filter = 4; // TODO, represents filters on dfs/has-manys like (transaction.amount &lt; 10)
   * </pre>
   *
   * <code>optional uint64 limit = 3 [json_name = "limit"];</code>
   * @return The limit.
   */
  long getLimit();
}
