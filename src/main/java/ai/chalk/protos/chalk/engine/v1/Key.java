// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v1/plan.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.engine.v1;

/**
 * Protobuf type {@code chalk.engine.v1.Key}
 */
public final class Key extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:chalk.engine.v1.Key)
    KeyOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      Key.class.getName());
  }
  // Use Key.newBuilder() to construct.
  private Key(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Key() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_Key_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_Key_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.engine.v1.Key.class, ai.chalk.protos.chalk.engine.v1.Key.Builder.class);
  }

  private int implCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object impl_;
  public enum ImplCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RAW_COLUMN(1),
    SCALAR(2),
    HAS_MANY(3),
    DATAFRAME(4),
    IMPL_NOT_SET(0);
    private final int value;
    private ImplCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImplCase valueOf(int value) {
      return forNumber(value);
    }

    public static ImplCase forNumber(int value) {
      switch (value) {
        case 1: return RAW_COLUMN;
        case 2: return SCALAR;
        case 3: return HAS_MANY;
        case 4: return DATAFRAME;
        case 0: return IMPL_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ImplCase
  getImplCase() {
    return ImplCase.forNumber(
        implCase_);
  }

  public static final int RAW_COLUMN_FIELD_NUMBER = 1;
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
   * @return Whether the rawColumn field is set.
   */
  @java.lang.Override
  public boolean hasRawColumn() {
    return implCase_ == 1;
  }
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
   * @return The rawColumn.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.RawColumnKey getRawColumn() {
    if (implCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder getRawColumnOrBuilder() {
    if (implCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
  }

  public static final int SCALAR_FIELD_NUMBER = 2;
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
   * @return Whether the scalar field is set.
   */
  @java.lang.Override
  public boolean hasScalar() {
    return implCase_ == 2;
  }
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
   * @return The scalar.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getScalar() {
    if (implCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getScalarOrBuilder() {
    if (implCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
  }

  public static final int HAS_MANY_FIELD_NUMBER = 3;
  /**
   * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
   * @return Whether the hasMany field is set.
   */
  @java.lang.Override
  public boolean hasHasMany() {
    return implCase_ == 3;
  }
  /**
   * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
   * @return The hasMany.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey getHasMany() {
    if (implCase_ == 3) {
       return (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.HasManyFeatureKeyOrBuilder getHasManyOrBuilder() {
    if (implCase_ == 3) {
       return (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
  }

  public static final int DATAFRAME_FIELD_NUMBER = 4;
  /**
   * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
   * @return Whether the dataframe field is set.
   */
  @java.lang.Override
  public boolean hasDataframe() {
    return implCase_ == 4;
  }
  /**
   * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
   * @return The dataframe.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey getDataframe() {
    if (implCase_ == 4) {
       return (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKeyOrBuilder getDataframeOrBuilder() {
    if (implCase_ == 4) {
       return (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (implCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_);
    }
    if (implCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_);
    }
    if (implCase_ == 3) {
      output.writeMessage(3, (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_);
    }
    if (implCase_ == 4) {
      output.writeMessage(4, (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (implCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_);
    }
    if (implCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_);
    }
    if (implCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_);
    }
    if (implCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.engine.v1.Key)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.engine.v1.Key other = (ai.chalk.protos.chalk.engine.v1.Key) obj;

    if (!getImplCase().equals(other.getImplCase())) return false;
    switch (implCase_) {
      case 1:
        if (!getRawColumn()
            .equals(other.getRawColumn())) return false;
        break;
      case 2:
        if (!getScalar()
            .equals(other.getScalar())) return false;
        break;
      case 3:
        if (!getHasMany()
            .equals(other.getHasMany())) return false;
        break;
      case 4:
        if (!getDataframe()
            .equals(other.getDataframe())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (implCase_) {
      case 1:
        hash = (37 * hash) + RAW_COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getRawColumn().hashCode();
        break;
      case 2:
        hash = (37 * hash) + SCALAR_FIELD_NUMBER;
        hash = (53 * hash) + getScalar().hashCode();
        break;
      case 3:
        hash = (37 * hash) + HAS_MANY_FIELD_NUMBER;
        hash = (53 * hash) + getHasMany().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DATAFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getDataframe().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.engine.v1.Key parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.engine.v1.Key parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.Key parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.engine.v1.Key prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.engine.v1.Key}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.engine.v1.Key)
      ai.chalk.protos.chalk.engine.v1.KeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_Key_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_Key_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.engine.v1.Key.class, ai.chalk.protos.chalk.engine.v1.Key.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.engine.v1.Key.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (rawColumnBuilder_ != null) {
        rawColumnBuilder_.clear();
      }
      if (scalarBuilder_ != null) {
        scalarBuilder_.clear();
      }
      if (hasManyBuilder_ != null) {
        hasManyBuilder_.clear();
      }
      if (dataframeBuilder_ != null) {
        dataframeBuilder_.clear();
      }
      implCase_ = 0;
      impl_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_Key_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.Key getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.engine.v1.Key.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.Key build() {
      ai.chalk.protos.chalk.engine.v1.Key result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.Key buildPartial() {
      ai.chalk.protos.chalk.engine.v1.Key result = new ai.chalk.protos.chalk.engine.v1.Key(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.engine.v1.Key result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.engine.v1.Key result) {
      result.implCase_ = implCase_;
      result.impl_ = this.impl_;
      if (implCase_ == 1 &&
          rawColumnBuilder_ != null) {
        result.impl_ = rawColumnBuilder_.build();
      }
      if (implCase_ == 2 &&
          scalarBuilder_ != null) {
        result.impl_ = scalarBuilder_.build();
      }
      if (implCase_ == 3 &&
          hasManyBuilder_ != null) {
        result.impl_ = hasManyBuilder_.build();
      }
      if (implCase_ == 4 &&
          dataframeBuilder_ != null) {
        result.impl_ = dataframeBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.engine.v1.Key) {
        return mergeFrom((ai.chalk.protos.chalk.engine.v1.Key)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.engine.v1.Key other) {
      if (other == ai.chalk.protos.chalk.engine.v1.Key.getDefaultInstance()) return this;
      switch (other.getImplCase()) {
        case RAW_COLUMN: {
          mergeRawColumn(other.getRawColumn());
          break;
        }
        case SCALAR: {
          mergeScalar(other.getScalar());
          break;
        }
        case HAS_MANY: {
          mergeHasMany(other.getHasMany());
          break;
        }
        case DATAFRAME: {
          mergeDataframe(other.getDataframe());
          break;
        }
        case IMPL_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getRawColumnFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getScalarFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getHasManyFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getDataframeFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 4;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int implCase_ = 0;
    private java.lang.Object impl_;
    public ImplCase
        getImplCase() {
      return ImplCase.forNumber(
          implCase_);
    }

    public Builder clearImpl() {
      implCase_ = 0;
      impl_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder> rawColumnBuilder_;
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     * @return Whether the rawColumn field is set.
     */
    @java.lang.Override
    public boolean hasRawColumn() {
      return implCase_ == 1;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     * @return The rawColumn.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.RawColumnKey getRawColumn() {
      if (rawColumnBuilder_ == null) {
        if (implCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      } else {
        if (implCase_ == 1) {
          return rawColumnBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    public Builder setRawColumn(ai.chalk.protos.chalk.engine.v1.RawColumnKey value) {
      if (rawColumnBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        rawColumnBuilder_.setMessage(value);
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    public Builder setRawColumn(
        ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder builderForValue) {
      if (rawColumnBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        rawColumnBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    public Builder mergeRawColumn(ai.chalk.protos.chalk.engine.v1.RawColumnKey value) {
      if (rawColumnBuilder_ == null) {
        if (implCase_ == 1 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.RawColumnKey.newBuilder((ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 1) {
          rawColumnBuilder_.mergeFrom(value);
        } else {
          rawColumnBuilder_.setMessage(value);
        }
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    public Builder clearRawColumn() {
      if (rawColumnBuilder_ == null) {
        if (implCase_ == 1) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 1) {
          implCase_ = 0;
          impl_ = null;
        }
        rawColumnBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder getRawColumnBuilder() {
      return getRawColumnFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder getRawColumnOrBuilder() {
      if ((implCase_ == 1) && (rawColumnBuilder_ != null)) {
        return rawColumnBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw_column = 1 [json_name = "rawColumn"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder> 
        getRawColumnFieldBuilder() {
      if (rawColumnBuilder_ == null) {
        if (!(implCase_ == 1)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
        }
        rawColumnBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.RawColumnKey) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 1;
      onChanged();
      return rawColumnBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> scalarBuilder_;
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     * @return Whether the scalar field is set.
     */
    @java.lang.Override
    public boolean hasScalar() {
      return implCase_ == 2;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     * @return The scalar.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getScalar() {
      if (scalarBuilder_ == null) {
        if (implCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      } else {
        if (implCase_ == 2) {
          return scalarBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    public Builder setScalar(ai.chalk.protos.chalk.engine.v1.FeatureColumnKey value) {
      if (scalarBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        scalarBuilder_.setMessage(value);
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    public Builder setScalar(
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder builderForValue) {
      if (scalarBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        scalarBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    public Builder mergeScalar(ai.chalk.protos.chalk.engine.v1.FeatureColumnKey value) {
      if (scalarBuilder_ == null) {
        if (implCase_ == 2 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.newBuilder((ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 2) {
          scalarBuilder_.mergeFrom(value);
        } else {
          scalarBuilder_.setMessage(value);
        }
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    public Builder clearScalar() {
      if (scalarBuilder_ == null) {
        if (implCase_ == 2) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 2) {
          implCase_ = 0;
          impl_ = null;
        }
        scalarBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder getScalarBuilder() {
      return getScalarFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getScalarOrBuilder() {
      if ((implCase_ == 2) && (scalarBuilder_ != null)) {
        return scalarBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey scalar = 2 [json_name = "scalar"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> 
        getScalarFieldBuilder() {
      if (scalarBuilder_ == null) {
        if (!(implCase_ == 2)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
        }
        scalarBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 2;
      onChanged();
      return scalarBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKeyOrBuilder> hasManyBuilder_;
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     * @return Whether the hasMany field is set.
     */
    @java.lang.Override
    public boolean hasHasMany() {
      return implCase_ == 3;
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     * @return The hasMany.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey getHasMany() {
      if (hasManyBuilder_ == null) {
        if (implCase_ == 3) {
          return (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
      } else {
        if (implCase_ == 3) {
          return hasManyBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder setHasMany(ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey value) {
      if (hasManyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        hasManyBuilder_.setMessage(value);
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder setHasMany(
        ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.Builder builderForValue) {
      if (hasManyBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        hasManyBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder mergeHasMany(ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey value) {
      if (hasManyBuilder_ == null) {
        if (implCase_ == 3 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.newBuilder((ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 3) {
          hasManyBuilder_.mergeFrom(value);
        } else {
          hasManyBuilder_.setMessage(value);
        }
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    public Builder clearHasMany() {
      if (hasManyBuilder_ == null) {
        if (implCase_ == 3) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 3) {
          implCase_ = 0;
          impl_ = null;
        }
        hasManyBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.Builder getHasManyBuilder() {
      return getHasManyFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.HasManyFeatureKeyOrBuilder getHasManyOrBuilder() {
      if ((implCase_ == 3) && (hasManyBuilder_ != null)) {
        return hasManyBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 3) {
          return (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.HasManyFeatureKey has_many = 3 [json_name = "hasMany"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKeyOrBuilder> 
        getHasManyFieldBuilder() {
      if (hasManyBuilder_ == null) {
        if (!(implCase_ == 3)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.getDefaultInstance();
        }
        hasManyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.HasManyFeatureKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.HasManyFeatureKey) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 3;
      onChanged();
      return hasManyBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKeyOrBuilder> dataframeBuilder_;
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     * @return Whether the dataframe field is set.
     */
    @java.lang.Override
    public boolean hasDataframe() {
      return implCase_ == 4;
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     * @return The dataframe.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey getDataframe() {
      if (dataframeBuilder_ == null) {
        if (implCase_ == 4) {
          return (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
      } else {
        if (implCase_ == 4) {
          return dataframeBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    public Builder setDataframe(ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey value) {
      if (dataframeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        dataframeBuilder_.setMessage(value);
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    public Builder setDataframe(
        ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.Builder builderForValue) {
      if (dataframeBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        dataframeBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    public Builder mergeDataframe(ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey value) {
      if (dataframeBuilder_ == null) {
        if (implCase_ == 4 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.newBuilder((ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 4) {
          dataframeBuilder_.mergeFrom(value);
        } else {
          dataframeBuilder_.setMessage(value);
        }
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    public Builder clearDataframe() {
      if (dataframeBuilder_ == null) {
        if (implCase_ == 4) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 4) {
          implCase_ = 0;
          impl_ = null;
        }
        dataframeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.Builder getDataframeBuilder() {
      return getDataframeFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKeyOrBuilder getDataframeOrBuilder() {
      if ((implCase_ == 4) && (dataframeBuilder_ != null)) {
        return dataframeBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 4) {
          return (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.DataFrameFeatureKey dataframe = 4 [json_name = "dataframe"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKeyOrBuilder> 
        getDataframeFieldBuilder() {
      if (dataframeBuilder_ == null) {
        if (!(implCase_ == 4)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.getDefaultInstance();
        }
        dataframeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey.Builder, ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.DataFrameFeatureKey) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 4;
      onChanged();
      return dataframeBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:chalk.engine.v1.Key)
  }

  // @@protoc_insertion_point(class_scope:chalk.engine.v1.Key)
  private static final ai.chalk.protos.chalk.engine.v1.Key DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.engine.v1.Key();
  }

  public static ai.chalk.protos.chalk.engine.v1.Key getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Key>
      PARSER = new com.google.protobuf.AbstractParser<Key>() {
    @java.lang.Override
    public Key parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Key> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Key> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.Key getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

