// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v1/plan.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.engine.v1;

/**
 * Protobuf type {@code chalk.engine.v1.ColumnKey}
 */
public final class ColumnKey extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:chalk.engine.v1.ColumnKey)
    ColumnKeyOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ColumnKey.class.getName());
  }
  // Use ColumnKey.newBuilder() to construct.
  private ColumnKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ColumnKey() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_ColumnKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_ColumnKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.engine.v1.ColumnKey.class, ai.chalk.protos.chalk.engine.v1.ColumnKey.Builder.class);
  }

  private int keyCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object key_;
  public enum KeyCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    FEATURE(1),
    RAW(2),
    KEY_NOT_SET(0);
    private final int value;
    private KeyCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyCase valueOf(int value) {
      return forNumber(value);
    }

    public static KeyCase forNumber(int value) {
      switch (value) {
        case 1: return FEATURE;
        case 2: return RAW;
        case 0: return KEY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public KeyCase
  getKeyCase() {
    return KeyCase.forNumber(
        keyCase_);
  }

  public static final int FEATURE_FIELD_NUMBER = 1;
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
   * @return Whether the feature field is set.
   */
  @java.lang.Override
  public boolean hasFeature() {
    return keyCase_ == 1;
  }
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
   * @return The feature.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getFeature() {
    if (keyCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_;
    }
    return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getFeatureOrBuilder() {
    if (keyCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_;
    }
    return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
  }

  public static final int RAW_FIELD_NUMBER = 2;
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
   * @return Whether the raw field is set.
   */
  @java.lang.Override
  public boolean hasRaw() {
    return keyCase_ == 2;
  }
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
   * @return The raw.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.RawColumnKey getRaw() {
    if (keyCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_;
    }
    return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder getRawOrBuilder() {
    if (keyCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_;
    }
    return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (keyCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_);
    }
    if (keyCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (keyCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_);
    }
    if (keyCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.engine.v1.ColumnKey)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.engine.v1.ColumnKey other = (ai.chalk.protos.chalk.engine.v1.ColumnKey) obj;

    if (!getKeyCase().equals(other.getKeyCase())) return false;
    switch (keyCase_) {
      case 1:
        if (!getFeature()
            .equals(other.getFeature())) return false;
        break;
      case 2:
        if (!getRaw()
            .equals(other.getRaw())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (keyCase_) {
      case 1:
        hash = (37 * hash) + FEATURE_FIELD_NUMBER;
        hash = (53 * hash) + getFeature().hashCode();
        break;
      case 2:
        hash = (37 * hash) + RAW_FIELD_NUMBER;
        hash = (53 * hash) + getRaw().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.ColumnKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.engine.v1.ColumnKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.engine.v1.ColumnKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.engine.v1.ColumnKey)
      ai.chalk.protos.chalk.engine.v1.ColumnKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_ColumnKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_ColumnKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.engine.v1.ColumnKey.class, ai.chalk.protos.chalk.engine.v1.ColumnKey.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.engine.v1.ColumnKey.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (featureBuilder_ != null) {
        featureBuilder_.clear();
      }
      if (rawBuilder_ != null) {
        rawBuilder_.clear();
      }
      keyCase_ = 0;
      key_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_ColumnKey_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ColumnKey getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.engine.v1.ColumnKey.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ColumnKey build() {
      ai.chalk.protos.chalk.engine.v1.ColumnKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ColumnKey buildPartial() {
      ai.chalk.protos.chalk.engine.v1.ColumnKey result = new ai.chalk.protos.chalk.engine.v1.ColumnKey(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.engine.v1.ColumnKey result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.engine.v1.ColumnKey result) {
      result.keyCase_ = keyCase_;
      result.key_ = this.key_;
      if (keyCase_ == 1 &&
          featureBuilder_ != null) {
        result.key_ = featureBuilder_.build();
      }
      if (keyCase_ == 2 &&
          rawBuilder_ != null) {
        result.key_ = rawBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.engine.v1.ColumnKey) {
        return mergeFrom((ai.chalk.protos.chalk.engine.v1.ColumnKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.engine.v1.ColumnKey other) {
      if (other == ai.chalk.protos.chalk.engine.v1.ColumnKey.getDefaultInstance()) return this;
      switch (other.getKeyCase()) {
        case FEATURE: {
          mergeFeature(other.getFeature());
          break;
        }
        case RAW: {
          mergeRaw(other.getRaw());
          break;
        }
        case KEY_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getFeatureFieldBuilder().getBuilder(),
                  extensionRegistry);
              keyCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getRawFieldBuilder().getBuilder(),
                  extensionRegistry);
              keyCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int keyCase_ = 0;
    private java.lang.Object key_;
    public KeyCase
        getKeyCase() {
      return KeyCase.forNumber(
          keyCase_);
    }

    public Builder clearKey() {
      keyCase_ = 0;
      key_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> featureBuilder_;
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     * @return Whether the feature field is set.
     */
    @java.lang.Override
    public boolean hasFeature() {
      return keyCase_ == 1;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     * @return The feature.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey getFeature() {
      if (featureBuilder_ == null) {
        if (keyCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_;
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      } else {
        if (keyCase_ == 1) {
          return featureBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    public Builder setFeature(ai.chalk.protos.chalk.engine.v1.FeatureColumnKey value) {
      if (featureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        key_ = value;
        onChanged();
      } else {
        featureBuilder_.setMessage(value);
      }
      keyCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    public Builder setFeature(
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder builderForValue) {
      if (featureBuilder_ == null) {
        key_ = builderForValue.build();
        onChanged();
      } else {
        featureBuilder_.setMessage(builderForValue.build());
      }
      keyCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    public Builder mergeFeature(ai.chalk.protos.chalk.engine.v1.FeatureColumnKey value) {
      if (featureBuilder_ == null) {
        if (keyCase_ == 1 &&
            key_ != ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance()) {
          key_ = ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.newBuilder((ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_)
              .mergeFrom(value).buildPartial();
        } else {
          key_ = value;
        }
        onChanged();
      } else {
        if (keyCase_ == 1) {
          featureBuilder_.mergeFrom(value);
        } else {
          featureBuilder_.setMessage(value);
        }
      }
      keyCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    public Builder clearFeature() {
      if (featureBuilder_ == null) {
        if (keyCase_ == 1) {
          keyCase_ = 0;
          key_ = null;
          onChanged();
        }
      } else {
        if (keyCase_ == 1) {
          keyCase_ = 0;
          key_ = null;
        }
        featureBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder getFeatureBuilder() {
      return getFeatureFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder getFeatureOrBuilder() {
      if ((keyCase_ == 1) && (featureBuilder_ != null)) {
        return featureBuilder_.getMessageOrBuilder();
      } else {
        if (keyCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_;
        }
        return ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.FeatureColumnKey feature = 1 [json_name = "feature"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder> 
        getFeatureFieldBuilder() {
      if (featureBuilder_ == null) {
        if (!(keyCase_ == 1)) {
          key_ = ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.getDefaultInstance();
        }
        featureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.FeatureColumnKey, ai.chalk.protos.chalk.engine.v1.FeatureColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.FeatureColumnKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.FeatureColumnKey) key_,
                getParentForChildren(),
                isClean());
        key_ = null;
      }
      keyCase_ = 1;
      onChanged();
      return featureBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder> rawBuilder_;
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     * @return Whether the raw field is set.
     */
    @java.lang.Override
    public boolean hasRaw() {
      return keyCase_ == 2;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     * @return The raw.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.RawColumnKey getRaw() {
      if (rawBuilder_ == null) {
        if (keyCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_;
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      } else {
        if (keyCase_ == 2) {
          return rawBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    public Builder setRaw(ai.chalk.protos.chalk.engine.v1.RawColumnKey value) {
      if (rawBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        key_ = value;
        onChanged();
      } else {
        rawBuilder_.setMessage(value);
      }
      keyCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    public Builder setRaw(
        ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder builderForValue) {
      if (rawBuilder_ == null) {
        key_ = builderForValue.build();
        onChanged();
      } else {
        rawBuilder_.setMessage(builderForValue.build());
      }
      keyCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    public Builder mergeRaw(ai.chalk.protos.chalk.engine.v1.RawColumnKey value) {
      if (rawBuilder_ == null) {
        if (keyCase_ == 2 &&
            key_ != ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance()) {
          key_ = ai.chalk.protos.chalk.engine.v1.RawColumnKey.newBuilder((ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_)
              .mergeFrom(value).buildPartial();
        } else {
          key_ = value;
        }
        onChanged();
      } else {
        if (keyCase_ == 2) {
          rawBuilder_.mergeFrom(value);
        } else {
          rawBuilder_.setMessage(value);
        }
      }
      keyCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    public Builder clearRaw() {
      if (rawBuilder_ == null) {
        if (keyCase_ == 2) {
          keyCase_ = 0;
          key_ = null;
          onChanged();
        }
      } else {
        if (keyCase_ == 2) {
          keyCase_ = 0;
          key_ = null;
        }
        rawBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder getRawBuilder() {
      return getRawFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder getRawOrBuilder() {
      if ((keyCase_ == 2) && (rawBuilder_ != null)) {
        return rawBuilder_.getMessageOrBuilder();
      } else {
        if (keyCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_;
        }
        return ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.RawColumnKey raw = 2 [json_name = "raw"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder> 
        getRawFieldBuilder() {
      if (rawBuilder_ == null) {
        if (!(keyCase_ == 2)) {
          key_ = ai.chalk.protos.chalk.engine.v1.RawColumnKey.getDefaultInstance();
        }
        rawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.RawColumnKey, ai.chalk.protos.chalk.engine.v1.RawColumnKey.Builder, ai.chalk.protos.chalk.engine.v1.RawColumnKeyOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.RawColumnKey) key_,
                getParentForChildren(),
                isClean());
        key_ = null;
      }
      keyCase_ = 2;
      onChanged();
      return rawBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:chalk.engine.v1.ColumnKey)
  }

  // @@protoc_insertion_point(class_scope:chalk.engine.v1.ColumnKey)
  private static final ai.chalk.protos.chalk.engine.v1.ColumnKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.engine.v1.ColumnKey();
  }

  public static ai.chalk.protos.chalk.engine.v1.ColumnKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ColumnKey>
      PARSER = new com.google.protobuf.AbstractParser<ColumnKey>() {
    @java.lang.Override
    public ColumnKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ColumnKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ColumnKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.ColumnKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

