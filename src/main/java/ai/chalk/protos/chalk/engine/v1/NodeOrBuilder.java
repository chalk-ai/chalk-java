// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v1/plan.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.engine.v1;

public interface NodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.engine.v1.Node)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Corresponds to indices in Plan.nodes
   * </pre>
   *
   * <code>repeated uint32 children_indices = 1 [json_name = "childrenIndices"];</code>
   * @return A list containing the childrenIndices.
   */
  java.util.List<java.lang.Integer> getChildrenIndicesList();
  /**
   * <pre>
   * Corresponds to indices in Plan.nodes
   * </pre>
   *
   * <code>repeated uint32 children_indices = 1 [json_name = "childrenIndices"];</code>
   * @return The count of childrenIndices.
   */
  int getChildrenIndicesCount();
  /**
   * <pre>
   * Corresponds to indices in Plan.nodes
   * </pre>
   *
   * <code>repeated uint32 children_indices = 1 [json_name = "childrenIndices"];</code>
   * @param index The index of the element to return.
   * @return The childrenIndices at the given index.
   */
  int getChildrenIndices(int index);

  /**
   * <code>.chalk.engine.v1.NodeImpl impl = 2 [json_name = "impl"];</code>
   * @return Whether the impl field is set.
   */
  boolean hasImpl();
  /**
   * <code>.chalk.engine.v1.NodeImpl impl = 2 [json_name = "impl"];</code>
   * @return The impl.
   */
  ai.chalk.protos.chalk.engine.v1.NodeImpl getImpl();
  /**
   * <code>.chalk.engine.v1.NodeImpl impl = 2 [json_name = "impl"];</code>
   */
  ai.chalk.protos.chalk.engine.v1.NodeImplOrBuilder getImplOrBuilder();
}
