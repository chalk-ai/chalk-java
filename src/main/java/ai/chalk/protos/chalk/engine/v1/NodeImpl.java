// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v1/plan.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.chalk.engine.v1;

/**
 * Protobuf type {@code chalk.engine.v1.NodeImpl}
 */
public final class NodeImpl extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:chalk.engine.v1.NodeImpl)
    NodeImplOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      NodeImpl.class.getName());
  }
  // Use NodeImpl.newBuilder() to construct.
  private NodeImpl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NodeImpl() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_NodeImpl_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_NodeImpl_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.chalk.protos.chalk.engine.v1.NodeImpl.class, ai.chalk.protos.chalk.engine.v1.NodeImpl.Builder.class);
  }

  private int implCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object impl_;
  public enum ImplCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    UNKNOWN(1),
    GIVENS_SCAN(2),
    PROJECT(3),
    CHALK_PROJECT(4),
    DEFAULT_INJECTOR(5),
    IMPL_NOT_SET(0);
    private final int value;
    private ImplCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImplCase valueOf(int value) {
      return forNumber(value);
    }

    public static ImplCase forNumber(int value) {
      switch (value) {
        case 1: return UNKNOWN;
        case 2: return GIVENS_SCAN;
        case 3: return PROJECT;
        case 4: return CHALK_PROJECT;
        case 5: return DEFAULT_INJECTOR;
        case 0: return IMPL_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ImplCase
  getImplCase() {
    return ImplCase.forNumber(
        implCase_);
  }

  public static final int UNKNOWN_FIELD_NUMBER = 1;
  /**
   * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
   * @return Whether the unknown field is set.
   */
  @java.lang.Override
  public boolean hasUnknown() {
    return implCase_ == 1;
  }
  /**
   * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
   * @return The unknown.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.UnknownNode getUnknown() {
    if (implCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.UnknownNodeOrBuilder getUnknownOrBuilder() {
    if (implCase_ == 1) {
       return (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
  }

  public static final int GIVENS_SCAN_FIELD_NUMBER = 2;
  /**
   * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
   * @return Whether the givensScan field is set.
   */
  @java.lang.Override
  public boolean hasGivensScan() {
    return implCase_ == 2;
  }
  /**
   * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
   * @return The givensScan.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.GivensScan getGivensScan() {
    if (implCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.GivensScanOrBuilder getGivensScanOrBuilder() {
    if (implCase_ == 2) {
       return (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
  }

  public static final int PROJECT_FIELD_NUMBER = 3;
  /**
   * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
   * @return Whether the project field is set.
   */
  @java.lang.Override
  public boolean hasProject() {
    return implCase_ == 3;
  }
  /**
   * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
   * @return The project.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.Project getProject() {
    if (implCase_ == 3) {
       return (ai.chalk.protos.chalk.engine.v1.Project) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.ProjectOrBuilder getProjectOrBuilder() {
    if (implCase_ == 3) {
       return (ai.chalk.protos.chalk.engine.v1.Project) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
  }

  public static final int CHALK_PROJECT_FIELD_NUMBER = 4;
  /**
   * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
   * @return Whether the chalkProject field is set.
   */
  @java.lang.Override
  public boolean hasChalkProject() {
    return implCase_ == 4;
  }
  /**
   * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
   * @return The chalkProject.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.ChalkProject getChalkProject() {
    if (implCase_ == 4) {
       return (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.ChalkProjectOrBuilder getChalkProjectOrBuilder() {
    if (implCase_ == 4) {
       return (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
  }

  public static final int DEFAULT_INJECTOR_FIELD_NUMBER = 5;
  /**
   * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
   * @return Whether the defaultInjector field is set.
   */
  @java.lang.Override
  public boolean hasDefaultInjector() {
    return implCase_ == 5;
  }
  /**
   * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
   * @return The defaultInjector.
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.DefaultInjector getDefaultInjector() {
    if (implCase_ == 5) {
       return (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
  }
  /**
   * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
   */
  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.DefaultInjectorOrBuilder getDefaultInjectorOrBuilder() {
    if (implCase_ == 5) {
       return (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_;
    }
    return ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (implCase_ == 1) {
      output.writeMessage(1, (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_);
    }
    if (implCase_ == 2) {
      output.writeMessage(2, (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_);
    }
    if (implCase_ == 3) {
      output.writeMessage(3, (ai.chalk.protos.chalk.engine.v1.Project) impl_);
    }
    if (implCase_ == 4) {
      output.writeMessage(4, (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_);
    }
    if (implCase_ == 5) {
      output.writeMessage(5, (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (implCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_);
    }
    if (implCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_);
    }
    if (implCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ai.chalk.protos.chalk.engine.v1.Project) impl_);
    }
    if (implCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_);
    }
    if (implCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.chalk.protos.chalk.engine.v1.NodeImpl)) {
      return super.equals(obj);
    }
    ai.chalk.protos.chalk.engine.v1.NodeImpl other = (ai.chalk.protos.chalk.engine.v1.NodeImpl) obj;

    if (!getImplCase().equals(other.getImplCase())) return false;
    switch (implCase_) {
      case 1:
        if (!getUnknown()
            .equals(other.getUnknown())) return false;
        break;
      case 2:
        if (!getGivensScan()
            .equals(other.getGivensScan())) return false;
        break;
      case 3:
        if (!getProject()
            .equals(other.getProject())) return false;
        break;
      case 4:
        if (!getChalkProject()
            .equals(other.getChalkProject())) return false;
        break;
      case 5:
        if (!getDefaultInjector()
            .equals(other.getDefaultInjector())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (implCase_) {
      case 1:
        hash = (37 * hash) + UNKNOWN_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown().hashCode();
        break;
      case 2:
        hash = (37 * hash) + GIVENS_SCAN_FIELD_NUMBER;
        hash = (53 * hash) + getGivensScan().hashCode();
        break;
      case 3:
        hash = (37 * hash) + PROJECT_FIELD_NUMBER;
        hash = (53 * hash) + getProject().hashCode();
        break;
      case 4:
        hash = (37 * hash) + CHALK_PROJECT_FIELD_NUMBER;
        hash = (53 * hash) + getChalkProject().hashCode();
        break;
      case 5:
        hash = (37 * hash) + DEFAULT_INJECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultInjector().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.chalk.protos.chalk.engine.v1.NodeImpl parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.chalk.protos.chalk.engine.v1.NodeImpl prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code chalk.engine.v1.NodeImpl}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:chalk.engine.v1.NodeImpl)
      ai.chalk.protos.chalk.engine.v1.NodeImplOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_NodeImpl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_NodeImpl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.chalk.protos.chalk.engine.v1.NodeImpl.class, ai.chalk.protos.chalk.engine.v1.NodeImpl.Builder.class);
    }

    // Construct using ai.chalk.protos.chalk.engine.v1.NodeImpl.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (unknownBuilder_ != null) {
        unknownBuilder_.clear();
      }
      if (givensScanBuilder_ != null) {
        givensScanBuilder_.clear();
      }
      if (projectBuilder_ != null) {
        projectBuilder_.clear();
      }
      if (chalkProjectBuilder_ != null) {
        chalkProjectBuilder_.clear();
      }
      if (defaultInjectorBuilder_ != null) {
        defaultInjectorBuilder_.clear();
      }
      implCase_ = 0;
      impl_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.chalk.protos.chalk.engine.v1.PlanProto.internal_static_chalk_engine_v1_NodeImpl_descriptor;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.NodeImpl getDefaultInstanceForType() {
      return ai.chalk.protos.chalk.engine.v1.NodeImpl.getDefaultInstance();
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.NodeImpl build() {
      ai.chalk.protos.chalk.engine.v1.NodeImpl result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.NodeImpl buildPartial() {
      ai.chalk.protos.chalk.engine.v1.NodeImpl result = new ai.chalk.protos.chalk.engine.v1.NodeImpl(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.chalk.protos.chalk.engine.v1.NodeImpl result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.chalk.protos.chalk.engine.v1.NodeImpl result) {
      result.implCase_ = implCase_;
      result.impl_ = this.impl_;
      if (implCase_ == 1 &&
          unknownBuilder_ != null) {
        result.impl_ = unknownBuilder_.build();
      }
      if (implCase_ == 2 &&
          givensScanBuilder_ != null) {
        result.impl_ = givensScanBuilder_.build();
      }
      if (implCase_ == 3 &&
          projectBuilder_ != null) {
        result.impl_ = projectBuilder_.build();
      }
      if (implCase_ == 4 &&
          chalkProjectBuilder_ != null) {
        result.impl_ = chalkProjectBuilder_.build();
      }
      if (implCase_ == 5 &&
          defaultInjectorBuilder_ != null) {
        result.impl_ = defaultInjectorBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.chalk.protos.chalk.engine.v1.NodeImpl) {
        return mergeFrom((ai.chalk.protos.chalk.engine.v1.NodeImpl)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.chalk.protos.chalk.engine.v1.NodeImpl other) {
      if (other == ai.chalk.protos.chalk.engine.v1.NodeImpl.getDefaultInstance()) return this;
      switch (other.getImplCase()) {
        case UNKNOWN: {
          mergeUnknown(other.getUnknown());
          break;
        }
        case GIVENS_SCAN: {
          mergeGivensScan(other.getGivensScan());
          break;
        }
        case PROJECT: {
          mergeProject(other.getProject());
          break;
        }
        case CHALK_PROJECT: {
          mergeChalkProject(other.getChalkProject());
          break;
        }
        case DEFAULT_INJECTOR: {
          mergeDefaultInjector(other.getDefaultInjector());
          break;
        }
        case IMPL_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getUnknownFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getGivensScanFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getProjectFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getChalkProjectFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getDefaultInjectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              implCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int implCase_ = 0;
    private java.lang.Object impl_;
    public ImplCase
        getImplCase() {
      return ImplCase.forNumber(
          implCase_);
    }

    public Builder clearImpl() {
      implCase_ = 0;
      impl_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.UnknownNode, ai.chalk.protos.chalk.engine.v1.UnknownNode.Builder, ai.chalk.protos.chalk.engine.v1.UnknownNodeOrBuilder> unknownBuilder_;
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     * @return Whether the unknown field is set.
     */
    @java.lang.Override
    public boolean hasUnknown() {
      return implCase_ == 1;
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     * @return The unknown.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.UnknownNode getUnknown() {
      if (unknownBuilder_ == null) {
        if (implCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
      } else {
        if (implCase_ == 1) {
          return unknownBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    public Builder setUnknown(ai.chalk.protos.chalk.engine.v1.UnknownNode value) {
      if (unknownBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        unknownBuilder_.setMessage(value);
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    public Builder setUnknown(
        ai.chalk.protos.chalk.engine.v1.UnknownNode.Builder builderForValue) {
      if (unknownBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        unknownBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    public Builder mergeUnknown(ai.chalk.protos.chalk.engine.v1.UnknownNode value) {
      if (unknownBuilder_ == null) {
        if (implCase_ == 1 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.UnknownNode.newBuilder((ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 1) {
          unknownBuilder_.mergeFrom(value);
        } else {
          unknownBuilder_.setMessage(value);
        }
      }
      implCase_ = 1;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    public Builder clearUnknown() {
      if (unknownBuilder_ == null) {
        if (implCase_ == 1) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 1) {
          implCase_ = 0;
          impl_ = null;
        }
        unknownBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.UnknownNode.Builder getUnknownBuilder() {
      return getUnknownFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.UnknownNodeOrBuilder getUnknownOrBuilder() {
      if ((implCase_ == 1) && (unknownBuilder_ != null)) {
        return unknownBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 1) {
          return (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.UnknownNode unknown = 1 [json_name = "unknown"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.UnknownNode, ai.chalk.protos.chalk.engine.v1.UnknownNode.Builder, ai.chalk.protos.chalk.engine.v1.UnknownNodeOrBuilder> 
        getUnknownFieldBuilder() {
      if (unknownBuilder_ == null) {
        if (!(implCase_ == 1)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.UnknownNode.getDefaultInstance();
        }
        unknownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.UnknownNode, ai.chalk.protos.chalk.engine.v1.UnknownNode.Builder, ai.chalk.protos.chalk.engine.v1.UnknownNodeOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.UnknownNode) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 1;
      onChanged();
      return unknownBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.GivensScan, ai.chalk.protos.chalk.engine.v1.GivensScan.Builder, ai.chalk.protos.chalk.engine.v1.GivensScanOrBuilder> givensScanBuilder_;
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     * @return Whether the givensScan field is set.
     */
    @java.lang.Override
    public boolean hasGivensScan() {
      return implCase_ == 2;
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     * @return The givensScan.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.GivensScan getGivensScan() {
      if (givensScanBuilder_ == null) {
        if (implCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
      } else {
        if (implCase_ == 2) {
          return givensScanBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    public Builder setGivensScan(ai.chalk.protos.chalk.engine.v1.GivensScan value) {
      if (givensScanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        givensScanBuilder_.setMessage(value);
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    public Builder setGivensScan(
        ai.chalk.protos.chalk.engine.v1.GivensScan.Builder builderForValue) {
      if (givensScanBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        givensScanBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    public Builder mergeGivensScan(ai.chalk.protos.chalk.engine.v1.GivensScan value) {
      if (givensScanBuilder_ == null) {
        if (implCase_ == 2 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.GivensScan.newBuilder((ai.chalk.protos.chalk.engine.v1.GivensScan) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 2) {
          givensScanBuilder_.mergeFrom(value);
        } else {
          givensScanBuilder_.setMessage(value);
        }
      }
      implCase_ = 2;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    public Builder clearGivensScan() {
      if (givensScanBuilder_ == null) {
        if (implCase_ == 2) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 2) {
          implCase_ = 0;
          impl_ = null;
        }
        givensScanBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.GivensScan.Builder getGivensScanBuilder() {
      return getGivensScanFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.GivensScanOrBuilder getGivensScanOrBuilder() {
      if ((implCase_ == 2) && (givensScanBuilder_ != null)) {
        return givensScanBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 2) {
          return (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.GivensScan givens_scan = 2 [json_name = "givensScan"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.GivensScan, ai.chalk.protos.chalk.engine.v1.GivensScan.Builder, ai.chalk.protos.chalk.engine.v1.GivensScanOrBuilder> 
        getGivensScanFieldBuilder() {
      if (givensScanBuilder_ == null) {
        if (!(implCase_ == 2)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.GivensScan.getDefaultInstance();
        }
        givensScanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.GivensScan, ai.chalk.protos.chalk.engine.v1.GivensScan.Builder, ai.chalk.protos.chalk.engine.v1.GivensScanOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.GivensScan) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 2;
      onChanged();
      return givensScanBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.Project, ai.chalk.protos.chalk.engine.v1.Project.Builder, ai.chalk.protos.chalk.engine.v1.ProjectOrBuilder> projectBuilder_;
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     * @return Whether the project field is set.
     */
    @java.lang.Override
    public boolean hasProject() {
      return implCase_ == 3;
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     * @return The project.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.Project getProject() {
      if (projectBuilder_ == null) {
        if (implCase_ == 3) {
          return (ai.chalk.protos.chalk.engine.v1.Project) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
      } else {
        if (implCase_ == 3) {
          return projectBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    public Builder setProject(ai.chalk.protos.chalk.engine.v1.Project value) {
      if (projectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        projectBuilder_.setMessage(value);
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    public Builder setProject(
        ai.chalk.protos.chalk.engine.v1.Project.Builder builderForValue) {
      if (projectBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        projectBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    public Builder mergeProject(ai.chalk.protos.chalk.engine.v1.Project value) {
      if (projectBuilder_ == null) {
        if (implCase_ == 3 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.Project.newBuilder((ai.chalk.protos.chalk.engine.v1.Project) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 3) {
          projectBuilder_.mergeFrom(value);
        } else {
          projectBuilder_.setMessage(value);
        }
      }
      implCase_ = 3;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    public Builder clearProject() {
      if (projectBuilder_ == null) {
        if (implCase_ == 3) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 3) {
          implCase_ = 0;
          impl_ = null;
        }
        projectBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.Project.Builder getProjectBuilder() {
      return getProjectFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ProjectOrBuilder getProjectOrBuilder() {
      if ((implCase_ == 3) && (projectBuilder_ != null)) {
        return projectBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 3) {
          return (ai.chalk.protos.chalk.engine.v1.Project) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.Project project = 3 [json_name = "project"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.Project, ai.chalk.protos.chalk.engine.v1.Project.Builder, ai.chalk.protos.chalk.engine.v1.ProjectOrBuilder> 
        getProjectFieldBuilder() {
      if (projectBuilder_ == null) {
        if (!(implCase_ == 3)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.Project.getDefaultInstance();
        }
        projectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.Project, ai.chalk.protos.chalk.engine.v1.Project.Builder, ai.chalk.protos.chalk.engine.v1.ProjectOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.Project) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 3;
      onChanged();
      return projectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.ChalkProject, ai.chalk.protos.chalk.engine.v1.ChalkProject.Builder, ai.chalk.protos.chalk.engine.v1.ChalkProjectOrBuilder> chalkProjectBuilder_;
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     * @return Whether the chalkProject field is set.
     */
    @java.lang.Override
    public boolean hasChalkProject() {
      return implCase_ == 4;
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     * @return The chalkProject.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ChalkProject getChalkProject() {
      if (chalkProjectBuilder_ == null) {
        if (implCase_ == 4) {
          return (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
      } else {
        if (implCase_ == 4) {
          return chalkProjectBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    public Builder setChalkProject(ai.chalk.protos.chalk.engine.v1.ChalkProject value) {
      if (chalkProjectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        chalkProjectBuilder_.setMessage(value);
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    public Builder setChalkProject(
        ai.chalk.protos.chalk.engine.v1.ChalkProject.Builder builderForValue) {
      if (chalkProjectBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        chalkProjectBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    public Builder mergeChalkProject(ai.chalk.protos.chalk.engine.v1.ChalkProject value) {
      if (chalkProjectBuilder_ == null) {
        if (implCase_ == 4 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.ChalkProject.newBuilder((ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 4) {
          chalkProjectBuilder_.mergeFrom(value);
        } else {
          chalkProjectBuilder_.setMessage(value);
        }
      }
      implCase_ = 4;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    public Builder clearChalkProject() {
      if (chalkProjectBuilder_ == null) {
        if (implCase_ == 4) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 4) {
          implCase_ = 0;
          impl_ = null;
        }
        chalkProjectBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.ChalkProject.Builder getChalkProjectBuilder() {
      return getChalkProjectFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.ChalkProjectOrBuilder getChalkProjectOrBuilder() {
      if ((implCase_ == 4) && (chalkProjectBuilder_ != null)) {
        return chalkProjectBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 4) {
          return (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.ChalkProject chalk_project = 4 [json_name = "chalkProject"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.ChalkProject, ai.chalk.protos.chalk.engine.v1.ChalkProject.Builder, ai.chalk.protos.chalk.engine.v1.ChalkProjectOrBuilder> 
        getChalkProjectFieldBuilder() {
      if (chalkProjectBuilder_ == null) {
        if (!(implCase_ == 4)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.ChalkProject.getDefaultInstance();
        }
        chalkProjectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.ChalkProject, ai.chalk.protos.chalk.engine.v1.ChalkProject.Builder, ai.chalk.protos.chalk.engine.v1.ChalkProjectOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.ChalkProject) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 4;
      onChanged();
      return chalkProjectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.DefaultInjector, ai.chalk.protos.chalk.engine.v1.DefaultInjector.Builder, ai.chalk.protos.chalk.engine.v1.DefaultInjectorOrBuilder> defaultInjectorBuilder_;
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     * @return Whether the defaultInjector field is set.
     */
    @java.lang.Override
    public boolean hasDefaultInjector() {
      return implCase_ == 5;
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     * @return The defaultInjector.
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.DefaultInjector getDefaultInjector() {
      if (defaultInjectorBuilder_ == null) {
        if (implCase_ == 5) {
          return (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
      } else {
        if (implCase_ == 5) {
          return defaultInjectorBuilder_.getMessage();
        }
        return ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    public Builder setDefaultInjector(ai.chalk.protos.chalk.engine.v1.DefaultInjector value) {
      if (defaultInjectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        impl_ = value;
        onChanged();
      } else {
        defaultInjectorBuilder_.setMessage(value);
      }
      implCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    public Builder setDefaultInjector(
        ai.chalk.protos.chalk.engine.v1.DefaultInjector.Builder builderForValue) {
      if (defaultInjectorBuilder_ == null) {
        impl_ = builderForValue.build();
        onChanged();
      } else {
        defaultInjectorBuilder_.setMessage(builderForValue.build());
      }
      implCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    public Builder mergeDefaultInjector(ai.chalk.protos.chalk.engine.v1.DefaultInjector value) {
      if (defaultInjectorBuilder_ == null) {
        if (implCase_ == 5 &&
            impl_ != ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance()) {
          impl_ = ai.chalk.protos.chalk.engine.v1.DefaultInjector.newBuilder((ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_)
              .mergeFrom(value).buildPartial();
        } else {
          impl_ = value;
        }
        onChanged();
      } else {
        if (implCase_ == 5) {
          defaultInjectorBuilder_.mergeFrom(value);
        } else {
          defaultInjectorBuilder_.setMessage(value);
        }
      }
      implCase_ = 5;
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    public Builder clearDefaultInjector() {
      if (defaultInjectorBuilder_ == null) {
        if (implCase_ == 5) {
          implCase_ = 0;
          impl_ = null;
          onChanged();
        }
      } else {
        if (implCase_ == 5) {
          implCase_ = 0;
          impl_ = null;
        }
        defaultInjectorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    public ai.chalk.protos.chalk.engine.v1.DefaultInjector.Builder getDefaultInjectorBuilder() {
      return getDefaultInjectorFieldBuilder().getBuilder();
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    @java.lang.Override
    public ai.chalk.protos.chalk.engine.v1.DefaultInjectorOrBuilder getDefaultInjectorOrBuilder() {
      if ((implCase_ == 5) && (defaultInjectorBuilder_ != null)) {
        return defaultInjectorBuilder_.getMessageOrBuilder();
      } else {
        if (implCase_ == 5) {
          return (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_;
        }
        return ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
      }
    }
    /**
     * <code>.chalk.engine.v1.DefaultInjector default_injector = 5 [json_name = "defaultInjector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.chalk.protos.chalk.engine.v1.DefaultInjector, ai.chalk.protos.chalk.engine.v1.DefaultInjector.Builder, ai.chalk.protos.chalk.engine.v1.DefaultInjectorOrBuilder> 
        getDefaultInjectorFieldBuilder() {
      if (defaultInjectorBuilder_ == null) {
        if (!(implCase_ == 5)) {
          impl_ = ai.chalk.protos.chalk.engine.v1.DefaultInjector.getDefaultInstance();
        }
        defaultInjectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.chalk.protos.chalk.engine.v1.DefaultInjector, ai.chalk.protos.chalk.engine.v1.DefaultInjector.Builder, ai.chalk.protos.chalk.engine.v1.DefaultInjectorOrBuilder>(
                (ai.chalk.protos.chalk.engine.v1.DefaultInjector) impl_,
                getParentForChildren(),
                isClean());
        impl_ = null;
      }
      implCase_ = 5;
      onChanged();
      return defaultInjectorBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:chalk.engine.v1.NodeImpl)
  }

  // @@protoc_insertion_point(class_scope:chalk.engine.v1.NodeImpl)
  private static final ai.chalk.protos.chalk.engine.v1.NodeImpl DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.chalk.protos.chalk.engine.v1.NodeImpl();
  }

  public static ai.chalk.protos.chalk.engine.v1.NodeImpl getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NodeImpl>
      PARSER = new com.google.protobuf.AbstractParser<NodeImpl>() {
    @java.lang.Override
    public NodeImpl parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NodeImpl> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NodeImpl> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.chalk.protos.chalk.engine.v1.NodeImpl getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

