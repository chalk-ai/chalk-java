// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chalk/engine/v2/feature_values_chart.proto

// Protobuf Java Version: 3.25.1
package ai.chalk.protos.chalk.engine.v2;

public interface FeatureValueSeriesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chalk.engine.v2.FeatureValueSeries)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string feature_fqn = 1 [json_name = "featureFqn"];</code>
   * @return The featureFqn.
   */
  java.lang.String getFeatureFqn();
  /**
   * <code>string feature_fqn = 1 [json_name = "featureFqn"];</code>
   * @return The bytes for featureFqn.
   */
  com.google.protobuf.ByteString
      getFeatureFqnBytes();

  /**
   * <pre>
   * If the user passes in a series title, uses that. Otherwise, will compose a title based on the fqn and the function used
   * </pre>
   *
   * <code>optional string series_title = 2 [json_name = "seriesTitle"];</code>
   * @return Whether the seriesTitle field is set.
   */
  boolean hasSeriesTitle();
  /**
   * <pre>
   * If the user passes in a series title, uses that. Otherwise, will compose a title based on the fqn and the function used
   * </pre>
   *
   * <code>optional string series_title = 2 [json_name = "seriesTitle"];</code>
   * @return The seriesTitle.
   */
  java.lang.String getSeriesTitle();
  /**
   * <pre>
   * If the user passes in a series title, uses that. Otherwise, will compose a title based on the fqn and the function used
   * </pre>
   *
   * <code>optional string series_title = 2 [json_name = "seriesTitle"];</code>
   * @return The bytes for seriesTitle.
   */
  com.google.protobuf.ByteString
      getSeriesTitleBytes();

  /**
   * <code>.chalk.engine.v2.FeatureValueBaseWindowFunction base_window_function = 3 [json_name = "baseWindowFunction"];</code>
   * @return Whether the baseWindowFunction field is set.
   */
  boolean hasBaseWindowFunction();
  /**
   * <code>.chalk.engine.v2.FeatureValueBaseWindowFunction base_window_function = 3 [json_name = "baseWindowFunction"];</code>
   * @return The enum numeric value on the wire for baseWindowFunction.
   */
  int getBaseWindowFunctionValue();
  /**
   * <code>.chalk.engine.v2.FeatureValueBaseWindowFunction base_window_function = 3 [json_name = "baseWindowFunction"];</code>
   * @return The baseWindowFunction.
   */
  ai.chalk.protos.chalk.engine.v2.FeatureValueBaseWindowFunction getBaseWindowFunction();

  /**
   * <code>.chalk.engine.v2.FeatureValuePercentileWindowFunction percentile_window_function = 4 [json_name = "percentileWindowFunction"];</code>
   * @return Whether the percentileWindowFunction field is set.
   */
  boolean hasPercentileWindowFunction();
  /**
   * <code>.chalk.engine.v2.FeatureValuePercentileWindowFunction percentile_window_function = 4 [json_name = "percentileWindowFunction"];</code>
   * @return The percentileWindowFunction.
   */
  ai.chalk.protos.chalk.engine.v2.FeatureValuePercentileWindowFunction getPercentileWindowFunction();
  /**
   * <code>.chalk.engine.v2.FeatureValuePercentileWindowFunction percentile_window_function = 4 [json_name = "percentileWindowFunction"];</code>
   */
  ai.chalk.protos.chalk.engine.v2.FeatureValuePercentileWindowFunctionOrBuilder getPercentileWindowFunctionOrBuilder();

  ai.chalk.protos.chalk.engine.v2.FeatureValueSeries.WindowFunctionCase getWindowFunctionCase();
}
