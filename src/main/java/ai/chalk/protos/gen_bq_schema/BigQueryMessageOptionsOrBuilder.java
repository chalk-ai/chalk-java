// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gen_bq_schema/bq_table.proto

// Protobuf Java Version: 4.26.1
package ai.chalk.protos.gen_bq_schema;

public interface BigQueryMessageOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gen_bq_schema.BigQueryMessageOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies a name of table in BigQuery for the message.
   *
   * If not blank, indicates the message is a type of record to be stored into BigQuery.
   * </pre>
   *
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The tableName.
   */
  java.lang.String getTableName();
  /**
   * <pre>
   * Specifies a name of table in BigQuery for the message.
   *
   * If not blank, indicates the message is a type of record to be stored into BigQuery.
   * </pre>
   *
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The bytes for tableName.
   */
  com.google.protobuf.ByteString
      getTableNameBytes();

  /**
   * <pre>
   * If true, BigQuery field names will default to a field's JSON name,
   * not its original/proto field name.
   * </pre>
   *
   * <code>bool use_json_names = 2 [json_name = "useJsonNames"];</code>
   * @return The useJsonNames.
   */
  boolean getUseJsonNames();

  /**
   * <pre>
   * If set, adds defined extra fields to a JSON representation of the message.
   * Value format: "&lt;field name&gt;:&lt;BigQuery field type&gt;" for basic types
   * or "&lt;field name&gt;:RECORD:&lt;protobuf type&gt;" for message types.
   * "NULLABLE" by default, different mode may be set via optional suffix ":&lt;mode&gt;"
   * </pre>
   *
   * <code>repeated string extra_fields = 3 [json_name = "extraFields"];</code>
   * @return A list containing the extraFields.
   */
  java.util.List<java.lang.String>
      getExtraFieldsList();
  /**
   * <pre>
   * If set, adds defined extra fields to a JSON representation of the message.
   * Value format: "&lt;field name&gt;:&lt;BigQuery field type&gt;" for basic types
   * or "&lt;field name&gt;:RECORD:&lt;protobuf type&gt;" for message types.
   * "NULLABLE" by default, different mode may be set via optional suffix ":&lt;mode&gt;"
   * </pre>
   *
   * <code>repeated string extra_fields = 3 [json_name = "extraFields"];</code>
   * @return The count of extraFields.
   */
  int getExtraFieldsCount();
  /**
   * <pre>
   * If set, adds defined extra fields to a JSON representation of the message.
   * Value format: "&lt;field name&gt;:&lt;BigQuery field type&gt;" for basic types
   * or "&lt;field name&gt;:RECORD:&lt;protobuf type&gt;" for message types.
   * "NULLABLE" by default, different mode may be set via optional suffix ":&lt;mode&gt;"
   * </pre>
   *
   * <code>repeated string extra_fields = 3 [json_name = "extraFields"];</code>
   * @param index The index of the element to return.
   * @return The extraFields at the given index.
   */
  java.lang.String getExtraFields(int index);
  /**
   * <pre>
   * If set, adds defined extra fields to a JSON representation of the message.
   * Value format: "&lt;field name&gt;:&lt;BigQuery field type&gt;" for basic types
   * or "&lt;field name&gt;:RECORD:&lt;protobuf type&gt;" for message types.
   * "NULLABLE" by default, different mode may be set via optional suffix ":&lt;mode&gt;"
   * </pre>
   *
   * <code>repeated string extra_fields = 3 [json_name = "extraFields"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the extraFields at the given index.
   */
  com.google.protobuf.ByteString
      getExtraFieldsBytes(int index);
}
