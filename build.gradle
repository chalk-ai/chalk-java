plugins {
    id "maven-publish"
    id "java-library"
    id "io.freefair.lombok" version "8.3"
}

group 'ai.chalk'
version '0.3.3'

repositories {
    mavenCentral()
}

dependencies {
    api 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    api 'org.apache.arrow:arrow-memory-netty:13.0.0'
    api 'org.apache.arrow:arrow-compression:13.0.0'
    api 'org.apache.arrow:arrow-vector:13.0.0'
    api 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
}

test {
    useJUnitPlatform()
    jvmArgs '--add-opens=java.base/java.nio=ALL-UNNAMED'
}


task compileJava17(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = sourceSets.main.compileClasspath
    getDestinationDirectory().set(layout.buildDirectory.dir("classes/java17"))
    options.fork = true
    options.forkOptions.javaHome = file("/opt/homebrew/Cellar/openjdk@17/17.0.8.1")
    sourceCompatibility = '17'
    targetCompatibility = '17'
    options.annotationProcessorPath = configurations.annotationProcessor
}

task jarJava17(type: Jar) {
    from sourceSets.main.output.classesDirs
    archiveClassifier.set('jdk17')
    archiveVersion.set("0.3.3-jdk17")
}

task compileJava20(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = sourceSets.main.compileClasspath
    getDestinationDirectory().set(layout.buildDirectory.dir("classes/java20"))
    options.fork = true
    options.forkOptions.javaHome = file("/opt/homebrew/Cellar/openjdk/20.0.1")
    sourceCompatibility = '20'
    targetCompatibility = '20'
    options.annotationProcessorPath = configurations.annotationProcessor
}

task jarJava20(type: Jar) {
    from sourceSets.main.output.classesDirs
    archiveClassifier.set('jdk20')
    archiveVersion.set("0.3.3-jdk20")
}

def configurePom = { pom ->
    pom.name = 'Chalk Java'
    pom.description = 'The Java client for Chalk'
    pom.url = 'https://github.com/chalk-ai/chalk-java'

    pom.licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    pom.developers {
        developer {
            id = 'chalk-ai'
            name = 'Chalk'
            email = 'support@chalk.ai'
        }
    }

    pom.scm {
        connection = 'scm:git:git://github.com/chalk-ai/chalk-java.git'
        developerConnection = 'scm:git:ssh://github.com:chalk-ai/chalk-java.git'
        url = 'https://github.com/chalk-ai/chalk-java/'
    }
}

publishing {
    publications {
        jdk17(MavenPublication) {
            artifactId = 'chalk-java-jdk17'
            from components.java
            artifact jarJava17
        }

        jdk20(MavenPublication) {
            artifactId = 'chalk-java-jdk20'
            from components.java
            artifact jarJava20
        }
    }

    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri("https://maven.pkg.github.com/chalk-ai/chalk-java")

            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME_GITHUB")
                password = project.findProperty("gpr.token") ?: System.getenv("TOKEN_GITHUB")
            }
        }
    }
}